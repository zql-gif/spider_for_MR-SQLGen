{"db_id": "soccer_3", "query": "SELECT count(*) FROM club", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "club"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "club"], "question": "How many clubs are there?", "question_toks": ["How", "many", "clubs", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT count(*) FROM club", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "club"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "club"], "question": "Count the number of clubs.", "question_toks": ["Count", "the", "number", "of", "clubs", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Name FROM club ORDER BY Name ASC", "query_toks": ["SELECT", "Name", "FROM", "club", "ORDER", "BY", "Name", "ASC"], "query_toks_no_value": ["select", "name", "from", "club", "order", "by", "name", "asc"], "question": "List the name of clubs in ascending alphabetical order.", "question_toks": ["List", "the", "name", "of", "clubs", "in", "ascending", "alphabetical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 2, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Name FROM club ORDER BY Name ASC", "query_toks": ["SELECT", "Name", "FROM", "club", "ORDER", "BY", "Name", "ASC"], "query_toks_no_value": ["select", "name", "from", "club", "order", "by", "name", "asc"], "question": "What are the names of clubs, ordered alphabetically?", "question_toks": ["What", "are", "the", "names", "of", "clubs", ",", "ordered", "alphabetically", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 2, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Manager ,  Captain FROM club", "query_toks": ["SELECT", "Manager", ",", "Captain", "FROM", "club"], "query_toks_no_value": ["select", "manager", ",", "captain", "from", "club"], "question": "What are the managers and captains of clubs?", "question_toks": ["What", "are", "the", "managers", "and", "captains", "of", "clubs", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Manager ,  Captain FROM club", "query_toks": ["SELECT", "Manager", ",", "Captain", "FROM", "club"], "query_toks_no_value": ["select", "manager", ",", "captain", "from", "club"], "question": "Return the managers and captains of all clubs.", "question_toks": ["Return", "the", "managers", "and", "captains", "of", "all", "clubs", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Name FROM club WHERE Manufacturer != \"Nike\"", "query_toks": ["SELECT", "Name", "FROM", "club", "WHERE", "Manufacturer", "!", "=", "``", "Nike", "''"], "query_toks_no_value": ["select", "name", "from", "club", "where", "manufacturer", "!", "=", "value"], "question": "List the name of clubs whose manufacturer is not \"Nike\"", "question_toks": ["List", "the", "name", "of", "clubs", "whose", "manufacturer", "is", "not", "``", "Nike", "''"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"Nike\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Name FROM club WHERE Manufacturer != \"Nike\"", "query_toks": ["SELECT", "Name", "FROM", "club", "WHERE", "Manufacturer", "!", "=", "``", "Nike", "''"], "query_toks_no_value": ["select", "name", "from", "club", "where", "manufacturer", "!", "=", "value"], "question": "What are the names of clubs who do not have the manufacturer Nike?", "question_toks": ["What", "are", "the", "names", "of", "clubs", "who", "do", "not", "have", "the", "manufacturer", "Nike", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"Nike\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Name FROM player ORDER BY Wins_count ASC", "query_toks": ["SELECT", "Name", "FROM", "player", "ORDER", "BY", "Wins_count", "ASC"], "query_toks_no_value": ["select", "name", "from", "player", "order", "by", "wins_count", "asc"], "question": "What are the names of players in ascending order of wins count?", "question_toks": ["What", "are", "the", "names", "of", "players", "in", "ascending", "order", "of", "wins", "count", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 12, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Name FROM player ORDER BY Wins_count ASC", "query_toks": ["SELECT", "Name", "FROM", "player", "ORDER", "BY", "Wins_count", "ASC"], "query_toks_no_value": ["select", "name", "from", "player", "order", "by", "wins_count", "asc"], "question": "Return the names of players in order of count of wins, ascending.", "question_toks": ["Return", "the", "names", "of", "players", "in", "order", "of", "count", "of", "wins", ",", "ascending", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 12, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "player", "ORDER", "BY", "Earnings", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "player", "order", "by", "earnings", "desc", "limit", "value"], "question": "What is the name of the player with the highest earnings?", "question_toks": ["What", "is", "the", "name", "of", "the", "player", "with", "the", "highest", "earnings", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "player", "ORDER", "BY", "Earnings", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "player", "order", "by", "earnings", "desc", "limit", "value"], "question": "Return the name of the player who earns the most money.", "question_toks": ["Return", "the", "name", "of", "the", "player", "who", "earns", "the", "most", "money", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000", "query_toks": ["SELECT", "DISTINCT", "Country", "FROM", "player", "WHERE", "Earnings", ">", "1200000"], "query_toks_no_value": ["select", "distinct", "country", "from", "player", "where", "earnings", ">", "value"], "question": "What are the distinct countries of players with earnings higher than 1200000?", "question_toks": ["What", "are", "the", "distinct", "countries", "of", "players", "with", "earnings", "higher", "than", "1200000", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 1200000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000", "query_toks": ["SELECT", "DISTINCT", "Country", "FROM", "player", "WHERE", "Earnings", ">", "1200000"], "query_toks_no_value": ["select", "distinct", "country", "from", "player", "where", "earnings", ">", "value"], "question": "From which countries are players who make more than 1200000 from?", "question_toks": ["From", "which", "countries", "are", "players", "who", "make", "more", "than", "1200000", "from", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 1200000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Country FROM player WHERE Wins_count  >  2 ORDER BY Earnings DESC LIMIT 1", "query_toks": ["SELECT", "Country", "FROM", "player", "WHERE", "Wins_count", ">", "2", "ORDER", "BY", "Earnings", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "player", "where", "wins_count", ">", "value", "order", "by", "earnings", "desc", "limit", "value"], "question": "What is the country of the player with the highest earnings among players that have more than 2 win counts?", "question_toks": ["What", "is", "the", "country", "of", "the", "player", "with", "the", "highest", "earnings", "among", "players", "that", "have", "more", "than", "2", "win", "counts", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Country FROM player WHERE Wins_count  >  2 ORDER BY Earnings DESC LIMIT 1", "query_toks": ["SELECT", "Country", "FROM", "player", "WHERE", "Wins_count", ">", "2", "ORDER", "BY", "Earnings", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "player", "where", "wins_count", ">", "value", "order", "by", "earnings", "desc", "limit", "value"], "question": "Of players who have more than 2 wins, what is the country of the player who makes the most?", "question_toks": ["Of", "players", "who", "have", "more", "than", "2", "wins", ",", "what", "is", "the", "country", "of", "the", "player", "who", "makes", "the", "most", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT T2.Name ,  T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id"], "question": "Show names of players and names of clubs they are in.", "question_toks": ["Show", "names", "of", "players", "and", "names", "of", "clubs", "they", "are", "in", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT T2.Name ,  T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id"], "question": "What are the names of players and the corresponding clubs that they are in?", "question_toks": ["What", "are", "the", "names", "of", "players", "and", "the", "corresponding", "clubs", "that", "they", "are", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Wins_count  >  2", "query_toks": ["SELECT", "T1.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "WHERE", "T2.Wins_count", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "where", "t2", ".", "wins_count", ">", "value"], "question": "Show names of clubs that have players with more than 2 win counts.", "question_toks": ["Show", "names", "of", "clubs", "that", "have", "players", "with", "more", "than", "2", "win", "counts", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Wins_count  >  2", "query_toks": ["SELECT", "T1.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "WHERE", "T2.Wins_count", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "where", "t2", ".", "wins_count", ">", "value"], "question": "What are the names of clubs that have players who have won more than twice?", "question_toks": ["What", "are", "the", "names", "of", "clubs", "that", "have", "players", "who", "have", "won", "more", "than", "twice", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Manager  =  \"Sam Allardyce\"", "query_toks": ["SELECT", "T2.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "WHERE", "T1.Manager", "=", "``", "Sam", "Allardyce", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "where", "t1", ".", "manager", "=", "value"], "question": "Show names of players from the club with manager \"Sam Allardyce\".", "question_toks": ["Show", "names", "of", "players", "from", "the", "club", "with", "manager", "``", "Sam", "Allardyce", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Sam Allardyce\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Manager  =  \"Sam Allardyce\"", "query_toks": ["SELECT", "T2.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "WHERE", "T1.Manager", "=", "``", "Sam", "Allardyce", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "where", "t1", ".", "manager", "=", "value"], "question": "What are the names of players from the club managed by Sam Allardyce?", "question_toks": ["What", "are", "the", "names", "of", "players", "from", "the", "club", "managed", "by", "Sam", "Allardyce", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Sam Allardyce\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Club_ID ORDER BY avg(T2.Earnings) DESC", "query_toks": ["SELECT", "T1.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "GROUP", "BY", "T1.Club_ID", "ORDER", "BY", "avg", "(", "T2.Earnings", ")", "DESC"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "group", "by", "t1", ".", "club_id", "order", "by", "avg", "(", "t2", ".", "earnings", ")", "desc"], "question": "Show names of clubs in descending order of average earnings of players belonging.", "question_toks": ["Show", "names", "of", "clubs", "in", "descending", "order", "of", "average", "earnings", "of", "players", "belonging", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [5, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Club_ID ORDER BY avg(T2.Earnings) DESC", "query_toks": ["SELECT", "T1.Name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "GROUP", "BY", "T1.Club_ID", "ORDER", "BY", "avg", "(", "T2.Earnings", ")", "DESC"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "group", "by", "t1", ".", "club_id", "order", "by", "avg", "(", "t2", ".", "earnings", ")", "desc"], "question": "What are the names of clubs, ordered descending by the average earnings of players within each?", "question_toks": ["What", "are", "the", "names", "of", "clubs", ",", "ordered", "descending", "by", "the", "average", "earnings", "of", "players", "within", "each", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [5, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer", "query_toks": ["SELECT", "Manufacturer", ",", "COUNT", "(", "*", ")", "FROM", "club", "GROUP", "BY", "Manufacturer"], "query_toks_no_value": ["select", "manufacturer", ",", "count", "(", "*", ")", "from", "club", "group", "by", "manufacturer"], "question": "Show different manufacturers and the number of clubs they are associated with.", "question_toks": ["Show", "different", "manufacturers", "and", "the", "number", "of", "clubs", "they", "are", "associated", "with", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer", "query_toks": ["SELECT", "Manufacturer", ",", "COUNT", "(", "*", ")", "FROM", "club", "GROUP", "BY", "Manufacturer"], "query_toks_no_value": ["select", "manufacturer", ",", "count", "(", "*", ")", "from", "club", "group", "by", "manufacturer"], "question": "How many clubs use each manufacturer?", "question_toks": ["How", "many", "clubs", "use", "each", "manufacturer", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Manufacturer", "FROM", "club", "GROUP", "BY", "Manufacturer", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "manufacturer", "from", "club", "group", "by", "manufacturer", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Please show the most common manufacturer of clubs.", "question_toks": ["Please", "show", "the", "most", "common", "manufacturer", "of", "clubs", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Manufacturer", "FROM", "club", "GROUP", "BY", "Manufacturer", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "manufacturer", "from", "club", "group", "by", "manufacturer", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which manufacturer is most common among clubs?", "question_toks": ["Which", "manufacturer", "is", "most", "common", "among", "clubs", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "Manufacturer", "FROM", "club", "GROUP", "BY", "Manufacturer", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "manufacturer", "from", "club", "group", "by", "manufacturer", "having", "count", "(", "*", ")", ">", "value"], "question": "List the manufacturers that are associated with more than one club.", "question_toks": ["List", "the", "manufacturers", "that", "are", "associated", "with", "more", "than", "one", "club", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "Manufacturer", "FROM", "club", "GROUP", "BY", "Manufacturer", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "manufacturer", "from", "club", "group", "by", "manufacturer", "having", "count", "(", "*", ")", ">", "value"], "question": "Which manufacturers work for more than 1 club?", "question_toks": ["Which", "manufacturers", "work", "for", "more", "than", "1", "club", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "Country", "FROM", "player", "GROUP", "BY", "Country", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "country", "from", "player", "group", "by", "country", "having", "count", "(", "*", ")", ">", "value"], "question": "List the country that have more than one player.", "question_toks": ["List", "the", "country", "that", "have", "more", "than", "one", "player", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "Country", "FROM", "player", "GROUP", "BY", "Country", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "country", "from", "player", "group", "by", "country", "having", "count", "(", "*", ")", ">", "value"], "question": "Which countries have produced more than one player?", "question_toks": ["Which", "countries", "have", "produced", "more", "than", "one", "player", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)", "query_toks": ["SELECT", "Name", "FROM", "club", "WHERE", "Club_ID", "NOT", "IN", "(", "SELECT", "Club_ID", "FROM", "player", ")"], "query_toks_no_value": ["select", "name", "from", "club", "where", "club_id", "not", "in", "(", "select", "club_id", "from", "player", ")"], "question": "List the name of clubs that do not have players.", "question_toks": ["List", "the", "name", "of", "clubs", "that", "do", "not", "have", "players", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)", "query_toks": ["SELECT", "Name", "FROM", "club", "WHERE", "Club_ID", "NOT", "IN", "(", "SELECT", "Club_ID", "FROM", "player", ")"], "query_toks_no_value": ["select", "name", "from", "club", "where", "club_id", "not", "in", "(", "select", "club_id", "from", "player", ")"], "question": "What are the names of clubs that do not have any players?", "question_toks": ["What", "are", "the", "names", "of", "clubs", "that", "do", "not", "have", "any", "players", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000", "query_toks": ["SELECT", "Country", "FROM", "player", "WHERE", "Earnings", ">", "1400000", "INTERSECT", "SELECT", "Country", "FROM", "player", "WHERE", "Earnings", "<", "1100000"], "query_toks_no_value": ["select", "country", "from", "player", "where", "earnings", ">", "value", "intersect", "select", "country", "from", "player", "where", "earnings", "<", "value"], "question": "Show the country of players with earnings more than 1400000 and players with earnings less than 1100000.", "question_toks": ["Show", "the", "country", "of", "players", "with", "earnings", "more", "than", "1400000", "and", "players", "with", "earnings", "less", "than", "1100000", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 1400000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 4, [0, [0, 10, false], null], 1100000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000", "query_toks": ["SELECT", "Country", "FROM", "player", "WHERE", "Earnings", ">", "1400000", "INTERSECT", "SELECT", "Country", "FROM", "player", "WHERE", "Earnings", "<", "1100000"], "query_toks_no_value": ["select", "country", "from", "player", "where", "earnings", ">", "value", "intersect", "select", "country", "from", "player", "where", "earnings", "<", "value"], "question": "Which country has produced both players with earnings over 1400000 and players with earnings below 1100000?", "question_toks": ["Which", "country", "has", "produced", "both", "players", "with", "earnings", "over", "1400000", "and", "players", "with", "earnings", "below", "1100000", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 1400000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 4, [0, [0, 10, false], null], 1100000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT COUNT (DISTINCT Country) FROM player", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Country", ")", "FROM", "player"], "query_toks_no_value": ["select", "count", "(", "distinct", "country", ")", "from", "player"], "question": "What is the number of distinct countries of all players?", "question_toks": ["What", "is", "the", "number", "of", "distinct", "countries", "of", "all", "players", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 9, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT COUNT (DISTINCT Country) FROM player", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Country", ")", "FROM", "player"], "query_toks_no_value": ["select", "count", "(", "distinct", "country", ")", "from", "player"], "question": "How many different countries are players from?", "question_toks": ["How", "many", "different", "countries", "are", "players", "from", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 9, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Earnings FROM player WHERE Country  =  \"Australia\" OR Country  =  \"Zimbabwe\"", "query_toks": ["SELECT", "Earnings", "FROM", "player", "WHERE", "Country", "=", "``", "Australia", "''", "OR", "Country", "=", "``", "Zimbabwe", "''"], "query_toks_no_value": ["select", "earnings", "from", "player", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "Show the earnings of players from country \"Australia\" or \"Zimbabwe\".", "question_toks": ["Show", "the", "earnings", "of", "players", "from", "country", "``", "Australia", "''", "or", "``", "Zimbabwe", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Australia\"", null], "or", [false, 2, [0, [0, 9, false], null], "\"Zimbabwe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "soccer_3", "query": "SELECT Earnings FROM player WHERE Country  =  \"Australia\" OR Country  =  \"Zimbabwe\"", "query_toks": ["SELECT", "Earnings", "FROM", "player", "WHERE", "Country", "=", "``", "Australia", "''", "OR", "Country", "=", "``", "Zimbabwe", "''"], "query_toks_no_value": ["select", "earnings", "from", "player", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "What are the earnings of players from either of the countries of Australia or Zimbabwe?", "question_toks": ["What", "are", "the", "earnings", "of", "players", "from", "either", "of", "the", "countries", "of", "Australia", "or", "Zimbabwe", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Australia\"", null], "or", [false, 2, [0, [0, 9, false], null], "\"Zimbabwe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "club", "schema": ["Club_ID:number", "Name:text", "Manager:text", "Captain:text", "Manufacturer:text", "Sponsor:text"]}, {"name": "player", "schema": ["Player_ID:number", "Name:text", "Country:text", "Earnings:number", "Events_number:number", "Wins_count:number", "Club_ID:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 INTERSECT SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >= 3", "query_toks": ["SELECT", "T1.customer_id", ",", "T1.customer_first_name", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "2", "INTERSECT", "SELECT", "T1.customer_id", ",", "T1.customer_first_name", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "Order_items", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "value", "intersect", "select", "t1", ".", "customer_id", ",", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "List the id, first name and last name of the customers who both have placed more than 2 orders and have bought at least 3 items.", "question_toks": ["List", "the", "id", ",", "first", "name", "and", "last", "name", "of", "the", "customers", "who", "both", "have", "placed", "more", "than", "2", "orders", "and", "have", "bought", "at", "least", "3", "items", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 INTERSECT SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >= 3", "query_toks": ["SELECT", "T1.customer_id", ",", "T1.customer_first_name", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "2", "INTERSECT", "SELECT", "T1.customer_id", ",", "T1.customer_first_name", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "Order_items", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "value", "intersect", "select", "t1", ".", "customer_id", ",", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the ids, first and last names of the customers who have ordered more than twice and have bought at least 3 items?", "question_toks": ["What", "are", "the", "ids", ",", "first", "and", "last", "names", "of", "the", "customers", "who", "have", "ordered", "more", "than", "twice", "and", "have", "bought", "at", "least", "3", "items", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id", "query_toks": ["SELECT", "T1.order_id", ",", "T1.order_status_code", ",", "count", "(", "*", ")", "FROM", "Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T1.order_id"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "t1", ".", "order_status_code", ",", "count", "(", "*", ")", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t1", ".", "order_id"], "question": "For the orders with any produts, how many products does each orders contain ? List the order id, status and the number.", "question_toks": ["For", "the", "orders", "with", "any", "produts", ",", "how", "many", "products", "does", "each", "orders", "contain", "?", "List", "the", "order", "id", ",", "status", "and", "the", "number", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 28, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id", "query_toks": ["SELECT", "T1.order_id", ",", "T1.order_status_code", ",", "count", "(", "*", ")", "FROM", "Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T1.order_id"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "t1", ".", "order_status_code", ",", "count", "(", "*", ")", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t1", ".", "order_id"], "question": "For every order, how many products does it contain, and what are the orders' statuses and ids?", "question_toks": ["For", "every", "order", ",", "how", "many", "products", "does", "it", "contain", ",", "and", "what", "are", "the", "orders", "'", "statuses", "and", "ids", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 28, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT min(date_order_placed) FROM Orders UNION SELECT T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  1", "query_toks": ["SELECT", "min", "(", "date_order_placed", ")", "FROM", "Orders", "UNION", "SELECT", "T1.date_order_placed", "FROM", "Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T1.order_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "min", "(", "date_order_placed", ")", "from", "orders", "union", "select", "t1", ".", "date_order_placed", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t1", ".", "order_id", "having", "count", "(", "*", ")", ">", "value"], "question": "List the dates of the orders which were placed at the earliest time or have more than 1 items.", "question_toks": ["List", "the", "dates", "of", "the", "orders", "which", "were", "placed", "at", "the", "earliest", "time", "or", "have", "more", "than", "1", "items", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[2, [0, [0, 29, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT min(date_order_placed) FROM Orders UNION SELECT T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  1", "query_toks": ["SELECT", "min", "(", "date_order_placed", ")", "FROM", "Orders", "UNION", "SELECT", "T1.date_order_placed", "FROM", "Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T1.order_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "min", "(", "date_order_placed", ")", "from", "orders", "union", "select", "t1", ".", "date_order_placed", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t1", ".", "order_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the dates of the earliest order and the dates of all orders with more than 1 item?", "question_toks": ["What", "are", "the", "dates", "of", "the", "earliest", "order", "and", "the", "dates", "of", "all", "orders", "with", "more", "than", "1", "item", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[2, [0, [0, 29, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "customer_first_name", ",", "customer_middle_initial", ",", "customer_last_name", "FROM", "Customers", "EXCEPT", "SELECT", "T1.customer_first_name", ",", "T1.customer_middle_initial", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "customer_first_name", ",", "customer_middle_initial", ",", "customer_last_name", "from", "customers", "except", "select", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_middle_initial", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "Which customers did not make any orders? List the first name, middle initial and last name.", "question_toks": ["Which", "customers", "did", "not", "make", "any", "orders", "?", "List", "the", "first", "name", ",", "middle", "initial", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "customer_first_name", ",", "customer_middle_initial", ",", "customer_last_name", "FROM", "Customers", "EXCEPT", "SELECT", "T1.customer_first_name", ",", "T1.customer_middle_initial", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "customer_first_name", ",", "customer_middle_initial", ",", "customer_last_name", "from", "customers", "except", "select", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_middle_initial", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "WHat are the first and last names, and middle initials of all customers who did not make any orders?", "question_toks": ["WHat", "are", "the", "first", "and", "last", "names", ",", "and", "middle", "initials", "of", "all", "customers", "who", "did", "not", "make", "any", "orders", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT product_id ,  product_name ,  product_price ,  product_color FROM Products EXCEPT SELECT T1.product_id ,  T1.product_name ,  T1.product_price ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.product_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "product_id", ",", "product_name", ",", "product_price", ",", "product_color", "FROM", "Products", "EXCEPT", "SELECT", "T1.product_id", ",", "T1.product_name", ",", "T1.product_price", ",", "T1.product_color", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Orders", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "GROUP", "BY", "T1.product_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "product_id", ",", "product_name", ",", "product_price", ",", "product_color", "from", "products", "except", "select", "t1", ".", "product_id", ",", "t1", ".", "product_name", ",", "t1", ".", "product_price", ",", "t1", ".", "product_color", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "orders", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "group", "by", "t1", ".", "product_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the id, name, price and color of the products which have not been ordered for at least twice?", "question_toks": ["What", "are", "the", "id", ",", "name", ",", "price", "and", "color", "of", "the", "products", "which", "have", "not", "been", "ordered", "for", "at", "least", "twice", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 32, false], null], [0, 26, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "select t1.product_id ,  t1.product_name ,  t1.product_price ,  t1.product_color from products as t1 join order_items as t2 on t1.product_id  =  t2.product_id join orders as t3 on t2.order_id  =  t3.order_id group by t1.product_id having count(*) < 2", "query_toks": ["select", "t1.product_id", ",", "t1.product_name", ",", "t1.product_price", ",", "t1.product_color", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1.product_id", "=", "t2.product_id", "join", "orders", "as", "t3", "on", "t2.order_id", "=", "t3.order_id", "group", "by", "t1.product_id", "having", "count", "(", "*", ")", "<", "2"], "query_toks_no_value": ["select", "t1", ".", "product_id", ",", "t1", ".", "product_name", ",", "t1", ".", "product_price", ",", "t1", ".", "product_color", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "orders", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "group", "by", "t1", ".", "product_id", "having", "count", "(", "*", ")", "<", "value"], "question": "What are the ids , names , prices , and colors of all products that have been listed in less than two orders ?", "question_toks": ["What", "are", "the", "ids", ",", "names", ",", "prices", ",", "and", "colors", "of", "all", "products", "that", "have", "been", "listed", "in", "less", "than", "two", "orders", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 32, false], null], [0, 26, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 4, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.order_id", ",", "T1.date_order_placed", "FROM", "Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T1.order_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "t1", ".", "date_order_placed", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t1", ".", "order_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which orders have at least 2 products on it? List the order id and date.", "question_toks": ["Which", "orders", "have", "at", "least", "2", "products", "on", "it", "?", "List", "the", "order", "id", "and", "date", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.order_id", ",", "T1.date_order_placed", "FROM", "Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T1.order_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "t1", ".", "date_order_placed", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t1", ".", "order_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the ids and dates of the orders with at least two products?", "question_toks": ["What", "are", "the", "ids", "and", "dates", "of", "the", "orders", "with", "at", "least", "two", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.product_id", ",", "T1.product_name", ",", "T1.product_price", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T1.product_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "product_id", ",", "t1", ".", "product_name", ",", "t1", ".", "product_price", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which product are listed in orders most frequently? List the id, product name and price.", "question_toks": ["Which", "product", "are", "listed", "in", "orders", "most", "frequently", "?", "List", "the", "id", ",", "product", "name", "and", "price", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.product_id", ",", "T1.product_name", ",", "T1.product_price", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T1.product_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "product_id", ",", "t1", ".", "product_name", ",", "t1", ".", "product_price", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the ids, names, and prices of all products that are ordered most frequently?", "question_toks": ["What", "are", "the", "ids", ",", "names", ",", "and", "prices", "of", "all", "products", "that", "are", "ordered", "most", "frequently", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.order_id ,  sum(T2.product_price) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.order_id ORDER BY sum(T2.product_price) ASC LIMIT 1", "query_toks": ["SELECT", "T1.order_id", ",", "sum", "(", "T2.product_price", ")", "FROM", "Order_items", "AS", "T1", "JOIN", "Products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T1.order_id", "ORDER", "BY", "sum", "(", "T2.product_price", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "sum", "(", "t2", ".", "product_price", ")", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "order_id", "order", "by", "sum", "(", "t2", ".", "product_price", ")", "asc", "limit", "value"], "question": "Which order have the least sum of the product prices. List the order id and sum.", "question_toks": ["Which", "order", "have", "the", "least", "sum", "of", "the", "product", "prices", ".", "List", "the", "order", "id", "and", "sum", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 31, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 32, false], null]], [4, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [], "orderBy": ["asc", [[0, [4, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "select t1.order_id ,  sum(t2.product_price) from order_items as t1 join products as t2 on t1.product_id  =  t2.product_id group by t1.order_id order by sum(t2.product_price) asc limit 1", "query_toks": ["select", "t1.order_id", ",", "sum", "(", "t2.product_price", ")", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1.product_id", "=", "t2.product_id", "group", "by", "t1.order_id", "order", "by", "sum", "(", "t2.product_price", ")", "asc", "limit", "1"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "sum", "(", "t2", ".", "product_price", ")", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "order_id", "order", "by", "sum", "(", "t2", ".", "product_price", ")", "asc", "limit", "value"], "question": "What is the order that total cost the least , and how much is the total cost ?", "question_toks": ["What", "is", "the", "order", "that", "total", "cost", "the", "least", ",", "and", "how", "much", "is", "the", "total", "cost", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 31, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 32, false], null]], [4, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [], "orderBy": ["asc", [[0, [4, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT Payment_method_code FROM Customer_Payment_Methods GROUP BY Payment_method_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "Payment_method_code", "FROM", "Customer_Payment_Methods", "GROUP", "BY", "Payment_method_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "payment_method_code", "from", "customer_payment_methods", "group", "by", "payment_method_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most popular payment method?", "question_toks": ["What", "is", "the", "most", "popular", "payment", "method", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [[0, 22, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT Payment_method_code FROM Customer_Payment_Methods GROUP BY Payment_method_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "Payment_method_code", "FROM", "Customer_Payment_Methods", "GROUP", "BY", "Payment_method_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "payment_method_code", "from", "customer_payment_methods", "group", "by", "payment_method_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the payment method that most customers use?", "question_toks": ["What", "is", "the", "payment", "method", "that", "most", "customers", "use", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [[0, 22, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code", "query_toks": ["SELECT", "T1.gender_code", ",", "count", "(", "*", ")", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "Order_items", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "GROUP", "BY", "T1.gender_code"], "query_toks_no_value": ["select", "t1", ".", "gender_code", ",", "count", "(", "*", ")", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "group", "by", "t1", ".", "gender_code"], "question": "How many number of products does each gender of customers buy? List the gender and the number", "question_toks": ["How", "many", "number", "of", "products", "does", "each", "gender", "of", "customers", "buy", "?", "List", "the", "gender", "and", "the", "number"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code", "query_toks": ["SELECT", "T1.gender_code", ",", "count", "(", "*", ")", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "Order_items", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "GROUP", "BY", "T1.gender_code"], "query_toks_no_value": ["select", "t1", ".", "gender_code", ",", "count", "(", "*", ")", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "group", "by", "t1", ".", "gender_code"], "question": "How many products does each gender buy?", "question_toks": ["How", "many", "products", "does", "each", "gender", "buy", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 26, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code", "query_toks": ["SELECT", "T1.gender_code", ",", "count", "(", "*", ")", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.gender_code"], "query_toks_no_value": ["select", "t1", ".", "gender_code", ",", "count", "(", "*", ")", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "gender_code"], "question": "How many orders has each gender of customers placed?", "question_toks": ["How", "many", "orders", "has", "each", "gender", "of", "customers", "placed", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code", "query_toks": ["SELECT", "T1.gender_code", ",", "count", "(", "*", ")", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.gender_code"], "query_toks_no_value": ["select", "t1", ".", "gender_code", ",", "count", "(", "*", ")", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "gender_code"], "question": "How many orders has each gender placed?", "question_toks": ["How", "many", "orders", "has", "each", "gender", "placed", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.Payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "T1.customer_first_name", ",", "T1.customer_middle_initial", ",", "T1.customer_last_name", ",", "T2.Payment_method_code", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Payment_Methods", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_middle_initial", ",", "t1", ".", "customer_last_name", ",", "t2", ".", "payment_method_code", "from", "customers", "as", "t1", "join", "customer_payment_methods", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "List the customers' first name, middle initial, last name and payment methods.", "question_toks": ["List", "the", "customers", "'", "first", "name", ",", "middle", "initial", ",", "last", "name", "and", "payment", "methods", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.Payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "T1.customer_first_name", ",", "T1.customer_middle_initial", ",", "T1.customer_last_name", ",", "T2.Payment_method_code", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Payment_Methods", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_middle_initial", ",", "t1", ".", "customer_last_name", ",", "t2", ".", "payment_method_code", "from", "customers", "as", "t1", "join", "customer_payment_methods", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "What are the first names, middle initials, last names, and payment methods of all customers?", "question_toks": ["What", "are", "the", "first", "names", ",", "middle", "initials", ",", "last", "names", ",", "and", "payment", "methods", "of", "all", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.invoice_status_code ,  T1.invoice_date ,  T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number", "query_toks": ["SELECT", "T1.invoice_status_code", ",", "T1.invoice_date", ",", "T2.shipment_date", "FROM", "Invoices", "AS", "T1", "JOIN", "Shipments", "AS", "T2", "ON", "T1.invoice_number", "=", "T2.invoice_number"], "query_toks_no_value": ["select", "t1", ".", "invoice_status_code", ",", "t1", ".", "invoice_date", ",", "t2", ".", "shipment_date", "from", "invoices", "as", "t1", "join", "shipments", "as", "t2", "on", "t1", ".", "invoice_number", "=", "t2", ".", "invoice_number"], "question": "List the invoices' status, date and the date of shipment.", "question_toks": ["List", "the", "invoices", "'", "status", ",", "date", "and", "the", "date", "of", "shipment", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 36, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.invoice_status_code ,  T1.invoice_date ,  T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number", "query_toks": ["SELECT", "T1.invoice_status_code", ",", "T1.invoice_date", ",", "T2.shipment_date", "FROM", "Invoices", "AS", "T1", "JOIN", "Shipments", "AS", "T2", "ON", "T1.invoice_number", "=", "T2.invoice_number"], "query_toks_no_value": ["select", "t1", ".", "invoice_status_code", ",", "t1", ".", "invoice_date", ",", "t2", ".", "shipment_date", "from", "invoices", "as", "t1", "join", "shipments", "as", "t2", "on", "t1", ".", "invoice_number", "=", "t2", ".", "invoice_number"], "question": "What are the statuses, dates, and shipment dates for all invoices?", "question_toks": ["What", "are", "the", "statuses", ",", "dates", ",", "and", "shipment", "dates", "for", "all", "invoices", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 36, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.product_name ,  T4.shipment_date FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id", "query_toks": ["SELECT", "T1.product_name", ",", "T4.shipment_date", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Shipment_Items", "AS", "T3", "ON", "T2.order_item_id", "=", "T3.order_item_id", "JOIN", "Shipments", "AS", "T4", "ON", "T3.shipment_id", "=", "T4.shipment_id"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t4", ".", "shipment_date", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "shipment_items", "as", "t3", "on", "t2", ".", "order_item_id", "=", "t3", ".", "order_item_id", "join", "shipments", "as", "t4", "on", "t3", ".", "shipment_id", "=", "t4", ".", "shipment_id"], "question": "List the names of the products being shipped and the corresponding shipment date.", "question_toks": ["List", "the", "names", "of", "the", "products", "being", "shipped", "and", "the", "corresponding", "shipment", "date", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 30, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 39, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.product_name ,  T4.shipment_date FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id", "query_toks": ["SELECT", "T1.product_name", ",", "T4.shipment_date", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Shipment_Items", "AS", "T3", "ON", "T2.order_item_id", "=", "T3.order_item_id", "JOIN", "Shipments", "AS", "T4", "ON", "T3.shipment_id", "=", "T4.shipment_id"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t4", ".", "shipment_date", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "shipment_items", "as", "t3", "on", "t2", ".", "order_item_id", "=", "t3", ".", "order_item_id", "join", "shipments", "as", "t4", "on", "t3", ".", "shipment_id", "=", "t4", ".", "shipment_id"], "question": "What are the names of the products tht have been shipped, and on what days were they shipped?", "question_toks": ["What", "are", "the", "names", "of", "the", "products", "tht", "have", "been", "shipped", ",", "and", "on", "what", "days", "were", "they", "shipped", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 30, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 39, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.order_item_status_code ,  T3.shipment_tracking_number FROM Order_items AS T1 JOIN Shipment_Items AS T2 ON T1.order_item_id  =  T2.order_item_id JOIN Shipments AS T3 ON T2.shipment_id  =  T3.shipment_id", "query_toks": ["SELECT", "T1.order_item_status_code", ",", "T3.shipment_tracking_number", "FROM", "Order_items", "AS", "T1", "JOIN", "Shipment_Items", "AS", "T2", "ON", "T1.order_item_id", "=", "T2.order_item_id", "JOIN", "Shipments", "AS", "T3", "ON", "T2.shipment_id", "=", "T3.shipment_id"], "query_toks_no_value": ["select", "t1", ".", "order_item_status_code", ",", "t3", ".", "shipment_tracking_number", "from", "order_items", "as", "t1", "join", "shipment_items", "as", "t2", "on", "t1", ".", "order_item_id", "=", "t2", ".", "order_item_id", "join", "shipments", "as", "t3", "on", "t2", ".", "shipment_id", "=", "t3", ".", "shipment_id"], "question": "What is the status code of the items being ordered and shipped and its corresponding shipment tracking number?", "question_toks": ["What", "is", "the", "status", "code", "of", "the", "items", "being", "ordered", "and", "shipped", "and", "its", "corresponding", "shipment", "tracking", "number", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 30, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 39, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.order_item_status_code ,  T3.shipment_tracking_number FROM Order_items AS T1 JOIN Shipment_Items AS T2 ON T1.order_item_id  =  T2.order_item_id JOIN Shipments AS T3 ON T2.shipment_id  =  T3.shipment_id", "query_toks": ["SELECT", "T1.order_item_status_code", ",", "T3.shipment_tracking_number", "FROM", "Order_items", "AS", "T1", "JOIN", "Shipment_Items", "AS", "T2", "ON", "T1.order_item_id", "=", "T2.order_item_id", "JOIN", "Shipments", "AS", "T3", "ON", "T2.shipment_id", "=", "T3.shipment_id"], "query_toks_no_value": ["select", "t1", ".", "order_item_status_code", ",", "t3", ".", "shipment_tracking_number", "from", "order_items", "as", "t1", "join", "shipment_items", "as", "t2", "on", "t1", ".", "order_item_id", "=", "t2", ".", "order_item_id", "join", "shipments", "as", "t3", "on", "t2", ".", "shipment_id", "=", "t3", ".", "shipment_id"], "question": "What is the status code of the items have been ordered and shipped, and also what are their shipment tracking numbers?", "question_toks": ["What", "is", "the", "status", "code", "of", "the", "items", "have", "been", "ordered", "and", "shipped", ",", "and", "also", "what", "are", "their", "shipment", "tracking", "numbers", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 30, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 39, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id", "query_toks": ["SELECT", "T1.product_name", ",", "T1.product_color", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Shipment_Items", "AS", "T3", "ON", "T2.order_item_id", "=", "T3.order_item_id", "JOIN", "Shipments", "AS", "T4", "ON", "T3.shipment_id", "=", "T4.shipment_id"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t1", ".", "product_color", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "shipment_items", "as", "t3", "on", "t2", ".", "order_item_id", "=", "t3", ".", "order_item_id", "join", "shipments", "as", "t4", "on", "t3", ".", "shipment_id", "=", "t4", ".", "shipment_id"], "question": "What is the product name and the color of the ordered items which have been shipped?", "question_toks": ["What", "is", "the", "product", "name", "and", "the", "color", "of", "the", "ordered", "items", "which", "have", "been", "shipped", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 30, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 39, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id", "query_toks": ["SELECT", "T1.product_name", ",", "T1.product_color", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Shipment_Items", "AS", "T3", "ON", "T2.order_item_id", "=", "T3.order_item_id", "JOIN", "Shipments", "AS", "T4", "ON", "T3.shipment_id", "=", "T4.shipment_id"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t1", ".", "product_color", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "shipment_items", "as", "t3", "on", "t2", ".", "order_item_id", "=", "t3", ".", "order_item_id", "join", "shipments", "as", "t4", "on", "t3", ".", "shipment_id", "=", "t4", ".", "shipment_id"], "question": "What are the names and colors of all products that have been shipped?", "question_toks": ["What", "are", "the", "names", "and", "colors", "of", "all", "products", "that", "have", "been", "shipped", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 30, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 39, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT DISTINCT T1.product_name ,  T1.product_price ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id JOIN Customers AS T4 ON T3.customer_id  =  T4.customer_id WHERE T4.gender_code  =  'Female'", "query_toks": ["SELECT", "DISTINCT", "T1.product_name", ",", "T1.product_price", ",", "T1.product_description", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Orders", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "JOIN", "Customers", "AS", "T4", "ON", "T3.customer_id", "=", "T4.customer_id", "WHERE", "T4.gender_code", "=", "'Female", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "product_name", ",", "t1", ".", "product_price", ",", "t1", ".", "product_description", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "orders", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "join", "customers", "as", "t4", "on", "t3", ".", "customer_id", "=", "t4", ".", "customer_id", "where", "t4", ".", "gender_code", "=", "value"], "question": "List all the distinct product names, price and descriptions which are bought by female customers.", "question_toks": ["List", "all", "the", "distinct", "product", "names", ",", "price", "and", "descriptions", "which", "are", "bought", "by", "female", "customers", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 32, false], null], [0, 26, false], null], "and", [false, 2, [0, [0, 27, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Female\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT DISTINCT T1.product_name ,  T1.product_price ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id JOIN Customers AS T4 ON T3.customer_id  =  T4.customer_id WHERE T4.gender_code  =  'Female'", "query_toks": ["SELECT", "DISTINCT", "T1.product_name", ",", "T1.product_price", ",", "T1.product_description", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Orders", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "JOIN", "Customers", "AS", "T4", "ON", "T3.customer_id", "=", "T4.customer_id", "WHERE", "T4.gender_code", "=", "'Female", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "product_name", ",", "t1", ".", "product_price", ",", "t1", ".", "product_description", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "orders", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "join", "customers", "as", "t4", "on", "t3", ".", "customer_id", "=", "t4", ".", "customer_id", "where", "t4", ".", "gender_code", "=", "value"], "question": "What are the different names, prices, and descriptions for all products bought by female customers?", "question_toks": ["What", "are", "the", "different", "names", ",", "prices", ",", "and", "descriptions", "for", "all", "products", "bought", "by", "female", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 32, false], null], [0, 26, false], null], "and", [false, 2, [0, [0, 27, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Female\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )", "query_toks": ["SELECT", "invoice_status_code", "FROM", "Invoices", "WHERE", "invoice_number", "NOT", "IN", "(", "SELECT", "invoice_number", "FROM", "Shipments", ")"], "query_toks_no_value": ["select", "invoice_status_code", "from", "invoices", "where", "invoice_number", "not", "in", "(", "select", "invoice_number", "from", "shipments", ")"], "question": "What are invoices status of all the orders which have not been shipped?", "question_toks": ["What", "are", "invoices", "status", "of", "all", "the", "orders", "which", "have", "not", "been", "shipped", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[true, 8, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 36, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )", "query_toks": ["SELECT", "invoice_status_code", "FROM", "Invoices", "WHERE", "invoice_number", "NOT", "IN", "(", "SELECT", "invoice_number", "FROM", "Shipments", ")"], "query_toks_no_value": ["select", "invoice_status_code", "from", "invoices", "where", "invoice_number", "not", "in", "(", "select", "invoice_number", "from", "shipments", ")"], "question": "What are the invoice statuses for all orderes that have not been shipped out yet?", "question_toks": ["What", "are", "the", "invoice", "statuses", "for", "all", "orderes", "that", "have", "not", "been", "shipped", "out", "yet", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[true, 8, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 36, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "select t1.order_id ,  t1.date_order_placed ,  sum(t3.product_price) from orders as t1 join order_items as t2 on t1.order_id  =  t2.order_id join products as t3 on t2.product_id  =  t3.product_id group by t1.order_id", "query_toks": ["select", "t1.order_id", ",", "t1.date_order_placed", ",", "sum", "(", "t3.product_price", ")", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1.order_id", "=", "t2.order_id", "join", "products", "as", "t3", "on", "t2.product_id", "=", "t3.product_id", "group", "by", "t1.order_id"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "t1", ".", "date_order_placed", ",", "sum", "(", "t3", ".", "product_price", ")", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "join", "products", "as", "t3", "on", "t2", ".", "product_id", "=", "t3", ".", "product_id", "group", "by", "t1", ".", "order_id"], "question": "What are the total cost of all the orders ? List the order id , date , and total cost .", "question_toks": ["What", "are", "the", "total", "cost", "of", "all", "the", "orders", "?", "List", "the", "order", "id", ",", "date", ",", "and", "total", "cost", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null], "and", [false, 2, [0, [0, 31, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]], [4, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.order_id ,  T1.date_order_placed ,  sum(T3.product_price) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id JOIN Products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T1.order_id", "query_toks": ["SELECT", "T1.order_id", ",", "T1.date_order_placed", ",", "sum", "(", "T3.product_price", ")", "FROM", "Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "JOIN", "Products", "AS", "T3", "ON", "T2.product_id", "=", "T3.product_id", "GROUP", "BY", "T1.order_id"], "query_toks_no_value": ["select", "t1", ".", "order_id", ",", "t1", ".", "date_order_placed", ",", "sum", "(", "t3", ".", "product_price", ")", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "join", "products", "as", "t3", "on", "t2", ".", "product_id", "=", "t3", ".", "product_id", "group", "by", "t1", ".", "order_id"], "question": "For each order, what is its id, date, and total amount paid?", "question_toks": ["For", "each", "order", ",", "what", "is", "its", "id", ",", "date", ",", "and", "total", "amount", "paid", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 32, false], null], "and", [false, 2, [0, [0, 31, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]], [4, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT count(DISTINCT customer_id) FROM Orders", "query_toks": ["SELECT", "count", "(", "DISTINCT", "customer_id", ")", "FROM", "Orders"], "query_toks_no_value": ["select", "count", "(", "distinct", "customer_id", ")", "from", "orders"], "question": "How many customers have placed any order?", "question_toks": ["How", "many", "customers", "have", "placed", "any", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 27, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT count(DISTINCT customer_id) FROM Orders", "query_toks": ["SELECT", "count", "(", "DISTINCT", "customer_id", ")", "FROM", "Orders"], "query_toks_no_value": ["select", "count", "(", "distinct", "customer_id", ")", "from", "orders"], "question": "How many different customers have ordered things?", "question_toks": ["How", "many", "different", "customers", "have", "ordered", "things", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 27, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT count(DISTINCT order_item_status_code) FROM Order_items", "query_toks": ["SELECT", "count", "(", "DISTINCT", "order_item_status_code", ")", "FROM", "Order_items"], "query_toks_no_value": ["select", "count", "(", "distinct", "order_item_status_code", ")", "from", "order_items"], "question": "How many item states are there in the orders?", "question_toks": ["How", "many", "item", "states", "are", "there", "in", "the", "orders", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 33, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT count(DISTINCT order_item_status_code) FROM Order_items", "query_toks": ["SELECT", "count", "(", "DISTINCT", "order_item_status_code", ")", "FROM", "Order_items"], "query_toks_no_value": ["select", "count", "(", "distinct", "order_item_status_code", ")", "from", "order_items"], "question": "How many different item status codes are there listed in ordered items?", "question_toks": ["How", "many", "different", "item", "status", "codes", "are", "there", "listed", "in", "ordered", "items", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 33, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT count(DISTINCT Payment_method_code) FROM Customer_Payment_Methods", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Payment_method_code", ")", "FROM", "Customer_Payment_Methods"], "query_toks_no_value": ["select", "count", "(", "distinct", "payment_method_code", ")", "from", "customer_payment_methods"], "question": "How many different payment methods are there?", "question_toks": ["How", "many", "different", "payment", "methods", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 22, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT count(DISTINCT Payment_method_code) FROM Customer_Payment_Methods", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Payment_method_code", ")", "FROM", "Customer_Payment_Methods"], "query_toks_no_value": ["select", "count", "(", "distinct", "payment_method_code", ")", "from", "customer_payment_methods"], "question": "How many different payment methods can customers choose from?", "question_toks": ["How", "many", "different", "payment", "methods", "can", "customers", "choose", "from", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 22, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT login_name ,  login_password FROM Customers WHERE phone_number LIKE '+12%'", "query_toks": ["SELECT", "login_name", ",", "login_password", "FROM", "Customers", "WHERE", "phone_number", "LIKE", "'+12", "%", "'"], "query_toks_no_value": ["select", "login_name", ",", "login_password", "from", "customers", "where", "phone_number", "like", "value"], "question": "What are the login names and passwords of the customers whose phone number have the prefix '+12'?", "question_toks": ["What", "are", "the", "login", "names", "and", "passwords", "of", "the", "customers", "whose", "phone", "number", "have", "the", "prefix", "'+12", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 9, [0, [0, 16, false], null], "\"+12%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT login_name ,  login_password FROM Customers WHERE phone_number LIKE '+12%'", "query_toks": ["SELECT", "login_name", ",", "login_password", "FROM", "Customers", "WHERE", "phone_number", "LIKE", "'+12", "%", "'"], "query_toks_no_value": ["select", "login_name", ",", "login_password", "from", "customers", "where", "phone_number", "like", "value"], "question": "What are the usernames and passwords of all customers whose phone number starts with '+12'?", "question_toks": ["What", "are", "the", "usernames", "and", "passwords", "of", "all", "customers", "whose", "phone", "number", "starts", "with", "'+12", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 9, [0, [0, 16, false], null], "\"+12%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%'", "query_toks": ["SELECT", "product_size", "FROM", "Products", "WHERE", "product_name", "LIKE", "'", "%", "Dell", "%", "'"], "query_toks_no_value": ["select", "product_size", "from", "products", "where", "product_name", "like", "value"], "question": "What are the product sizes of the products whose name has the substring 'Dell'?", "question_toks": ["What", "are", "the", "product", "sizes", "of", "the", "products", "whose", "name", "has", "the", "substring", "'Dell", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%Dell%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%'", "query_toks": ["SELECT", "product_size", "FROM", "Products", "WHERE", "product_name", "LIKE", "'", "%", "Dell", "%", "'"], "query_toks_no_value": ["select", "product_size", "from", "products", "where", "product_name", "like", "value"], "question": "What are the sizes of all products whose name includes the word 'Dell'?", "question_toks": ["What", "are", "the", "sizes", "of", "all", "products", "whose", "name", "includes", "the", "word", "'Dell", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%Dell%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT product_price ,  product_size FROM Products WHERE product_price  >  ( SELECT avg(product_price) FROM Products )", "query_toks": ["SELECT", "product_price", ",", "product_size", "FROM", "Products", "WHERE", "product_price", ">", "(", "SELECT", "avg", "(", "product_price", ")", "FROM", "Products", ")"], "query_toks_no_value": ["select", "product_price", ",", "product_size", "from", "products", "where", "product_price", ">", "(", "select", "avg", "(", "product_price", ")", "from", "products", ")"], "question": "What are the product price and the product size of the products whose price is above average?", "question_toks": ["What", "are", "the", "product", "price", "and", "the", "product", "size", "of", "the", "products", "whose", "price", "is", "above", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT product_price ,  product_size FROM Products WHERE product_price  >  ( SELECT avg(product_price) FROM Products )", "query_toks": ["SELECT", "product_price", ",", "product_size", "FROM", "Products", "WHERE", "product_price", ">", "(", "SELECT", "avg", "(", "product_price", ")", "FROM", "Products", ")"], "query_toks_no_value": ["select", "product_price", ",", "product_size", "from", "products", "where", "product_price", ">", "(", "select", "avg", "(", "product_price", ")", "from", "products", ")"], "question": "What are the prices and sizes of all products whose price is above the mean?", "question_toks": ["What", "are", "the", "prices", "and", "sizes", "of", "all", "products", "whose", "price", "is", "above", "the", "mean", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Products", "WHERE", "product_id", "NOT", "IN", "(", "SELECT", "product_id", "FROM", "Order_items", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "products", "where", "product_id", "not", "in", "(", "select", "product_id", "from", "order_items", ")"], "question": "How many kinds of products have not been sold?", "question_toks": ["How", "many", "kinds", "of", "products", "have", "not", "been", "sold", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Products", "WHERE", "product_id", "NOT", "IN", "(", "SELECT", "product_id", "FROM", "Order_items", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "products", "where", "product_id", "not", "in", "(", "select", "product_id", "from", "order_items", ")"], "question": "What is the number of products that have not been ordered yet?", "question_toks": ["What", "is", "the", "number", "of", "products", "that", "have", "not", "been", "ordered", "yet", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Customers", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "Customer_Payment_Methods", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "customer_payment_methods", ")"], "question": "How many customers do not have any payment method?", "question_toks": ["How", "many", "customers", "do", "not", "have", "any", "payment", "method", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Customers", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "Customer_Payment_Methods", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "customer_payment_methods", ")"], "question": "How many customers do not have a listed payment method?", "question_toks": ["How", "many", "customers", "do", "not", "have", "a", "listed", "payment", "method", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT order_status_code ,  date_order_placed FROM Orders", "query_toks": ["SELECT", "order_status_code", ",", "date_order_placed", "FROM", "Orders"], "query_toks_no_value": ["select", "order_status_code", ",", "date_order_placed", "from", "orders"], "question": "What are all the order status and all the dates of orders?", "question_toks": ["What", "are", "all", "the", "order", "status", "and", "all", "the", "dates", "of", "orders", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT order_status_code ,  date_order_placed FROM Orders", "query_toks": ["SELECT", "order_status_code", ",", "date_order_placed", "FROM", "Orders"], "query_toks_no_value": ["select", "order_status_code", ",", "date_order_placed", "from", "orders"], "question": "What are the status codes and dates placed for all of the orders?", "question_toks": ["What", "are", "the", "status", "codes", "and", "dates", "placed", "for", "all", "of", "the", "orders", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT address_line_1 ,  town_city ,  county FROM Customers WHERE Country  =  'USA'", "query_toks": ["SELECT", "address_line_1", ",", "town_city", ",", "county", "FROM", "Customers", "WHERE", "Country", "=", "'USA", "'"], "query_toks_no_value": ["select", "address_line_1", ",", "town_city", ",", "county", "from", "customers", "where", "country", "=", "value"], "question": "List the address, town and county information of the customers who live in the USA.", "question_toks": ["List", "the", "address", ",", "town", "and", "county", "information", "of", "the", "customers", "who", "live", "in", "the", "USA", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT address_line_1 ,  town_city ,  county FROM Customers WHERE Country  =  'USA'", "query_toks": ["SELECT", "address_line_1", ",", "town_city", ",", "county", "FROM", "Customers", "WHERE", "Country", "=", "'USA", "'"], "query_toks_no_value": ["select", "address_line_1", ",", "town_city", ",", "county", "from", "customers", "where", "country", "=", "value"], "question": "What are the addresses, towns, and county information for all customers who live in the United States?", "question_toks": ["What", "are", "the", "addresses", ",", "towns", ",", "and", "county", "information", "for", "all", "customers", "who", "live", "in", "the", "United", "States", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.customer_first_name ,  T4.product_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id JOIN Products AS T4 ON T3.product_id  =  T4.product_id", "query_toks": ["SELECT", "T1.customer_first_name", ",", "T4.product_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "Order_items", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "JOIN", "Products", "AS", "T4", "ON", "T3.product_id", "=", "T4.product_id"], "query_toks_no_value": ["select", "t1", ".", "customer_first_name", ",", "t4", ".", "product_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "join", "products", "as", "t4", "on", "t3", ".", "product_id", "=", "t4", ".", "product_id"], "question": "List all the pairs of buyer first names and product names.", "question_toks": ["List", "all", "the", "pairs", "of", "buyer", "first", "names", "and", "product", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 26, false], null], [0, 32, false], null], "and", [false, 2, [0, [0, 31, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.customer_first_name ,  T4.product_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id JOIN Products AS T4 ON T3.product_id  =  T4.product_id", "query_toks": ["SELECT", "T1.customer_first_name", ",", "T4.product_name", "FROM", "Customers", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "Order_items", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "JOIN", "Products", "AS", "T4", "ON", "T3.product_id", "=", "T4.product_id"], "query_toks_no_value": ["select", "t1", ".", "customer_first_name", ",", "t4", ".", "product_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "join", "products", "as", "t4", "on", "t3", ".", "product_id", "=", "t4", ".", "product_id"], "question": "What are the first names of all buyers and what products did they buy? List them in pairs.", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "buyers", "and", "what", "products", "did", "they", "buy", "?", "List", "them", "in", "pairs", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 26, false], null], [0, 32, false], null], "and", [false, 2, [0, [0, 31, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT count(*) FROM Shipment_Items", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Shipment_Items"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "shipment_items"], "question": "How many items are shipped?", "question_toks": ["How", "many", "items", "are", "shipped", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT count(*) FROM Shipment_Items", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Shipment_Items"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "shipment_items"], "question": "How many products have been shipped?", "question_toks": ["How", "many", "products", "have", "been", "shipped", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT avg(product_price) FROM Products", "query_toks": ["SELECT", "avg", "(", "product_price", ")", "FROM", "Products"], "query_toks_no_value": ["select", "avg", "(", "product_price", ")", "from", "products"], "question": "What is the product average price?", "question_toks": ["What", "is", "the", "product", "average", "price", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT avg(product_price) FROM Products", "query_toks": ["SELECT", "avg", "(", "product_price", ")", "FROM", "Products"], "query_toks_no_value": ["select", "avg", "(", "product_price", ")", "from", "products"], "question": "How much do the products cost on average?", "question_toks": ["How", "much", "do", "the", "products", "cost", "on", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT avg(T1.product_price) FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id", "query_toks": ["SELECT", "avg", "(", "T1.product_price", ")", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "product_price", ")", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id"], "question": "What is the average price of the products being ordered?", "question_toks": ["What", "is", "the", "average", "price", "of", "the", "products", "being", "ordered", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null]]}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT avg(T1.product_price) FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id", "query_toks": ["SELECT", "avg", "(", "T1.product_price", ")", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "product_price", ")", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id"], "question": "What is the price of all products being ordered on average?", "question_toks": ["What", "is", "the", "price", "of", "all", "products", "being", "ordered", "on", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null]]}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT email_address ,  town_city ,  county FROM Customers WHERE gender_code  =  ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1 )", "query_toks": ["SELECT", "email_address", ",", "town_city", ",", "county", "FROM", "Customers", "WHERE", "gender_code", "=", "(", "SELECT", "gender_code", "FROM", "Customers", "GROUP", "BY", "gender_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "email_address", ",", "town_city", ",", "county", "from", "customers", "where", "gender_code", "=", "(", "select", "gender_code", "from", "customers", "group", "by", "gender_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value", ")"], "question": "What are the email address, town and county of the customers who are of the least common gender?", "question_toks": ["What", "are", "the", "email", "address", ",", "town", "and", "county", "of", "the", "customers", "who", "are", "of", "the", "least", "common", "gender", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT email_address ,  town_city ,  county FROM Customers WHERE gender_code  =  ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1 )", "query_toks": ["SELECT", "email_address", ",", "town_city", ",", "county", "FROM", "Customers", "WHERE", "gender_code", "=", "(", "SELECT", "gender_code", "FROM", "Customers", "GROUP", "BY", "gender_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "email_address", ",", "town_city", ",", "county", "from", "customers", "where", "gender_code", "=", "(", "select", "gender_code", "from", "customers", "group", "by", "gender_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value", ")"], "question": "What are the email addresses, cities, and counties listed for all cusomters who are from the gender that orders less often?", "question_toks": ["What", "are", "the", "email", "addresses", ",", "cities", ",", "and", "counties", "listed", "for", "all", "cusomters", "who", "are", "from", "the", "gender", "that", "orders", "less", "often", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )", "query_toks": ["SELECT", "date_order_placed", "FROM", "Orders", "WHERE", "customer_id", "IN", "(", "SELECT", "T1.customer_id", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Payment_Methods", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "2", ")"], "query_toks_no_value": ["select", "date_order_placed", "from", "orders", "where", "customer_id", "in", "(", "select", "t1", ".", "customer_id", "from", "customers", "as", "t1", "join", "customer_payment_methods", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value", ")"], "question": "List the order date of the orders who are placed by customers with at least 2 payment methods.", "question_toks": ["List", "the", "order", "date", "of", "the", "orders", "who", "are", "placed", "by", "customers", "with", "at", "least", "2", "payment", "methods", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 8, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )", "query_toks": ["SELECT", "date_order_placed", "FROM", "Orders", "WHERE", "customer_id", "IN", "(", "SELECT", "T1.customer_id", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Payment_Methods", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "2", ")"], "query_toks_no_value": ["select", "date_order_placed", "from", "orders", "where", "customer_id", "in", "(", "select", "t1", ".", "customer_id", "from", "customers", "as", "t1", "join", "customer_payment_methods", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value", ")"], "question": "What is the date of all orders that have been placed by customers with at least 2 payment methods?", "question_toks": ["What", "is", "the", "date", "of", "all", "orders", "that", "have", "been", "placed", "by", "customers", "with", "at", "least", "2", "payment", "methods", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 8, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "order_status_code", "FROM", "Orders", "GROUP", "BY", "order_status_code", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "order_status_code", "from", "orders", "group", "by", "order_status_code", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "What is the most uncommon order status?", "question_toks": ["What", "is", "the", "most", "uncommon", "order", "status", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [], "groupBy": [[0, 28, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "order_status_code", "FROM", "Orders", "GROUP", "BY", "order_status_code", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "order_status_code", "from", "orders", "group", "by", "order_status_code", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "What is the least common order status?", "question_toks": ["What", "is", "the", "least", "common", "order", "status", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [], "groupBy": [[0, 28, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.product_id ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id HAVING count(*)  >  3", "query_toks": ["SELECT", "T1.product_id", ",", "T1.product_description", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T1.product_id", "HAVING", "count", "(", "*", ")", ">", "3"], "query_toks_no_value": ["select", "t1", ".", "product_id", ",", "t1", ".", "product_description", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_id", "having", "count", "(", "*", ")", ">", "value"], "question": "For all the products sold for more than 3 times, list their id and description.", "question_toks": ["For", "all", "the", "products", "sold", "for", "more", "than", "3", "times", ",", "list", "their", "id", "and", "description", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.product_id ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id HAVING count(*)  >  3", "query_toks": ["SELECT", "T1.product_id", ",", "T1.product_description", "FROM", "Products", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T1.product_id", "HAVING", "count", "(", "*", ")", ">", "3"], "query_toks_no_value": ["select", "t1", ".", "product_id", ",", "t1", ".", "product_description", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_id", "having", "count", "(", "*", ")", ">", "value"], "question": "For all products sold more than 3 times, what are their ids and descriptions?", "question_toks": ["For", "all", "products", "sold", "more", "than", "3", "times", ",", "what", "are", "their", "ids", "and", "descriptions", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 31, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.invoice_date ,  T1.invoice_number FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.invoice_date", ",", "T1.invoice_number", "FROM", "Invoices", "AS", "T1", "JOIN", "Shipments", "AS", "T2", "ON", "T1.invoice_number", "=", "T2.invoice_number", "GROUP", "BY", "T1.invoice_number", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "invoice_date", ",", "t1", ".", "invoice_number", "from", "invoices", "as", "t1", "join", "shipments", "as", "t2", "on", "t1", ".", "invoice_number", "=", "t2", ".", "invoice_number", "group", "by", "t1", ".", "invoice_number", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "List the invoice dates and ids of the invoices causing at least 2 shipments.", "question_toks": ["List", "the", "invoice", "dates", "and", "ids", "of", "the", "invoices", "causing", "at", "least", "2", "shipments", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 36, false], null]]}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT T1.invoice_date ,  T1.invoice_number FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.invoice_date", ",", "T1.invoice_number", "FROM", "Invoices", "AS", "T1", "JOIN", "Shipments", "AS", "T2", "ON", "T1.invoice_number", "=", "T2.invoice_number", "GROUP", "BY", "T1.invoice_number", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "invoice_date", ",", "t1", ".", "invoice_number", "from", "invoices", "as", "t1", "join", "shipments", "as", "t2", "on", "t1", ".", "invoice_number", "=", "t2", ".", "invoice_number", "group", "by", "t1", ".", "invoice_number", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the dates and ids of the invoices that are related to at least 2 shipments?", "question_toks": ["What", "are", "the", "dates", "and", "ids", "of", "the", "invoices", "that", "are", "related", "to", "at", "least", "2", "shipments", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 36, false], null]]}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT shipment_tracking_number ,  shipment_date FROM Shipments", "query_toks": ["SELECT", "shipment_tracking_number", ",", "shipment_date", "FROM", "Shipments"], "query_toks_no_value": ["select", "shipment_tracking_number", ",", "shipment_date", "from", "shipments"], "question": "what are all shipment tracking numbers and shipment dates?", "question_toks": ["what", "are", "all", "shipment", "tracking", "numbers", "and", "shipment", "dates", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 37, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT shipment_tracking_number ,  shipment_date FROM Shipments", "query_toks": ["SELECT", "shipment_tracking_number", ",", "shipment_date", "FROM", "Shipments"], "query_toks_no_value": ["select", "shipment_tracking_number", ",", "shipment_date", "from", "shipments"], "question": "What are the tracking numbers and dates for all shipments listed?", "question_toks": ["What", "are", "the", "tracking", "numbers", "and", "dates", "for", "all", "shipments", "listed", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 37, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "SELECT product_color ,  product_description ,  product_size FROM Products WHERE product_price  <  ( SELECT max(product_price) FROM products )", "query_toks": ["SELECT", "product_color", ",", "product_description", ",", "product_size", "FROM", "Products", "WHERE", "product_price", "<", "(", "SELECT", "max", "(", "product_price", ")", "FROM", "products", ")"], "query_toks_no_value": ["select", "product_color", ",", "product_description", ",", "product_size", "from", "products", "where", "product_price", "<", "(", "select", "max", "(", "product_price", ")", "from", "products", ")"], "question": "What are the color, description and size of the products priced below the maximum price.", "question_toks": ["What", "are", "the", "color", ",", "description", "and", "size", "of", "the", "products", "priced", "below", "the", "maximum", "price", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "e_commerce", "query": "select product_color ,  product_description ,  product_size from products where product_price  !=  ( select max(product_price) from products )", "query_toks": ["select", "product_color", ",", "product_description", ",", "product_size", "from", "products", "where", "product_price", "!=", "(", "select", "max", "(", "product_price", ")", "from", "products", ")"], "query_toks_no_value": ["select", "product_color", ",", "product_description", ",", "product_size", "from", "products", "where", "product_price", "!", "=", "(", "select", "max", "(", "product_price", ")", "from", "products", ")"], "question": "What are the colors , descriptions , and sizes for all products that are not at the maximum price ?", "question_toks": ["What", "are", "the", "colors", ",", "descriptions", ",", "and", "sizes", "for", "all", "products", "that", "are", "not", "at", "the", "maximum", "price", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "parent_product_id:number", "product_name:text", "product_price:number", "product_color:text", "product_size:text", "product_description:text"]}, {"name": "Customers", "schema": ["customer_id:number", "gender_code:text", "customer_first_name:text", "customer_middle_initial:text", "customer_last_name:text", "email_address:text", "login_name:text", "login_password:text", "phone_number:text", "address_line_1:text", "town_city:text", "county:text", "country:text"]}, {"name": "Customer_Payment_Methods", "schema": ["customer_id:number", "payment_method_code:text"]}, {"name": "Invoices", "schema": ["invoice_number:number", "invoice_status_code:text", "invoice_date:time"]}, {"name": "Orders", "schema": ["order_id:number", "customer_id:number", "order_status_code:text", "date_order_placed:time"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "product_id:number", "order_id:number", "order_item_status_code:text"]}, {"name": "Shipments", "schema": ["shipment_id:number", "order_id:number", "invoice_number:number", "shipment_tracking_number:text", "shipment_date:time"]}, {"name": "Shipment_Items", "schema": ["shipment_id:number", "order_item_id:number"]}]}
{"db_id": "bbc_channels", "query": "SELECT name FROM director WHERE age  >  (SELECT avg(age) FROM director)", "query_toks": ["SELECT", "name", "FROM", "director", "WHERE", "age", ">", "(", "SELECT", "avg", "(", "age", ")", "FROM", "director", ")"], "query_toks_no_value": ["select", "name", "from", "director", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "director", ")"], "question": "Return the names of directors who are older than the average age.", "question_toks": ["Return", "the", "names", "of", "directors", "who", "are", "older", "than", "the", "average", "age", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "bbc_channels", "query": "SELECT name FROM director ORDER BY age DESC LIMIT 1", "query_toks": ["SELECT", "name", "FROM", "director", "ORDER", "BY", "age", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "director", "order", "by", "age", "desc", "limit", "value"], "question": "Find the the name of the oldest director.", "question_toks": ["Find", "the", "the", "name", "of", "the", "oldest", "director", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 8, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "bbc_channels", "query": "SELECT count(*) FROM channel WHERE internet LIKE \"%bbc%\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "channel", "WHERE", "internet", "LIKE", "``", "%", "bbc", "%", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "channel", "where", "internet", "like", "value"], "question": "How many channels have the word 'bbc' in their internet link?", "question_toks": ["How", "many", "channels", "have", "the", "word", "'bbc", "'", "in", "their", "internet", "link", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%bbc%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "bbc_channels", "query": "SELECT count(DISTINCT Digital_terrestrial_channel) FROM channel", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Digital_terrestrial_channel", ")", "FROM", "channel"], "query_toks_no_value": ["select", "count", "(", "distinct", "digital_terrestrial_channel", ")", "from", "channel"], "question": "How many different digital terrestrial channels are there?", "question_toks": ["How", "many", "different", "digital", "terrestrial", "channels", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 4, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "bbc_channels", "query": "SELECT title FROM program ORDER BY start_year DESC", "query_toks": ["SELECT", "title", "FROM", "program", "ORDER", "BY", "start_year", "DESC"], "query_toks_no_value": ["select", "title", "from", "program", "order", "by", "start_year", "desc"], "question": "List all program titles in the order of starting year. List the most recent one first.", "question_toks": ["List", "all", "program", "titles", "in", "the", "order", "of", "starting", "year", ".", "List", "the", "most", "recent", "one", "first", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "bbc_channels", "query": "SELECT t2.name FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id GROUP BY t1.director_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t2.name", "FROM", "program", "AS", "t1", "JOIN", "director", "AS", "t2", "ON", "t1.director_id", "=", "t2.director_id", "GROUP", "BY", "t1.director_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "program", "as", "t1", "join", "director", "as", "t2", "on", "t1", ".", "director_id", "=", "t2", ".", "director_id", "group", "by", "t1", ".", "director_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which director is in charge of the most programs?", "question_toks": ["Which", "director", "is", "in", "charge", "of", "the", "most", "programs", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "bbc_channels", "query": "SELECT t2.name ,  t2.age FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id GROUP BY t1.director_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t2.name", ",", "t2.age", "FROM", "program", "AS", "t1", "JOIN", "director", "AS", "t2", "ON", "t1.director_id", "=", "t2.director_id", "GROUP", "BY", "t1.director_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "age", "from", "program", "as", "t1", "join", "director", "as", "t2", "on", "t1", ".", "director_id", "=", "t2", ".", "director_id", "group", "by", "t1", ".", "director_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name and age of the director who is in charge of the most programs?", "question_toks": ["Find", "the", "name", "and", "age", "of", "the", "director", "who", "is", "in", "charge", "of", "the", "most", "programs", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "bbc_channels", "query": "SELECT title FROM program ORDER BY start_year DESC LIMIT 1", "query_toks": ["SELECT", "title", "FROM", "program", "ORDER", "BY", "start_year", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "title", "from", "program", "order", "by", "start_year", "desc", "limit", "value"], "question": "Return the title of the program that began most recently.", "question_toks": ["Return", "the", "title", "of", "the", "program", "that", "began", "most", "recently", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "bbc_channels", "query": "SELECT t1.name ,  t1.internet FROM channel AS t1 JOIN program AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id HAVING count(*)  >  1", "query_toks": ["SELECT", "t1.name", ",", "t1.internet", "FROM", "channel", "AS", "t1", "JOIN", "program", "AS", "t2", "ON", "t1.channel_id", "=", "t2.channel_id", "GROUP", "BY", "t1.channel_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "internet", "from", "channel", "as", "t1", "join", "program", "as", "t2", "on", "t1", ".", "channel_id", "=", "t2", ".", "channel_id", "group", "by", "t1", ".", "channel_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the name and website link of the channels that have more than one program.", "question_toks": ["Find", "the", "name", "and", "website", "link", "of", "the", "channels", "that", "have", "more", "than", "one", "program", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "bbc_channels", "query": "SELECT t1.name ,  count(*) FROM channel AS t1 JOIN program AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id", "query_toks": ["SELECT", "t1.name", ",", "count", "(", "*", ")", "FROM", "channel", "AS", "t1", "JOIN", "program", "AS", "t2", "ON", "t1.channel_id", "=", "t2.channel_id", "GROUP", "BY", "t1.channel_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "channel", "as", "t1", "join", "program", "as", "t2", "on", "t1", ".", "channel_id", "=", "t2", ".", "channel_id", "group", "by", "t1", ".", "channel_id"], "question": "Find the number of programs for each channel. Return the name of each channel as well.", "question_toks": ["Find", "the", "number", "of", "programs", "for", "each", "channel", ".", "Return", "the", "name", "of", "each", "channel", "as", "well", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "bbc_channels", "query": "SELECT count(*) FROM channel WHERE channel_id NOT IN (SELECT channel_id FROM program)", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "channel", "WHERE", "channel_id", "NOT", "IN", "(", "SELECT", "channel_id", "FROM", "program", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "channel", "where", "channel_id", "not", "in", "(", "select", "channel_id", "from", "program", ")"], "question": "Find the number of channels that do not run any program.", "question_toks": ["Find", "the", "number", "of", "channels", "that", "do", "not", "run", "any", "program", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "bbc_channels", "query": "SELECT t2.name FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id WHERE t1.title  =  'Dracula'", "query_toks": ["SELECT", "t2.name", "FROM", "program", "AS", "t1", "JOIN", "director", "AS", "t2", "ON", "t1.director_id", "=", "t2.director_id", "WHERE", "t1.title", "=", "'Dracula", "'"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "program", "as", "t1", "join", "director", "as", "t2", "on", "t1", ".", "director_id", "=", "t2", ".", "director_id", "where", "t1", ".", "title", "=", "value"], "question": "What is the name of the director who is in the \"Dracula\" program?", "question_toks": ["What", "is", "the", "name", "of", "the", "director", "who", "is", "in", "the", "``", "Dracula", "''", "program", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Dracula\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "bbc_channels", "query": "SELECT t1.name ,  t1.internet FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "t1.internet", "FROM", "channel", "AS", "t1", "JOIN", "director_admin", "AS", "t2", "ON", "t1.channel_id", "=", "t2.channel_id", "GROUP", "BY", "t1.channel_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "internet", "from", "channel", "as", "t1", "join", "director_admin", "as", "t2", "on", "t1", ".", "channel_id", "=", "t2", ".", "channel_id", "group", "by", "t1", ".", "channel_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name and internet web of the channel that is directed by the most directors.", "question_toks": ["Find", "the", "name", "and", "internet", "web", "of", "the", "channel", "that", "is", "directed", "by", "the", "most", "directors", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "bbc_channels", "query": "SELECT name FROM director WHERE age BETWEEN 30 AND 60", "query_toks": ["SELECT", "name", "FROM", "director", "WHERE", "age", "BETWEEN", "30", "AND", "60"], "query_toks_no_value": ["select", "name", "from", "director", "where", "age", "between", "value", "and", "value"], "question": "Find the name of the directors whose age is between 30 and 60.", "question_toks": ["Find", "the", "name", "of", "the", "directors", "whose", "age", "is", "between", "30", "and", "60", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 1, [0, [0, 8, false], null], 30.0, 60.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "bbc_channels", "query": "SELECT t1.name FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.age  <  40 INTERSECT SELECT t1.name FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.age  >  60", "query_toks": ["SELECT", "t1.name", "FROM", "channel", "AS", "t1", "JOIN", "director_admin", "AS", "t2", "ON", "t1.channel_id", "=", "t2.channel_id", "JOIN", "director", "AS", "t3", "ON", "t2.director_id", "=", "t3.director_id", "WHERE", "t3.age", "<", "40", "INTERSECT", "SELECT", "t1.name", "FROM", "channel", "AS", "t1", "JOIN", "director_admin", "AS", "t2", "ON", "t1.channel_id", "=", "t2.channel_id", "JOIN", "director", "AS", "t3", "ON", "t2.director_id", "=", "t3.director_id", "WHERE", "t3.age", ">", "60"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "channel", "as", "t1", "join", "director_admin", "as", "t2", "on", "t1", ".", "channel_id", "=", "t2", ".", "channel_id", "join", "director", "as", "t3", "on", "t2", ".", "director_id", "=", "t3", ".", "director_id", "where", "t3", ".", "age", "<", "value", "intersect", "select", "t1", ".", "name", "from", "channel", "as", "t1", "join", "director_admin", "as", "t2", "on", "t1", ".", "channel_id", "=", "t2", ".", "channel_id", "join", "director", "as", "t3", "on", "t2", ".", "director_id", "=", "t3", ".", "director_id", "where", "t3", ".", "age", ">", "value"], "question": "give me the name of channels that have both a director younger than 40 and a director older than 60.", "question_toks": ["give", "me", "the", "name", "of", "channels", "that", "have", "both", "a", "director", "younger", "than", "40", "and", "a", "director", "older", "than", "60", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 14, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 8, false], null], 40.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 14, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 60.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "bbc_channels", "query": "SELECT t1.name ,  t1.channel_id FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.name != \"Hank Baskett\"", "query_toks": ["SELECT", "t1.name", ",", "t1.channel_id", "FROM", "channel", "AS", "t1", "JOIN", "director_admin", "AS", "t2", "ON", "t1.channel_id", "=", "t2.channel_id", "JOIN", "director", "AS", "t3", "ON", "t2.director_id", "=", "t3.director_id", "WHERE", "t3.name", "!", "=", "``", "Hank", "Baskett", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "channel_id", "from", "channel", "as", "t1", "join", "director_admin", "as", "t2", "on", "t1", ".", "channel_id", "=", "t2", ".", "channel_id", "join", "director", "as", "t3", "on", "t2", ".", "director_id", "=", "t3", ".", "director_id", "where", "t3", ".", "name", "!", "=", "value"], "question": "Find the id and name of the channel that is not directed by Hank Baskett.", "question_toks": ["Find", "the", "id", "and", "name", "of", "the", "channel", "that", "is", "not", "directed", "by", "Hank", "Baskett", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 14, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [[false, 7, [0, [0, 7, false], null], "\"Hank Baskett\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "channel", "schema": ["Channel_ID:number", "Name:text", "Analogue_terrestrial_channel:text", "Digital_terrestrial_channel:text", "Internet:text"]}, {"name": "director", "schema": ["Director_ID:number", "Name:text", "Age:number"]}, {"name": "program", "schema": ["Program_ID:number", "Start_Year:number", "Title:text", "Director_ID:number", "Channel_ID:number"]}, {"name": "director_admin", "schema": ["Director_ID:number", "Channel_ID:number", "Is_first_director:others"]}]}
{"db_id": "tv_shows", "query": "SELECT count(*) FROM radio", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "radio"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "radio"], "question": "How many radios are there?", "question_toks": ["How", "many", "radios", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "city_channel", "schema": ["ID:number", "City:text", "Station_name:text", "Owned_Since:number", "Affiliation:text"]}, {"name": "radio", "schema": ["Radio_ID:number", "Transmitter:text", "Radio_MHz:text", "2FM_MHz:text", "RnaG_MHz:text", "Lyric_FM_MHz:text", "ERP_kW:text"]}, {"name": "tv_show", "schema": ["tv_show_ID:number", "tv_show_name:text", "Sub_tittle:text", "Next_show_name:text", "Original_Airdate:text"]}, {"name": "city_channel_radio", "schema": ["City_channel_ID:number", "Radio_ID:number", "Is_online:others"]}, {"name": "city_channel_tv_show", "schema": ["City_channel_ID:number", "tv_show_ID:number", "Is_online:others", "Is_free:others"]}]}
{"db_id": "tv_shows", "query": "select transmitter from radio order by erp_kw asc", "query_toks": ["select", "transmitter", "from", "radio", "order", "by", "erp_kw", "asc"], "query_toks_no_value": ["select", "transmitter", "from", "radio", "order", "by", "erp_kw", "asc"], "question": "List the transmitters of radios in ascending order of erp kw .", "question_toks": ["List", "the", "transmitters", "of", "radios", "in", "ascending", "order", "of", "erp", "kw", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 12, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "city_channel", "schema": ["ID:number", "City:text", "Station_name:text", "Owned_Since:number", "Affiliation:text"]}, {"name": "radio", "schema": ["Radio_ID:number", "Transmitter:text", "Radio_MHz:text", "2FM_MHz:text", "RnaG_MHz:text", "Lyric_FM_MHz:text", "ERP_kW:text"]}, {"name": "tv_show", "schema": ["tv_show_ID:number", "tv_show_name:text", "Sub_tittle:text", "Next_show_name:text", "Original_Airdate:text"]}, {"name": "city_channel_radio", "schema": ["City_channel_ID:number", "Radio_ID:number", "Is_online:others"]}, {"name": "city_channel_tv_show", "schema": ["City_channel_ID:number", "tv_show_ID:number", "Is_online:others", "Is_free:others"]}]}
{"db_id": "tv_shows", "query": "SELECT tv_show_name ,  Original_Airdate FROM tv_show", "query_toks": ["SELECT", "tv_show_name", ",", "Original_Airdate", "FROM", "tv_show"], "query_toks_no_value": ["select", "tv_show_name", ",", "original_airdate", "from", "tv_show"], "question": "What are the names and original air dates of tv shows?", "question_toks": ["What", "are", "the", "names", "and", "original", "air", "dates", "of", "tv", "shows", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "city_channel", "schema": ["ID:number", "City:text", "Station_name:text", "Owned_Since:number", "Affiliation:text"]}, {"name": "radio", "schema": ["Radio_ID:number", "Transmitter:text", "Radio_MHz:text", "2FM_MHz:text", "RnaG_MHz:text", "Lyric_FM_MHz:text", "ERP_kW:text"]}, {"name": "tv_show", "schema": ["tv_show_ID:number", "tv_show_name:text", "Sub_tittle:text", "Next_show_name:text", "Original_Airdate:text"]}, {"name": "city_channel_radio", "schema": ["City_channel_ID:number", "Radio_ID:number", "Is_online:others"]}, {"name": "city_channel_tv_show", "schema": ["City_channel_ID:number", "tv_show_ID:number", "Is_online:others", "Is_free:others"]}]}
{"db_id": "tv_shows", "query": "SELECT Station_name FROM city_channel WHERE Affiliation != \"ABC\"", "query_toks": ["SELECT", "Station_name", "FROM", "city_channel", "WHERE", "Affiliation", "!", "=", "``", "ABC", "''"], "query_toks_no_value": ["select", "station_name", "from", "city_channel", "where", "affiliation", "!", "=", "value"], "question": "List the station names of city channels whose affiliation is not \"ABC\".", "question_toks": ["List", "the", "station", "names", "of", "city", "channels", "whose", "affiliation", "is", "not", "``", "ABC", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"ABC\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "city_channel", "schema": ["ID:number", "City:text", "Station_name:text", "Owned_Since:number", "Affiliation:text"]}, {"name": "radio", "schema": ["Radio_ID:number", "Transmitter:text", "Radio_MHz:text", "2FM_MHz:text", "RnaG_MHz:text", "Lyric_FM_MHz:text", "ERP_kW:text"]}, {"name": "tv_show", "schema": ["tv_show_ID:number", "tv_show_name:text", "Sub_tittle:text", "Next_show_name:text", "Original_Airdate:text"]}, {"name": "city_channel_radio", "schema": ["City_channel_ID:number", "Radio_ID:number", "Is_online:others"]}, {"name": "city_channel_tv_show", "schema": ["City_channel_ID:number", "tv_show_ID:number", "Is_online:others", "Is_free:others"]}]}
{"db_id": "tv_shows", "query": "SELECT Transmitter FROM radio WHERE ERP_kW  >  150 OR ERP_kW  <  30", "query_toks": ["SELECT", "Transmitter", "FROM", "radio", "WHERE", "ERP_kW", ">", "150", "OR", "ERP_kW", "<", "30"], "query_toks_no_value": ["select", "transmitter", "from", "radio", "where", "erp_kw", ">", "value", "or", "erp_kw", "<", "value"], "question": "Show the transmitters of radios whose ERP is bigger than 150 or smaller than 30.", "question_toks": ["Show", "the", "transmitters", "of", "radios", "whose", "ERP", "is", "bigger", "than", "150", "or", "smaller", "than", "30", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 150.0, null], "or", [false, 4, [0, [0, 12, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "city_channel", "schema": ["ID:number", "City:text", "Station_name:text", "Owned_Since:number", "Affiliation:text"]}, {"name": "radio", "schema": ["Radio_ID:number", "Transmitter:text", "Radio_MHz:text", "2FM_MHz:text", "RnaG_MHz:text", "Lyric_FM_MHz:text", "ERP_kW:text"]}, {"name": "tv_show", "schema": ["tv_show_ID:number", "tv_show_name:text", "Sub_tittle:text", "Next_show_name:text", "Original_Airdate:text"]}, {"name": "city_channel_radio", "schema": ["City_channel_ID:number", "Radio_ID:number", "Is_online:others"]}, {"name": "city_channel_tv_show", "schema": ["City_channel_ID:number", "tv_show_ID:number", "Is_online:others", "Is_free:others"]}]}
{"db_id": "tv_shows", "query": "SELECT Transmitter FROM radio ORDER BY ERP_kW DESC LIMIT 1", "query_toks": ["SELECT", "Transmitter", "FROM", "radio", "ORDER", "BY", "ERP_kW", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "transmitter", "from", "radio", "order", "by", "erp_kw", "desc", "limit", "value"], "question": "What is the transmitter of the radio with the largest ERP_kW?", "question_toks": ["What", "is", "the", "transmitter", "of", "the", "radio", "with", "the", "largest", "ERP_kW", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "city_channel", "schema": ["ID:number", "City:text", "Station_name:text", "Owned_Since:number", "Affiliation:text"]}, {"name": "radio", "schema": ["Radio_ID:number", "Transmitter:text", "Radio_MHz:text", "2FM_MHz:text", "RnaG_MHz:text", "Lyric_FM_MHz:text", "ERP_kW:text"]}, {"name": "tv_show", "schema": ["tv_show_ID:number", "tv_show_name:text", "Sub_tittle:text", "Next_show_name:text", "Original_Airdate:text"]}, {"name": "city_channel_radio", "schema": ["City_channel_ID:number", "Radio_ID:number", "Is_online:others"]}, {"name": "city_channel_tv_show", "schema": ["City_channel_ID:number", "tv_show_ID:number", "Is_online:others", "Is_free:others"]}]}
{"db_id": "tv_shows", "query": "SELECT avg(ERP_kW) FROM radio", "query_toks": ["SELECT", "avg", "(", "ERP_kW", ")", "FROM", "radio"], "query_toks_no_value": ["select", "avg", "(", "erp_kw", ")", "from", "radio"], "question": "What is the average ERP across all radios?", "question_toks": ["What", "is", "the", "average", "ERP", "across", "all", "radios", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "city_channel", "schema": ["ID:number", "City:text", "Station_name:text", "Owned_Since:number", "Affiliation:text"]}, {"name": "radio", "schema": ["Radio_ID:number", "Transmitter:text", "Radio_MHz:text", "2FM_MHz:text", "RnaG_MHz:text", "Lyric_FM_MHz:text", "ERP_kW:text"]}, {"name": "tv_show", "schema": ["tv_show_ID:number", "tv_show_name:text", "Sub_tittle:text", "Next_show_name:text", "Original_Airdate:text"]}, {"name": "city_channel_radio", "schema": ["City_channel_ID:number", "Radio_ID:number", "Is_online:others"]}, {"name": "city_channel_tv_show", "schema": ["City_channel_ID:number", "tv_show_ID:number", "Is_online:others", "Is_free:others"]}]}
{"db_id": "tv_shows", "query": "SELECT Affiliation ,  COUNT(*) FROM city_channel GROUP BY Affiliation", "query_toks": ["SELECT", "Affiliation", ",", "COUNT", "(", "*", ")", "FROM", "city_channel", "GROUP", "BY", "Affiliation"], "query_toks_no_value": ["select", "affiliation", ",", "count", "(", "*", ")", "from", "city_channel", "group", "by", "affiliation"], "question": "Show the different affiliations of city channels and the number of city channels with each affiliation.", "question_toks": ["Show", "the", "different", "affiliations", "of", "city", "channels", "and", "the", "number", "of", "city", "channels", "with", "each", "affiliation", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "city_channel", "schema": ["ID:number", "City:text", "Station_name:text", "Owned_Since:number", "Affiliation:text"]}, {"name": "radio", "schema": ["Radio_ID:number", "Transmitter:text", "Radio_MHz:text", "2FM_MHz:text", "RnaG_MHz:text", "Lyric_FM_MHz:text", "ERP_kW:text"]}, {"name": "tv_show", "schema": ["tv_show_ID:number", "tv_show_name:text", "Sub_tittle:text", "Next_show_name:text", "Original_Airdate:text"]}, {"name": "city_channel_radio", "schema": ["City_channel_ID:number", "Radio_ID:number", "Is_online:others"]}, {"name": "city_channel_tv_show", "schema": ["City_channel_ID:number", "tv_show_ID:number", "Is_online:others", "Is_free:others"]}]}
{"db_id": "tv_shows", "query": "SELECT Affiliation FROM city_channel GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Affiliation", "FROM", "city_channel", "GROUP", "BY", "Affiliation", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "affiliation", "from", "city_channel", "group", "by", "affiliation", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Please show the most common affiliation for city channels.", "question_toks": ["Please", "show", "the", "most", "common", "affiliation", "for", "city", "channels", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "city_channel", "schema": ["ID:number", "City:text", "Station_name:text", "Owned_Since:number", "Affiliation:text"]}, {"name": "radio", "schema": ["Radio_ID:number", "Transmitter:text", "Radio_MHz:text", "2FM_MHz:text", "RnaG_MHz:text", "Lyric_FM_MHz:text", "ERP_kW:text"]}, {"name": "tv_show", "schema": ["tv_show_ID:number", "tv_show_name:text", "Sub_tittle:text", "Next_show_name:text", "Original_Airdate:text"]}, {"name": "city_channel_radio", "schema": ["City_channel_ID:number", "Radio_ID:number", "Is_online:others"]}, {"name": "city_channel_tv_show", "schema": ["City_channel_ID:number", "tv_show_ID:number", "Is_online:others", "Is_free:others"]}]}
{"db_id": "tv_shows", "query": "SELECT Affiliation FROM city_channel GROUP BY Affiliation HAVING COUNT(*)  >  3", "query_toks": ["SELECT", "Affiliation", "FROM", "city_channel", "GROUP", "BY", "Affiliation", "HAVING", "COUNT", "(", "*", ")", ">", "3"], "query_toks_no_value": ["select", "affiliation", "from", "city_channel", "group", "by", "affiliation", "having", "count", "(", "*", ")", ">", "value"], "question": "List the affiliations shared by more than three city channels.", "question_toks": ["List", "the", "affiliations", "shared", "by", "more", "than", "three", "city", "channels", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "city_channel", "schema": ["ID:number", "City:text", "Station_name:text", "Owned_Since:number", "Affiliation:text"]}, {"name": "radio", "schema": ["Radio_ID:number", "Transmitter:text", "Radio_MHz:text", "2FM_MHz:text", "RnaG_MHz:text", "Lyric_FM_MHz:text", "ERP_kW:text"]}, {"name": "tv_show", "schema": ["tv_show_ID:number", "tv_show_name:text", "Sub_tittle:text", "Next_show_name:text", "Original_Airdate:text"]}, {"name": "city_channel_radio", "schema": ["City_channel_ID:number", "Radio_ID:number", "Is_online:others"]}, {"name": "city_channel_tv_show", "schema": ["City_channel_ID:number", "tv_show_ID:number", "Is_online:others", "Is_free:others"]}]}
{"db_id": "tv_shows", "query": "SELECT City ,  Station_name FROM city_channel ORDER BY Station_name ASC", "query_toks": ["SELECT", "City", ",", "Station_name", "FROM", "city_channel", "ORDER", "BY", "Station_name", "ASC"], "query_toks_no_value": ["select", "city", ",", "station_name", "from", "city_channel", "order", "by", "station_name", "asc"], "question": "Show the cities and station names of city channels in ascending alphabetical order of station name.", "question_toks": ["Show", "the", "cities", "and", "station", "names", "of", "city", "channels", "in", "ascending", "alphabetical", "order", "of", "station", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "city_channel", "schema": ["ID:number", "City:text", "Station_name:text", "Owned_Since:number", "Affiliation:text"]}, {"name": "radio", "schema": ["Radio_ID:number", "Transmitter:text", "Radio_MHz:text", "2FM_MHz:text", "RnaG_MHz:text", "Lyric_FM_MHz:text", "ERP_kW:text"]}, {"name": "tv_show", "schema": ["tv_show_ID:number", "tv_show_name:text", "Sub_tittle:text", "Next_show_name:text", "Original_Airdate:text"]}, {"name": "city_channel_radio", "schema": ["City_channel_ID:number", "Radio_ID:number", "Is_online:others"]}, {"name": "city_channel_tv_show", "schema": ["City_channel_ID:number", "tv_show_ID:number", "Is_online:others", "Is_free:others"]}]}
{"db_id": "tv_shows", "query": "SELECT T3.Transmitter ,  T2.City FROM city_channel_radio AS T1 JOIN city_channel AS T2 ON T1.City_channel_ID  =  T2.ID JOIN radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID", "query_toks": ["SELECT", "T3.Transmitter", ",", "T2.City", "FROM", "city_channel_radio", "AS", "T1", "JOIN", "city_channel", "AS", "T2", "ON", "T1.City_channel_ID", "=", "T2.ID", "JOIN", "radio", "AS", "T3", "ON", "T1.Radio_ID", "=", "T3.Radio_ID"], "query_toks_no_value": ["select", "t3", ".", "transmitter", ",", "t2", ".", "city", "from", "city_channel_radio", "as", "t1", "join", "city_channel", "as", "t2", "on", "t1", ".", "city_channel_id", "=", "t2", ".", "id", "join", "radio", "as", "t3", "on", "t1", ".", "radio_id", "=", "t3", ".", "radio_id"], "question": "Show the transmitters of radios and the cities of the channels they are associated with.", "question_toks": ["Show", "the", "transmitters", "of", "radios", "and", "the", "cities", "of", "the", "channels", "they", "are", "associated", "with", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "city_channel", "schema": ["ID:number", "City:text", "Station_name:text", "Owned_Since:number", "Affiliation:text"]}, {"name": "radio", "schema": ["Radio_ID:number", "Transmitter:text", "Radio_MHz:text", "2FM_MHz:text", "RnaG_MHz:text", "Lyric_FM_MHz:text", "ERP_kW:text"]}, {"name": "tv_show", "schema": ["tv_show_ID:number", "tv_show_name:text", "Sub_tittle:text", "Next_show_name:text", "Original_Airdate:text"]}, {"name": "city_channel_radio", "schema": ["City_channel_ID:number", "Radio_ID:number", "Is_online:others"]}, {"name": "city_channel_tv_show", "schema": ["City_channel_ID:number", "tv_show_ID:number", "Is_online:others", "Is_free:others"]}]}
{"db_id": "tv_shows", "query": "SELECT T3.Transmitter ,  T2.Station_name FROM city_channel_radio AS T1 JOIN city_channel AS T2 ON T1.City_channel_ID  =  T2.ID JOIN radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID ORDER BY T3.ERP_kW DESC", "query_toks": ["SELECT", "T3.Transmitter", ",", "T2.Station_name", "FROM", "city_channel_radio", "AS", "T1", "JOIN", "city_channel", "AS", "T2", "ON", "T1.City_channel_ID", "=", "T2.ID", "JOIN", "radio", "AS", "T3", "ON", "T1.Radio_ID", "=", "T3.Radio_ID", "ORDER", "BY", "T3.ERP_kW", "DESC"], "query_toks_no_value": ["select", "t3", ".", "transmitter", ",", "t2", ".", "station_name", "from", "city_channel_radio", "as", "t1", "join", "city_channel", "as", "t2", "on", "t1", ".", "city_channel_id", "=", "t2", ".", "id", "join", "radio", "as", "t3", "on", "t1", ".", "radio_id", "=", "t3", ".", "radio_id", "order", "by", "t3", ".", "erp_kw", "desc"], "question": "Show the transmitters of radios and the station names of the channels they are associated with in descending order of the ERP of the radios.", "question_toks": ["Show", "the", "transmitters", "of", "radios", "and", "the", "station", "names", "of", "the", "channels", "they", "are", "associated", "with", "in", "descending", "order", "of", "the", "ERP", "of", "the", "radios", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "city_channel", "schema": ["ID:number", "City:text", "Station_name:text", "Owned_Since:number", "Affiliation:text"]}, {"name": "radio", "schema": ["Radio_ID:number", "Transmitter:text", "Radio_MHz:text", "2FM_MHz:text", "RnaG_MHz:text", "Lyric_FM_MHz:text", "ERP_kW:text"]}, {"name": "tv_show", "schema": ["tv_show_ID:number", "tv_show_name:text", "Sub_tittle:text", "Next_show_name:text", "Original_Airdate:text"]}, {"name": "city_channel_radio", "schema": ["City_channel_ID:number", "Radio_ID:number", "Is_online:others"]}, {"name": "city_channel_tv_show", "schema": ["City_channel_ID:number", "tv_show_ID:number", "Is_online:others", "Is_free:others"]}]}
{"db_id": "tv_shows", "query": "SELECT T2.Transmitter ,  COUNT(*) FROM city_channel_radio AS T1 JOIN radio AS T2 ON T1.Radio_ID  =  T2.Radio_ID GROUP BY T2.Transmitter", "query_toks": ["SELECT", "T2.Transmitter", ",", "COUNT", "(", "*", ")", "FROM", "city_channel_radio", "AS", "T1", "JOIN", "radio", "AS", "T2", "ON", "T1.Radio_ID", "=", "T2.Radio_ID", "GROUP", "BY", "T2.Transmitter"], "query_toks_no_value": ["select", "t2", ".", "transmitter", ",", "count", "(", "*", ")", "from", "city_channel_radio", "as", "t1", "join", "radio", "as", "t2", "on", "t1", ".", "radio_id", "=", "t2", ".", "radio_id", "group", "by", "t2", ".", "transmitter"], "question": "Show the transmitters of the radios and the number of city channels they are associated with.", "question_toks": ["Show", "the", "transmitters", "of", "the", "radios", "and", "the", "number", "of", "city", "channels", "they", "are", "associated", "with", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "city_channel", "schema": ["ID:number", "City:text", "Station_name:text", "Owned_Since:number", "Affiliation:text"]}, {"name": "radio", "schema": ["Radio_ID:number", "Transmitter:text", "Radio_MHz:text", "2FM_MHz:text", "RnaG_MHz:text", "Lyric_FM_MHz:text", "ERP_kW:text"]}, {"name": "tv_show", "schema": ["tv_show_ID:number", "tv_show_name:text", "Sub_tittle:text", "Next_show_name:text", "Original_Airdate:text"]}, {"name": "city_channel_radio", "schema": ["City_channel_ID:number", "Radio_ID:number", "Is_online:others"]}, {"name": "city_channel_tv_show", "schema": ["City_channel_ID:number", "tv_show_ID:number", "Is_online:others", "Is_free:others"]}]}
{"db_id": "tv_shows", "query": "SELECT Transmitter FROM radio WHERE Radio_ID NOT IN (SELECT Radio_ID FROM city_channel_radio)", "query_toks": ["SELECT", "Transmitter", "FROM", "radio", "WHERE", "Radio_ID", "NOT", "IN", "(", "SELECT", "Radio_ID", "FROM", "city_channel_radio", ")"], "query_toks_no_value": ["select", "transmitter", "from", "radio", "where", "radio_id", "not", "in", "(", "select", "radio_id", "from", "city_channel_radio", ")"], "question": "Show the distinct transmitters of radios that are not associated with any city channel.", "question_toks": ["Show", "the", "distinct", "transmitters", "of", "radios", "that", "are", "not", "associated", "with", "any", "city", "channel", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "city_channel", "schema": ["ID:number", "City:text", "Station_name:text", "Owned_Since:number", "Affiliation:text"]}, {"name": "radio", "schema": ["Radio_ID:number", "Transmitter:text", "Radio_MHz:text", "2FM_MHz:text", "RnaG_MHz:text", "Lyric_FM_MHz:text", "ERP_kW:text"]}, {"name": "tv_show", "schema": ["tv_show_ID:number", "tv_show_name:text", "Sub_tittle:text", "Next_show_name:text", "Original_Airdate:text"]}, {"name": "city_channel_radio", "schema": ["City_channel_ID:number", "Radio_ID:number", "Is_online:others"]}, {"name": "city_channel_tv_show", "schema": ["City_channel_ID:number", "tv_show_ID:number", "Is_online:others", "Is_free:others"]}]}
{"db_id": "vehicle_driver", "query": "SELECT model FROM vehicle WHERE power  >  6000 ORDER BY top_speed DESC LIMIT 1", "query_toks": ["SELECT", "model", "FROM", "vehicle", "WHERE", "power", ">", "6000", "ORDER", "BY", "top_speed", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "model", "from", "vehicle", "where", "power", ">", "value", "order", "by", "top_speed", "desc", "limit", "value"], "question": "What is the model of the vehicle with maximum top speed whose power is higher than 6000?", "question_toks": ["What", "is", "the", "model", "of", "the", "vehicle", "with", "maximum", "top", "speed", "whose", "power", "is", "higher", "than", "6000", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 6000.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT model FROM vehicle WHERE power  >  6000 ORDER BY top_speed DESC LIMIT 1", "query_toks": ["SELECT", "model", "FROM", "vehicle", "WHERE", "power", ">", "6000", "ORDER", "BY", "top_speed", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "model", "from", "vehicle", "where", "power", ">", "value", "order", "by", "top_speed", "desc", "limit", "value"], "question": "Of vehicles with power over 6000, return the model of the vehicle with the greatest top speed.", "question_toks": ["Of", "vehicles", "with", "power", "over", "6000", ",", "return", "the", "model", "of", "the", "vehicle", "with", "the", "greatest", "top", "speed", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 6000.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT name FROM driver WHERE citizenship  =  'United States'", "query_toks": ["SELECT", "name", "FROM", "driver", "WHERE", "citizenship", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "name", "from", "driver", "where", "citizenship", "=", "value"], "question": "What are the names of the drivers who are citizens of the 'United States'?", "question_toks": ["What", "are", "the", "names", "of", "the", "drivers", "who", "are", "citizens", "of", "the", "'United", "States", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT name FROM driver WHERE citizenship  =  'United States'", "query_toks": ["SELECT", "name", "FROM", "driver", "WHERE", "citizenship", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "name", "from", "driver", "where", "citizenship", "=", "value"], "question": "Return the names of drivers with citizenship from the United States.", "question_toks": ["Return", "the", "names", "of", "drivers", "with", "citizenship", "from", "the", "United", "States", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT count(*) ,  driver_id FROM vehicle_driver GROUP BY driver_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "driver_id", "FROM", "vehicle_driver", "GROUP", "BY", "driver_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "driver_id", "from", "vehicle_driver", "group", "by", "driver_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "How many vehicles has a driver driven at most, and what is the driver id of the driver who has driven this many vehicles?", "question_toks": ["How", "many", "vehicles", "has", "a", "driver", "driven", "at", "most", ",", "and", "what", "is", "the", "driver", "id", "of", "the", "driver", "who", "has", "driven", "this", "many", "vehicles", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT count(*) ,  driver_id FROM vehicle_driver GROUP BY driver_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "driver_id", "FROM", "vehicle_driver", "GROUP", "BY", "driver_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "driver_id", "from", "vehicle_driver", "group", "by", "driver_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id of the driver who has driven the most vehicles, and how many vehicles is this?", "question_toks": ["What", "is", "the", "id", "of", "the", "driver", "who", "has", "driven", "the", "most", "vehicles", ",", "and", "how", "many", "vehicles", "is", "this", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT max(power) ,  avg(power) FROM vehicle WHERE builder  =  'Zhuzhou'", "query_toks": ["SELECT", "max", "(", "power", ")", ",", "avg", "(", "power", ")", "FROM", "vehicle", "WHERE", "builder", "=", "'Zhuzhou", "'"], "query_toks_no_value": ["select", "max", "(", "power", ")", ",", "avg", "(", "power", ")", "from", "vehicle", "where", "builder", "=", "value"], "question": "What is the maximum and average power for the vehicles manufactured by 'Zhuzhou'?", "question_toks": ["What", "is", "the", "maximum", "and", "average", "power", "for", "the", "vehicles", "manufactured", "by", "'Zhuzhou", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 5, false], null]], [5, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Zhuzhou\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT max(power) ,  avg(power) FROM vehicle WHERE builder  =  'Zhuzhou'", "query_toks": ["SELECT", "max", "(", "power", ")", ",", "avg", "(", "power", ")", "FROM", "vehicle", "WHERE", "builder", "=", "'Zhuzhou", "'"], "query_toks_no_value": ["select", "max", "(", "power", ")", ",", "avg", "(", "power", ")", "from", "vehicle", "where", "builder", "=", "value"], "question": "Return the maximum and average power for the vehicles built by Zhuzhou.", "question_toks": ["Return", "the", "maximum", "and", "average", "power", "for", "the", "vehicles", "built", "by", "Zhuzhou", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 5, false], null]], [5, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Zhuzhou\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT vehicle_id FROM vehicle_driver GROUP BY vehicle_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "vehicle_id", "FROM", "vehicle_driver", "GROUP", "BY", "vehicle_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "vehicle_id", "from", "vehicle_driver", "group", "by", "vehicle_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What is the id of the vehicle driven for the least times for the vehicles ever used?", "question_toks": ["What", "is", "the", "id", "of", "the", "vehicle", "driven", "for", "the", "least", "times", "for", "the", "vehicles", "ever", "used", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT vehicle_id FROM vehicle_driver GROUP BY vehicle_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "vehicle_id", "FROM", "vehicle_driver", "GROUP", "BY", "vehicle_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "vehicle_id", "from", "vehicle_driver", "group", "by", "vehicle_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Return the id of the vehicle that has been driven the fewest times.", "question_toks": ["Return", "the", "id", "of", "the", "vehicle", "that", "has", "been", "driven", "the", "fewest", "times", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT top_speed ,  power FROM vehicle WHERE build_year  =  1996", "query_toks": ["SELECT", "top_speed", ",", "power", "FROM", "vehicle", "WHERE", "build_year", "=", "1996"], "query_toks_no_value": ["select", "top_speed", ",", "power", "from", "vehicle", "where", "build_year", "=", "value"], "question": "What is the top speed and power of the vehicle manufactured in the year of 1996?", "question_toks": ["What", "is", "the", "top", "speed", "and", "power", "of", "the", "vehicle", "manufactured", "in", "the", "year", "of", "1996", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 1996.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT top_speed ,  power FROM vehicle WHERE build_year  =  1996", "query_toks": ["SELECT", "top_speed", ",", "power", "FROM", "vehicle", "WHERE", "build_year", "=", "1996"], "query_toks_no_value": ["select", "top_speed", ",", "power", "from", "vehicle", "where", "build_year", "=", "value"], "question": "Return the top speed and power of the vehicle that was built in the year 1996.", "question_toks": ["Return", "the", "top", "speed", "and", "power", "of", "the", "vehicle", "that", "was", "built", "in", "the", "year", "1996", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 1996.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT build_year ,  model ,  builder FROM vehicle", "query_toks": ["SELECT", "build_year", ",", "model", ",", "builder", "FROM", "vehicle"], "query_toks_no_value": ["select", "build_year", ",", "model", ",", "builder", "from", "vehicle"], "question": "What are the build year, model name and builder of the vehicles?", "question_toks": ["What", "are", "the", "build", "year", ",", "model", "name", "and", "builder", "of", "the", "vehicles", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT build_year ,  model ,  builder FROM vehicle", "query_toks": ["SELECT", "build_year", ",", "model", ",", "builder", "FROM", "vehicle"], "query_toks_no_value": ["select", "build_year", ",", "model", ",", "builder", "from", "vehicle"], "question": "Give the build year, model, and builder of each vehicle.", "question_toks": ["Give", "the", "build", "year", ",", "model", ",", "and", "builder", "of", "each", "vehicle", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT count(DISTINCT T1.driver_id) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.vehicle_id  =  T2.vehicle_id WHERE T2.build_year  =  2012", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T1.driver_id", ")", "FROM", "vehicle_driver", "AS", "T1", "JOIN", "vehicle", "AS", "T2", "ON", "T1.vehicle_id", "=", "T2.vehicle_id", "WHERE", "T2.build_year", "=", "2012"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "driver_id", ")", "from", "vehicle_driver", "as", "t1", "join", "vehicle", "as", "t2", "on", "t1", ".", "vehicle_id", "=", "t2", ".", "vehicle_id", "where", "t2", ".", "build_year", "=", "value"], "question": "How many drivers have driven vehicles built in 2012?", "question_toks": ["How", "many", "drivers", "have", "driven", "vehicles", "built", "in", "2012", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 12, true], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 2012.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT count(DISTINCT T1.driver_id) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.vehicle_id  =  T2.vehicle_id WHERE T2.build_year  =  2012", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T1.driver_id", ")", "FROM", "vehicle_driver", "AS", "T1", "JOIN", "vehicle", "AS", "T2", "ON", "T1.vehicle_id", "=", "T2.vehicle_id", "WHERE", "T2.build_year", "=", "2012"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "driver_id", ")", "from", "vehicle_driver", "as", "t1", "join", "vehicle", "as", "t2", "on", "t1", ".", "vehicle_id", "=", "t2", ".", "vehicle_id", "where", "t2", ".", "build_year", "=", "value"], "question": "Count the number of different drivers who have driven vehicles built in 2012.", "question_toks": ["Count", "the", "number", "of", "different", "drivers", "who", "have", "driven", "vehicles", "built", "in", "2012", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 12, true], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 2012.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT count(*) FROM driver WHERE Racing_Series  =  'NASCAR'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "driver", "WHERE", "Racing_Series", "=", "'NASCAR", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "driver", "where", "racing_series", "=", "value"], "question": "How many drivers have raced in 'NASCAR'?", "question_toks": ["How", "many", "drivers", "have", "raced", "in", "'NASCAR", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"NASCAR\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT count(*) FROM driver WHERE Racing_Series  =  'NASCAR'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "driver", "WHERE", "Racing_Series", "=", "'NASCAR", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "driver", "where", "racing_series", "=", "value"], "question": "Count the number of drivers who have raced in NASCAR.", "question_toks": ["Count", "the", "number", "of", "drivers", "who", "have", "raced", "in", "NASCAR", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"NASCAR\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT avg(top_speed) FROM vehicle", "query_toks": ["SELECT", "avg", "(", "top_speed", ")", "FROM", "vehicle"], "query_toks_no_value": ["select", "avg", "(", "top_speed", ")", "from", "vehicle"], "question": "What is the average top speed of vehicles?", "question_toks": ["What", "is", "the", "average", "top", "speed", "of", "vehicles", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT avg(top_speed) FROM vehicle", "query_toks": ["SELECT", "avg", "(", "top_speed", ")", "FROM", "vehicle"], "query_toks_no_value": ["select", "avg", "(", "top_speed", ")", "from", "vehicle"], "question": "Return the average top speed across all vehicles.", "question_toks": ["Return", "the", "average", "top", "speed", "across", "all", "vehicles", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "select distinct t1.name from driver as t1 join vehicle_driver as t2 on t1.driver_id  =  t2.driver_id join vehicle as t3 on t2.vehicle_id  =  t3.vehicle_id where t3.power  >  5000", "query_toks": ["select", "distinct", "t1.name", "from", "driver", "as", "t1", "join", "vehicle_driver", "as", "t2", "on", "t1.driver_id", "=", "t2.driver_id", "join", "vehicle", "as", "t3", "on", "t2.vehicle_id", "=", "t3.vehicle_id", "where", "t3.power", ">", "5000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "driver", "as", "t1", "join", "vehicle_driver", "as", "t2", "on", "t1", ".", "driver_id", "=", "t2", ".", "driver_id", "join", "vehicle", "as", "t3", "on", "t2", ".", "vehicle_id", "=", "t3", ".", "vehicle_id", "where", "t3", ".", "power", ">", "value"], "question": "What are the distinct driver names who have driven vehicles with power more than 5000 ?", "question_toks": ["What", "are", "the", "distinct", "driver", "names", "who", "have", "driven", "vehicles", "with", "power", "more", "than", "5000", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 5000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT DISTINCT T1.Name FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.power  >  5000", "query_toks": ["SELECT", "DISTINCT", "T1.Name", "FROM", "driver", "AS", "T1", "JOIN", "vehicle_driver", "AS", "T2", "ON", "T1.driver_id", "=", "T2.driver_id", "JOIN", "vehicle", "AS", "T3", "ON", "T2.vehicle_id", "=", "T3.vehicle_id", "WHERE", "T3.power", ">", "5000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "driver", "as", "t1", "join", "vehicle_driver", "as", "t2", "on", "t1", ".", "driver_id", "=", "t2", ".", "driver_id", "join", "vehicle", "as", "t3", "on", "t2", ".", "vehicle_id", "=", "t3", ".", "vehicle_id", "where", "t3", ".", "power", ">", "value"], "question": "Return the names of drivers who have driven vehicles with power over 5000.", "question_toks": ["Return", "the", "names", "of", "drivers", "who", "have", "driven", "vehicles", "with", "power", "over", "5000", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 5000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT model FROM vehicle WHERE total_production  >  100 OR top_speed  >  150", "query_toks": ["SELECT", "model", "FROM", "vehicle", "WHERE", "total_production", ">", "100", "OR", "top_speed", ">", "150"], "query_toks_no_value": ["select", "model", "from", "vehicle", "where", "total_production", ">", "value", "or", "top_speed", ">", "value"], "question": "Which car models have total production larger than 100 or top speed higher than 150?", "question_toks": ["Which", "car", "models", "have", "total", "production", "larger", "than", "100", "or", "top", "speed", "higher", "than", "150", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 100.0, null], "or", [false, 3, [0, [0, 4, false], null], 150.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT model FROM vehicle WHERE total_production  >  100 OR top_speed  >  150", "query_toks": ["SELECT", "model", "FROM", "vehicle", "WHERE", "total_production", ">", "100", "OR", "top_speed", ">", "150"], "query_toks_no_value": ["select", "model", "from", "vehicle", "where", "total_production", ">", "value", "or", "top_speed", ">", "value"], "question": "Give the models of cars that have a total production of over 100 or a top speed over 150.", "question_toks": ["Give", "the", "models", "of", "cars", "that", "have", "a", "total", "production", "of", "over", "100", "or", "a", "top", "speed", "over", "150", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 100.0, null], "or", [false, 3, [0, [0, 4, false], null], 150.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT model ,  build_year FROM vehicle WHERE model LIKE '%DJ%'", "query_toks": ["SELECT", "model", ",", "build_year", "FROM", "vehicle", "WHERE", "model", "LIKE", "'", "%", "DJ", "%", "'"], "query_toks_no_value": ["select", "model", ",", "build_year", "from", "vehicle", "where", "model", "like", "value"], "question": "What are the model names and build year of the cars with 'DJ' in its model name?", "question_toks": ["What", "are", "the", "model", "names", "and", "build", "year", "of", "the", "cars", "with", "'DJ", "'", "in", "its", "model", "name", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%DJ%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT model ,  build_year FROM vehicle WHERE model LIKE '%DJ%'", "query_toks": ["SELECT", "model", ",", "build_year", "FROM", "vehicle", "WHERE", "model", "LIKE", "'", "%", "DJ", "%", "'"], "query_toks_no_value": ["select", "model", ",", "build_year", "from", "vehicle", "where", "model", "like", "value"], "question": "Return the model and build year of cars that include \"DJ\" in their model names.", "question_toks": ["Return", "the", "model", "and", "build", "year", "of", "cars", "that", "include", "``", "DJ", "''", "in", "their", "model", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%DJ%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT model FROM vehicle EXCEPT SELECT T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id", "query_toks": ["SELECT", "model", "FROM", "vehicle", "EXCEPT", "SELECT", "T1.model", "FROM", "vehicle", "AS", "T1", "JOIN", "vehicle_driver", "AS", "T2", "ON", "T1.vehicle_id", "=", "T2.vehicle_id"], "query_toks_no_value": ["select", "model", "from", "vehicle", "except", "select", "t1", ".", "model", "from", "vehicle", "as", "t1", "join", "vehicle_driver", "as", "t2", "on", "t1", ".", "vehicle_id", "=", "t2", ".", "vehicle_id"], "question": "What are the models which have not been driven by any drivers?", "question_toks": ["What", "are", "the", "models", "which", "have", "not", "been", "driven", "by", "any", "drivers", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT model FROM vehicle EXCEPT SELECT T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id", "query_toks": ["SELECT", "model", "FROM", "vehicle", "EXCEPT", "SELECT", "T1.model", "FROM", "vehicle", "AS", "T1", "JOIN", "vehicle_driver", "AS", "T2", "ON", "T1.vehicle_id", "=", "T2.vehicle_id"], "query_toks_no_value": ["select", "model", "from", "vehicle", "except", "select", "t1", ".", "model", "from", "vehicle", "as", "t1", "join", "vehicle_driver", "as", "t2", "on", "t1", ".", "vehicle_id", "=", "t2", ".", "vehicle_id"], "question": "Return the models of vehicles that have never been driven.", "question_toks": ["Return", "the", "models", "of", "vehicles", "that", "have", "never", "been", "driven", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  =  2 OR T1.builder  =  'Ziyang'", "query_toks": ["SELECT", "T1.vehicle_id", ",", "T1.model", "FROM", "vehicle", "AS", "T1", "JOIN", "vehicle_driver", "AS", "T2", "ON", "T1.vehicle_id", "=", "T2.vehicle_id", "GROUP", "BY", "T2.vehicle_id", "HAVING", "count", "(", "*", ")", "=", "2", "OR", "T1.builder", "=", "'Ziyang", "'"], "query_toks_no_value": ["select", "t1", ".", "vehicle_id", ",", "t1", ".", "model", "from", "vehicle", "as", "t1", "join", "vehicle_driver", "as", "t2", "on", "t1", ".", "vehicle_id", "=", "t2", ".", "vehicle_id", "group", "by", "t2", ".", "vehicle_id", "having", "count", "(", "*", ")", "=", "value", "or", "t1", ".", "builder", "=", "value"], "question": "What are the vehicle ids and models of the vehicle which have been driven by two drivers or been manufactured by 'Ziyang'.", "question_toks": ["What", "are", "the", "vehicle", "ids", "and", "models", "of", "the", "vehicle", "which", "have", "been", "driven", "by", "two", "drivers", "or", "been", "manufactured", "by", "'Ziyang", "'", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null], "or", [false, 2, [0, [0, 6, false], null], "\"Ziyang\"", null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  =  2 OR T1.builder  =  'Ziyang'", "query_toks": ["SELECT", "T1.vehicle_id", ",", "T1.model", "FROM", "vehicle", "AS", "T1", "JOIN", "vehicle_driver", "AS", "T2", "ON", "T1.vehicle_id", "=", "T2.vehicle_id", "GROUP", "BY", "T2.vehicle_id", "HAVING", "count", "(", "*", ")", "=", "2", "OR", "T1.builder", "=", "'Ziyang", "'"], "query_toks_no_value": ["select", "t1", ".", "vehicle_id", ",", "t1", ".", "model", "from", "vehicle", "as", "t1", "join", "vehicle_driver", "as", "t2", "on", "t1", ".", "vehicle_id", "=", "t2", ".", "vehicle_id", "group", "by", "t2", ".", "vehicle_id", "having", "count", "(", "*", ")", "=", "value", "or", "t1", ".", "builder", "=", "value"], "question": "Return the ids and models of vehicles that have been driven by exactly two drivers or built by Ziyang.", "question_toks": ["Return", "the", "ids", "and", "models", "of", "vehicles", "that", "have", "been", "driven", "by", "exactly", "two", "drivers", "or", "built", "by", "Ziyang", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null], "or", [false, 2, [0, [0, 6, false], null], "\"Ziyang\"", null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id JOIN driver AS T3 ON T2.driver_id  =  T3.driver_id WHERE T3.name  =  'Jeff Gordon' UNION SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  >  2", "query_toks": ["SELECT", "T1.vehicle_id", ",", "T1.model", "FROM", "vehicle", "AS", "T1", "JOIN", "vehicle_driver", "AS", "T2", "ON", "T1.vehicle_id", "=", "T2.vehicle_id", "JOIN", "driver", "AS", "T3", "ON", "T2.driver_id", "=", "T3.driver_id", "WHERE", "T3.name", "=", "'Jeff", "Gordon", "'", "UNION", "SELECT", "T1.vehicle_id", ",", "T1.model", "FROM", "vehicle", "AS", "T1", "JOIN", "vehicle_driver", "AS", "T2", "ON", "T1.vehicle_id", "=", "T2.vehicle_id", "GROUP", "BY", "T2.vehicle_id", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "vehicle_id", ",", "t1", ".", "model", "from", "vehicle", "as", "t1", "join", "vehicle_driver", "as", "t2", "on", "t1", ".", "vehicle_id", "=", "t2", ".", "vehicle_id", "join", "driver", "as", "t3", "on", "t2", ".", "driver_id", "=", "t3", ".", "driver_id", "where", "t3", ".", "name", "=", "value", "union", "select", "t1", ".", "vehicle_id", ",", "t1", ".", "model", "from", "vehicle", "as", "t1", "join", "vehicle_driver", "as", "t2", "on", "t1", ".", "vehicle_id", "=", "t2", ".", "vehicle_id", "group", "by", "t2", ".", "vehicle_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the vehicle ids and models which have been driven by more than 2 drivers or been driven by the driver named 'Jeff Gordon'?", "question_toks": ["What", "are", "the", "vehicle", "ids", "and", "models", "which", "have", "been", "driven", "by", "more", "than", "2", "drivers", "or", "been", "driven", "by", "the", "driver", "named", "'Jeff", "Gordon", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Jeff Gordon\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id JOIN driver AS T3 ON T2.driver_id  =  T3.driver_id WHERE T3.name  =  'Jeff Gordon' UNION SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  >  2", "query_toks": ["SELECT", "T1.vehicle_id", ",", "T1.model", "FROM", "vehicle", "AS", "T1", "JOIN", "vehicle_driver", "AS", "T2", "ON", "T1.vehicle_id", "=", "T2.vehicle_id", "JOIN", "driver", "AS", "T3", "ON", "T2.driver_id", "=", "T3.driver_id", "WHERE", "T3.name", "=", "'Jeff", "Gordon", "'", "UNION", "SELECT", "T1.vehicle_id", ",", "T1.model", "FROM", "vehicle", "AS", "T1", "JOIN", "vehicle_driver", "AS", "T2", "ON", "T1.vehicle_id", "=", "T2.vehicle_id", "GROUP", "BY", "T2.vehicle_id", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "vehicle_id", ",", "t1", ".", "model", "from", "vehicle", "as", "t1", "join", "vehicle_driver", "as", "t2", "on", "t1", ".", "vehicle_id", "=", "t2", ".", "vehicle_id", "join", "driver", "as", "t3", "on", "t2", ".", "driver_id", "=", "t3", ".", "driver_id", "where", "t3", ".", "name", "=", "value", "union", "select", "t1", ".", "vehicle_id", ",", "t1", ".", "model", "from", "vehicle", "as", "t1", "join", "vehicle_driver", "as", "t2", "on", "t1", ".", "vehicle_id", "=", "t2", ".", "vehicle_id", "group", "by", "t2", ".", "vehicle_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Return the ids and models of vehicles that have been driven by more than 2 drivers or been driven by the Jeff Gordon.", "question_toks": ["Return", "the", "ids", "and", "models", "of", "vehicles", "that", "have", "been", "driven", "by", "more", "than", "2", "drivers", "or", "been", "driven", "by", "the", "Jeff", "Gordon", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Jeff Gordon\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT count(*) FROM vehicle WHERE top_speed  =  (SELECT max(top_speed) FROM vehicle)", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "vehicle", "WHERE", "top_speed", "=", "(", "SELECT", "max", "(", "top_speed", ")", "FROM", "vehicle", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "vehicle", "where", "top_speed", "=", "(", "select", "max", "(", "top_speed", ")", "from", "vehicle", ")"], "question": "How many vehicles have maximum top speed?", "question_toks": ["How", "many", "vehicles", "have", "maximum", "top", "speed", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT count(*) FROM vehicle WHERE top_speed  =  (SELECT max(top_speed) FROM vehicle)", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "vehicle", "WHERE", "top_speed", "=", "(", "SELECT", "max", "(", "top_speed", ")", "FROM", "vehicle", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "vehicle", "where", "top_speed", "=", "(", "select", "max", "(", "top_speed", ")", "from", "vehicle", ")"], "question": "Count the number of vehicles that have a top speed equal to the maximum across all vehicles.", "question_toks": ["Count", "the", "number", "of", "vehicles", "that", "have", "a", "top", "speed", "equal", "to", "the", "maximum", "across", "all", "vehicles", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT name FROM driver ORDER BY name", "query_toks": ["SELECT", "name", "FROM", "driver", "ORDER", "BY", "name"], "query_toks_no_value": ["select", "name", "from", "driver", "order", "by", "name"], "question": "Show all driver names in the alphabetical order.", "question_toks": ["Show", "all", "driver", "names", "in", "the", "alphabetical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT name FROM driver ORDER BY name", "query_toks": ["SELECT", "name", "FROM", "driver", "ORDER", "BY", "name"], "query_toks_no_value": ["select", "name", "from", "driver", "order", "by", "name"], "question": "What are the names of drivers, returned in alphbetical order?", "question_toks": ["What", "are", "the", "names", "of", "drivers", ",", "returned", "in", "alphbetical", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT count(*) ,  racing_series FROM driver GROUP BY racing_series", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "racing_series", "FROM", "driver", "GROUP", "BY", "racing_series"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "racing_series", "from", "driver", "group", "by", "racing_series"], "question": "How many drivers have been racing in each racing series?", "question_toks": ["How", "many", "drivers", "have", "been", "racing", "in", "each", "racing", "series", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT count(*) ,  racing_series FROM driver GROUP BY racing_series", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "racing_series", "FROM", "driver", "GROUP", "BY", "racing_series"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "racing_series", "from", "driver", "group", "by", "racing_series"], "question": "Count the number of drivers that have raced in each series.", "question_toks": ["Count", "the", "number", "of", "drivers", "that", "have", "raced", "in", "each", "series", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT T1.name ,  T1.citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.model  =  'DJ1'", "query_toks": ["SELECT", "T1.name", ",", "T1.citizenship", "FROM", "driver", "AS", "T1", "JOIN", "vehicle_driver", "AS", "T2", "ON", "T1.driver_id", "=", "T2.driver_id", "JOIN", "vehicle", "AS", "T3", "ON", "T2.vehicle_id", "=", "T3.vehicle_id", "WHERE", "T3.model", "=", "'DJ1", "'"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "citizenship", "from", "driver", "as", "t1", "join", "vehicle_driver", "as", "t2", "on", "t1", ".", "driver_id", "=", "t2", ".", "driver_id", "join", "vehicle", "as", "t3", "on", "t2", ".", "vehicle_id", "=", "t3", ".", "vehicle_id", "where", "t3", ".", "model", "=", "value"], "question": "What are the name and citizenship of the drivers who have driven the vehicle model 'DJ1'?", "question_toks": ["What", "are", "the", "name", "and", "citizenship", "of", "the", "drivers", "who", "have", "driven", "the", "vehicle", "model", "'DJ1", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"DJ1\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT T1.name ,  T1.citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.model  =  'DJ1'", "query_toks": ["SELECT", "T1.name", ",", "T1.citizenship", "FROM", "driver", "AS", "T1", "JOIN", "vehicle_driver", "AS", "T2", "ON", "T1.driver_id", "=", "T2.driver_id", "JOIN", "vehicle", "AS", "T3", "ON", "T2.vehicle_id", "=", "T3.vehicle_id", "WHERE", "T3.model", "=", "'DJ1", "'"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "citizenship", "from", "driver", "as", "t1", "join", "vehicle_driver", "as", "t2", "on", "t1", ".", "driver_id", "=", "t2", ".", "driver_id", "join", "vehicle", "as", "t3", "on", "t2", ".", "vehicle_id", "=", "t3", ".", "vehicle_id", "where", "t3", ".", "model", "=", "value"], "question": "Return the names and citizenships of drivers who have driven the vehicle with the model 'DJ1'.", "question_toks": ["Return", "the", "names", "and", "citizenships", "of", "drivers", "who", "have", "driven", "the", "vehicle", "with", "the", "model", "'DJ1", "'", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"DJ1\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT count(*) FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM vehicle_driver )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "driver", "WHERE", "driver_id", "NOT", "IN", "(", "SELECT", "driver_id", "FROM", "vehicle_driver", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "driver", "where", "driver_id", "not", "in", "(", "select", "driver_id", "from", "vehicle_driver", ")"], "question": "How many drivers have not driven any cars?", "question_toks": ["How", "many", "drivers", "have", "not", "driven", "any", "cars", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "vehicle_driver", "query": "SELECT count(*) FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM vehicle_driver )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "driver", "WHERE", "driver_id", "NOT", "IN", "(", "SELECT", "driver_id", "FROM", "vehicle_driver", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "driver", "where", "driver_id", "not", "in", "(", "select", "driver_id", "from", "vehicle_driver", ")"], "question": "Count the number of drivers who have not driven any vehicles.", "question_toks": ["Count", "the", "number", "of", "drivers", "who", "have", "not", "driven", "any", "vehicles", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "vehicle", "schema": ["Vehicle_ID:number", "Model:text", "Build_Year:text", "Top_Speed:number", "Power:number", "Builder:text", "Total_Production:text"]}, {"name": "driver", "schema": ["Driver_ID:number", "Name:text", "Citizenship:text", "Racing_Series:text"]}, {"name": "vehicle_driver", "schema": ["Driver_ID:number", "Vehicle_ID:number"]}]}
{"db_id": "online_exams", "query": "SELECT count(*) FROM Exams", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Exams"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "exams"], "question": "How many exams are there?", "question_toks": ["How", "many", "exams", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT count(*) FROM Exams", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Exams"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "exams"], "question": "Count the number of exams.", "question_toks": ["Count", "the", "number", "of", "exams", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "select distinct subject_code from exams order by subject_code asc", "query_toks": ["select", "distinct", "subject_code", "from", "exams", "order", "by", "subject_code", "asc"], "query_toks_no_value": ["select", "distinct", "subject_code", "from", "exams", "order", "by", "subject_code", "asc"], "question": "List the distinct subject code of exams in ascending alphabetical order .", "question_toks": ["List", "the", "distinct", "subject", "code", "of", "exams", "in", "ascending", "alphabetical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code", "query_toks": ["SELECT", "DISTINCT", "Subject_Code", "FROM", "Exams", "ORDER", "BY", "Subject_Code"], "query_toks_no_value": ["select", "distinct", "subject_code", "from", "exams", "order", "by", "subject_code"], "question": "Give me an alphabetically ordered list of the distinct subject code for exams.", "question_toks": ["Give", "me", "an", "alphabetically", "ordered", "list", "of", "the", "distinct", "subject", "code", "for", "exams", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Exam_Date ,  Exam_Name FROM Exams WHERE Subject_Code != 'Database'", "query_toks": ["SELECT", "Exam_Date", ",", "Exam_Name", "FROM", "Exams", "WHERE", "Subject_Code", "!", "=", "'Database", "'"], "query_toks_no_value": ["select", "exam_date", ",", "exam_name", "from", "exams", "where", "subject_code", "!", "=", "value"], "question": "What are the names and dates of the exams with subject code that is not \"Database\"?", "question_toks": ["What", "are", "the", "names", "and", "dates", "of", "the", "exams", "with", "subject", "code", "that", "is", "not", "``", "Database", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 7, [0, [0, 14, false], null], "\"Database\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Exam_Date ,  Exam_Name FROM Exams WHERE Subject_Code != 'Database'", "query_toks": ["SELECT", "Exam_Date", ",", "Exam_Name", "FROM", "Exams", "WHERE", "Subject_Code", "!", "=", "'Database", "'"], "query_toks_no_value": ["select", "exam_date", ",", "exam_name", "from", "exams", "where", "subject_code", "!", "=", "value"], "question": "Find the exams whose subject code is not \"Database\". What are the exam dates and exam names?", "question_toks": ["Find", "the", "exams", "whose", "subject", "code", "is", "not", "``", "Database", "''", ".", "What", "are", "the", "exam", "dates", "and", "exam", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 7, [0, [0, 14, false], null], "\"Database\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC", "query_toks": ["SELECT", "Exam_Date", "FROM", "Exams", "WHERE", "Subject_Code", "LIKE", "'", "%", "data", "%", "'", "ORDER", "BY", "Exam_Date", "DESC"], "query_toks_no_value": ["select", "exam_date", "from", "exams", "where", "subject_code", "like", "value", "order", "by", "exam_date", "desc"], "question": "List the dates of the exams with subject code containing the word \"data\", in descending order of dates.", "question_toks": ["List", "the", "dates", "of", "the", "exams", "with", "subject", "code", "containing", "the", "word", "``", "data", "''", ",", "in", "descending", "order", "of", "dates", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 9, [0, [0, 14, false], null], "\"%data%\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 15, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC", "query_toks": ["SELECT", "Exam_Date", "FROM", "Exams", "WHERE", "Subject_Code", "LIKE", "'", "%", "data", "%", "'", "ORDER", "BY", "Exam_Date", "DESC"], "query_toks_no_value": ["select", "exam_date", "from", "exams", "where", "subject_code", "like", "value", "order", "by", "exam_date", "desc"], "question": "What are the dates of the exams whose subject code contains the substring \"data\"? Return them in descending order of dates.", "question_toks": ["What", "are", "the", "dates", "of", "the", "exams", "whose", "subject", "code", "contains", "the", "substring", "``", "data", "''", "?", "Return", "them", "in", "descending", "order", "of", "dates", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 9, [0, [0, 14, false], null], "\"%data%\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 15, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Type_of_Question_Code ,  COUNT(*) FROM Questions GROUP BY Type_of_Question_Code", "query_toks": ["SELECT", "Type_of_Question_Code", ",", "COUNT", "(", "*", ")", "FROM", "Questions", "GROUP", "BY", "Type_of_Question_Code"], "query_toks_no_value": ["select", "type_of_question_code", ",", "count", "(", "*", ")", "from", "questions", "group", "by", "type_of_question_code"], "question": "What are the type of questions and their counts?", "question_toks": ["What", "are", "the", "type", "of", "questions", "and", "their", "counts", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Type_of_Question_Code ,  COUNT(*) FROM Questions GROUP BY Type_of_Question_Code", "query_toks": ["SELECT", "Type_of_Question_Code", ",", "COUNT", "(", "*", ")", "FROM", "Questions", "GROUP", "BY", "Type_of_Question_Code"], "query_toks_no_value": ["select", "type_of_question_code", ",", "count", "(", "*", ")", "from", "questions", "group", "by", "type_of_question_code"], "question": "For each question type, return its type code and its count of occurrence.", "question_toks": ["For", "each", "question", "type", ",", "return", "its", "type", "code", "and", "its", "count", "of", "occurrence", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\"", "query_toks": ["SELECT", "DISTINCT", "Student_Answer_Text", "FROM", "Student_Answers", "WHERE", "Comments", "=", "``", "Normal", "''"], "query_toks_no_value": ["select", "distinct", "student_answer_text", "from", "student_answers", "where", "comments", "=", "value"], "question": "What are the distinct student answer texts that received comments \"Normal\"?", "question_toks": ["What", "are", "the", "distinct", "student", "answer", "texts", "that", "received", "comments", "``", "Normal", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Normal\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\"", "query_toks": ["SELECT", "DISTINCT", "Student_Answer_Text", "FROM", "Student_Answers", "WHERE", "Comments", "=", "``", "Normal", "''"], "query_toks_no_value": ["select", "distinct", "student_answer_text", "from", "student_answers", "where", "comments", "=", "value"], "question": "List all the distinct student answer texts to which comments \"Normal\" were given?", "question_toks": ["List", "all", "the", "distinct", "student", "answer", "texts", "to", "which", "comments", "``", "Normal", "''", "were", "given", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Normal\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT count(DISTINCT Comments) FROM Student_Answers", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Comments", ")", "FROM", "Student_Answers"], "query_toks_no_value": ["select", "count", "(", "distinct", "comments", ")", "from", "student_answers"], "question": "How many different comments are there for student answers?", "question_toks": ["How", "many", "different", "comments", "are", "there", "for", "student", "answers", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 27, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT count(DISTINCT Comments) FROM Student_Answers", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Comments", ")", "FROM", "Student_Answers"], "query_toks_no_value": ["select", "count", "(", "distinct", "comments", ")", "from", "student_answers"], "question": "Count the number of different comments for student answers.", "question_toks": ["Count", "the", "number", "of", "different", "comments", "for", "student", "answers", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 27, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Student_Answer_Text FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY COUNT(*) DESC", "query_toks": ["SELECT", "Student_Answer_Text", "FROM", "Student_Answers", "GROUP", "BY", "Student_Answer_Text", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "student_answer_text", "from", "student_answers", "group", "by", "student_answer_text", "order", "by", "count", "(", "*", ")", "desc"], "question": "List all the student answer texts in descending order of count.", "question_toks": ["List", "all", "the", "student", "answer", "texts", "in", "descending", "order", "of", "count", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [[0, 29, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Student_Answer_Text FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY COUNT(*) DESC", "query_toks": ["SELECT", "Student_Answer_Text", "FROM", "Student_Answers", "GROUP", "BY", "Student_Answer_Text", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "student_answer_text", "from", "student_answers", "group", "by", "student_answer_text", "order", "by", "count", "(", "*", ")", "desc"], "question": "Sort the student answer texts in descending order of their frequency of occurrence.", "question_toks": ["Sort", "the", "student", "answer", "texts", "in", "descending", "order", "of", "their", "frequency", "of", "occurrence", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [[0, 29, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT T2.First_Name ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID", "query_toks": ["SELECT", "T2.First_Name", ",", "T1.Date_of_Answer", "FROM", "Student_Answers", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.Student_ID", "=", "T2.Student_ID"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t1", ".", "date_of_answer", "from", "student_answers", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id"], "question": "Please show the first names of students and the dates of their answers.", "question_toks": ["Please", "show", "the", "first", "names", "of", "students", "and", "the", "dates", "of", "their", "answers", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 25, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT T2.First_Name ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID", "query_toks": ["SELECT", "T2.First_Name", ",", "T1.Date_of_Answer", "FROM", "Student_Answers", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.Student_ID", "=", "T2.Student_ID"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t1", ".", "date_of_answer", "from", "student_answers", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id"], "question": "For each student answer, find the first name of the student and the date of the answer.", "question_toks": ["For", "each", "student", "answer", ",", "find", "the", "first", "name", "of", "the", "student", "and", "the", "date", "of", "the", "answer", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 25, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT T2.Email_Adress ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID ORDER BY T1.Date_of_Answer DESC", "query_toks": ["SELECT", "T2.Email_Adress", ",", "T1.Date_of_Answer", "FROM", "Student_Answers", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.Student_ID", "=", "T2.Student_ID", "ORDER", "BY", "T1.Date_of_Answer", "DESC"], "query_toks_no_value": ["select", "t2", ".", "email_adress", ",", "t1", ".", "date_of_answer", "from", "student_answers", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "order", "by", "t1", ".", "date_of_answer", "desc"], "question": "Please show the email addresses of students and the dates of their answers in descending order of dates.", "question_toks": ["Please", "show", "the", "email", "addresses", "of", "students", "and", "the", "dates", "of", "their", "answers", "in", "descending", "order", "of", "dates", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 25, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 26, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT T2.Email_Adress ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID ORDER BY T1.Date_of_Answer DESC", "query_toks": ["SELECT", "T2.Email_Adress", ",", "T1.Date_of_Answer", "FROM", "Student_Answers", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.Student_ID", "=", "T2.Student_ID", "ORDER", "BY", "T1.Date_of_Answer", "DESC"], "query_toks_no_value": ["select", "t2", ".", "email_adress", ",", "t1", ".", "date_of_answer", "from", "student_answers", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "order", "by", "t1", ".", "date_of_answer", "desc"], "question": "For each student answer, find the email address of the student and the date of the answer. Sort them in descending order of dates.", "question_toks": ["For", "each", "student", "answer", ",", "find", "the", "email", "address", "of", "the", "student", "and", "the", "date", "of", "the", "answer", ".", "Sort", "them", "in", "descending", "order", "of", "dates", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 25, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 26, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) ASC LIMIT 1", "query_toks": ["SELECT", "Assessment", "FROM", "Student_Assessments", "GROUP", "BY", "Assessment", "ORDER", "BY", "COUNT", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "assessment", "from", "student_assessments", "group", "by", "assessment", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Please show the least common assessment for students.", "question_toks": ["Please", "show", "the", "least", "common", "assessment", "for", "students", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [], "groupBy": [[0, 34, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) ASC LIMIT 1", "query_toks": ["SELECT", "Assessment", "FROM", "Student_Assessments", "GROUP", "BY", "Assessment", "ORDER", "BY", "COUNT", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "assessment", "from", "student_assessments", "group", "by", "assessment", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Which assessment has the smallest frequency count?", "question_toks": ["Which", "assessment", "has", "the", "smallest", "frequency", "count", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [], "groupBy": [[0, 34, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT T2.First_Name FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID GROUP BY T1.Student_ID HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "T2.First_Name", "FROM", "Student_Answers", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.Student_ID", "=", "T2.Student_ID", "GROUP", "BY", "T1.Student_ID", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "first_name", "from", "student_answers", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Please show the first names of the students that have at least two answer records.", "question_toks": ["Please", "show", "the", "first", "names", "of", "the", "students", "that", "have", "at", "least", "two", "answer", "records", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 25, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 25, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT T2.First_Name FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID GROUP BY T1.Student_ID HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "T2.First_Name", "FROM", "Student_Answers", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.Student_ID", "=", "T2.Student_ID", "GROUP", "BY", "T1.Student_ID", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "first_name", "from", "student_answers", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which students have 2 or more answer records? Give me their first names.", "question_toks": ["Which", "students", "have", "2", "or", "more", "answer", "records", "?", "Give", "me", "their", "first", "names", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 25, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 25, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Valid_Answer_Text FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Valid_Answer_Text", "FROM", "Valid_Answers", "GROUP", "BY", "Valid_Answer_Text", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "valid_answer_text", "from", "valid_answers", "group", "by", "valid_answer_text", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most common valid answer text?", "question_toks": ["What", "is", "the", "most", "common", "valid", "answer", "text", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Valid_Answer_Text FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Valid_Answer_Text", "FROM", "Valid_Answers", "GROUP", "BY", "Valid_Answer_Text", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "valid_answer_text", "from", "valid_answers", "group", "by", "valid_answer_text", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the valid answer text that appeared most frequently.", "question_toks": ["Find", "the", "valid", "answer", "text", "that", "appeared", "most", "frequently", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Last_Name FROM Students WHERE Gender_MFU != \"M\"", "query_toks": ["SELECT", "Last_Name", "FROM", "Students", "WHERE", "Gender_MFU", "!", "=", "``", "M", "''"], "query_toks_no_value": ["select", "last_name", "from", "students", "where", "gender_mfu", "!", "=", "value"], "question": "List the last names of the students whose gender is not \"M\".", "question_toks": ["List", "the", "last", "names", "of", "the", "students", "whose", "gender", "is", "not", "``", "M", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"M\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Last_Name FROM Students WHERE Gender_MFU != \"M\"", "query_toks": ["SELECT", "Last_Name", "FROM", "Students", "WHERE", "Gender_MFU", "!", "=", "``", "M", "''"], "query_toks_no_value": ["select", "last_name", "from", "students", "where", "gender_mfu", "!", "=", "value"], "question": "What are the last names of the students with gender other than \"M\"?", "question_toks": ["What", "are", "the", "last", "names", "of", "the", "students", "with", "gender", "other", "than", "``", "M", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"M\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Gender_MFU ,  COUNT(*) FROM Students GROUP BY Gender_MFU", "query_toks": ["SELECT", "Gender_MFU", ",", "COUNT", "(", "*", ")", "FROM", "Students", "GROUP", "BY", "Gender_MFU"], "query_toks_no_value": ["select", "gender_mfu", ",", "count", "(", "*", ")", "from", "students", "group", "by", "gender_mfu"], "question": "List each gender and the corresponding number of students.", "question_toks": ["List", "each", "gender", "and", "the", "corresponding", "number", "of", "students", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Gender_MFU ,  COUNT(*) FROM Students GROUP BY Gender_MFU", "query_toks": ["SELECT", "Gender_MFU", ",", "COUNT", "(", "*", ")", "FROM", "Students", "GROUP", "BY", "Gender_MFU"], "query_toks_no_value": ["select", "gender_mfu", ",", "count", "(", "*", ")", "from", "students", "group", "by", "gender_mfu"], "question": "For each gender, return the gender code and the number of students who identify as that gender.", "question_toks": ["For", "each", "gender", ",", "return", "the", "gender", "code", "and", "the", "number", "of", "students", "who", "identify", "as", "that", "gender", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Last_Name FROM Students WHERE Gender_MFU  =  \"F\" OR Gender_MFU  =  \"M\"", "query_toks": ["SELECT", "Last_Name", "FROM", "Students", "WHERE", "Gender_MFU", "=", "``", "F", "''", "OR", "Gender_MFU", "=", "``", "M", "''"], "query_toks_no_value": ["select", "last_name", "from", "students", "where", "gender_mfu", "=", "value", "or", "gender_mfu", "=", "value"], "question": "List the last names of the students whose gender is \"F\" or \"M\".", "question_toks": ["List", "the", "last", "names", "of", "the", "students", "whose", "gender", "is", "``", "F", "''", "or", "``", "M", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"F\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"M\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Last_Name FROM Students WHERE Gender_MFU  =  \"F\" OR Gender_MFU  =  \"M\"", "query_toks": ["SELECT", "Last_Name", "FROM", "Students", "WHERE", "Gender_MFU", "=", "``", "F", "''", "OR", "Gender_MFU", "=", "``", "M", "''"], "query_toks_no_value": ["select", "last_name", "from", "students", "where", "gender_mfu", "=", "value", "or", "gender_mfu", "=", "value"], "question": "Which students identify their gender as \"F\" or \"M\"? Give me their last names.", "question_toks": ["Which", "students", "identify", "their", "gender", "as", "``", "F", "''", "or", "``", "M", "''", "?", "Give", "me", "their", "last", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"F\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"M\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers)", "query_toks": ["SELECT", "First_Name", "FROM", "Students", "WHERE", "Student_ID", "NOT", "IN", "(", "SELECT", "Student_ID", "FROM", "Student_Answers", ")"], "query_toks_no_value": ["select", "first_name", "from", "students", "where", "student_id", "not", "in", "(", "select", "student_id", "from", "student_answers", ")"], "question": "List the first names of the students who do not have any answers.", "question_toks": ["List", "the", "first", "names", "of", "the", "students", "who", "do", "not", "have", "any", "answers", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers)", "query_toks": ["SELECT", "First_Name", "FROM", "Students", "WHERE", "Student_ID", "NOT", "IN", "(", "SELECT", "Student_ID", "FROM", "Student_Answers", ")"], "query_toks_no_value": ["select", "first_name", "from", "students", "where", "student_id", "not", "in", "(", "select", "student_id", "from", "student_answers", ")"], "question": "Which students do not have any answers? Find their first names.", "question_toks": ["Which", "students", "do", "not", "have", "any", "answers", "?", "Find", "their", "first", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\" INTERSECT SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Absent\"", "query_toks": ["SELECT", "Student_Answer_Text", "FROM", "Student_Answers", "WHERE", "Comments", "=", "``", "Normal", "''", "INTERSECT", "SELECT", "Student_Answer_Text", "FROM", "Student_Answers", "WHERE", "Comments", "=", "``", "Absent", "''"], "query_toks_no_value": ["select", "student_answer_text", "from", "student_answers", "where", "comments", "=", "value", "intersect", "select", "student_answer_text", "from", "student_answers", "where", "comments", "=", "value"], "question": "Show the student answer texts that received both \"Normal\" and \"Absent\" as comments.", "question_toks": ["Show", "the", "student", "answer", "texts", "that", "received", "both", "``", "Normal", "''", "and", "``", "Absent", "''", "as", "comments", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Normal\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Absent\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\" INTERSECT SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Absent\"", "query_toks": ["SELECT", "Student_Answer_Text", "FROM", "Student_Answers", "WHERE", "Comments", "=", "``", "Normal", "''", "INTERSECT", "SELECT", "Student_Answer_Text", "FROM", "Student_Answers", "WHERE", "Comments", "=", "``", "Absent", "''"], "query_toks_no_value": ["select", "student_answer_text", "from", "student_answers", "where", "comments", "=", "value", "intersect", "select", "student_answer_text", "from", "student_answers", "where", "comments", "=", "value"], "question": "Which student answer texts were given both \"Normal\" and \"Absent\" as comments?", "question_toks": ["Which", "student", "answer", "texts", "were", "given", "both", "``", "Normal", "''", "and", "``", "Absent", "''", "as", "comments", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Normal\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Absent\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING count(*)  >=  3", "query_toks": ["SELECT", "Type_of_Question_Code", "FROM", "Questions", "GROUP", "BY", "Type_of_Question_Code", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "type_of_question_code", "from", "questions", "group", "by", "type_of_question_code", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the types of questions that have at least three questions.", "question_toks": ["Show", "the", "types", "of", "questions", "that", "have", "at", "least", "three", "questions", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING count(*)  >=  3", "query_toks": ["SELECT", "Type_of_Question_Code", "FROM", "Questions", "GROUP", "BY", "Type_of_Question_Code", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "type_of_question_code", "from", "questions", "group", "by", "type_of_question_code", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which types of questions have 3 or more questions? Return the questions type code.", "question_toks": ["Which", "types", "of", "questions", "have", "3", "or", "more", "questions", "?", "Return", "the", "questions", "type", "code", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT * FROM Students", "query_toks": ["SELECT", "*", "FROM", "Students"], "query_toks_no_value": ["select", "*", "from", "students"], "question": "Show all information on students.", "question_toks": ["Show", "all", "information", "on", "students", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "online_exams", "query": "SELECT * FROM Students", "query_toks": ["SELECT", "*", "FROM", "Students"], "query_toks_no_value": ["select", "*", "from", "students"], "question": "What is al the available information of each student?", "question_toks": ["What", "is", "al", "the", "available", "information", "of", "each", "student", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["Student_ID:number", "First_Name:text", "Middle_Name:text", "Last_Name:text", "Gender_MFU:text", "Student_Address:text", "Email_Adress:text", "Cell_Mobile_Phone:text", "Home_Phone:text"]}, {"name": "Questions", "schema": ["Question_ID:number", "Type_of_Question_Code:text", "Question_Text:text"]}, {"name": "Exams", "schema": ["Exam_ID:number", "Subject_Code:text", "Exam_Date:time", "Exam_Name:text"]}, {"name": "Questions_in_Exams", "schema": ["Exam_ID:number", "Question_ID:number"]}, {"name": "Valid_Answers", "schema": ["Valid_Answer_ID:number", "Question_ID:number", "Valid_Answer_Text:text"]}, {"name": "Student_Answers", "schema": ["Student_Answer_ID:number", "Exam_ID:number", "Question_ID:number", "Student_ID:number", "Date_of_Answer:time", "Comments:text", "Satisfactory_YN:text", "Student_Answer_Text:text"]}, {"name": "Student_Assessments", "schema": ["Student_Answer_ID:text", "Valid_Answer_ID:number", "Student_Answer_Text:text", "Satisfactory_YN:text", "Assessment:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(*) FROM Addresses", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Addresses"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "addresses"], "question": "How many addresses do we have?", "question_toks": ["How", "many", "addresses", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(*) FROM Addresses", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Addresses"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "addresses"], "question": "Count the number of addresses.", "question_toks": ["Count", "the", "number", "of", "addresses", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT address_id ,  address_details FROM Addresses", "query_toks": ["SELECT", "address_id", ",", "address_details", "FROM", "Addresses"], "query_toks_no_value": ["select", "address_id", ",", "address_details", "from", "addresses"], "question": "List all address ids and address details.", "question_toks": ["List", "all", "address", "ids", "and", "address", "details", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT address_id ,  address_details FROM Addresses", "query_toks": ["SELECT", "address_id", ",", "address_details", "FROM", "Addresses"], "query_toks_no_value": ["select", "address_id", ",", "address_details", "from", "addresses"], "question": "What are all the address ids and address details?", "question_toks": ["What", "are", "all", "the", "address", "ids", "and", "address", "details", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(*) FROM Products", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Products"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "products"], "question": "How many products do we have?", "question_toks": ["How", "many", "products", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(*) FROM Products", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Products"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "products"], "question": "Count the number of products.", "question_toks": ["Count", "the", "number", "of", "products", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_id ,  product_type_code ,  product_name FROM Products", "query_toks": ["SELECT", "product_id", ",", "product_type_code", ",", "product_name", "FROM", "Products"], "query_toks_no_value": ["select", "product_id", ",", "product_type_code", ",", "product_name", "from", "products"], "question": "Show all product ids, product type codes, and product name.", "question_toks": ["Show", "all", "product", "ids", ",", "product", "type", "codes", ",", "and", "product", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_id ,  product_type_code ,  product_name FROM Products", "query_toks": ["SELECT", "product_id", ",", "product_type_code", ",", "product_name", "FROM", "Products"], "query_toks_no_value": ["select", "product_id", ",", "product_type_code", ",", "product_name", "from", "products"], "question": "What are the ids, type codes, and names for all products?", "question_toks": ["What", "are", "the", "ids", ",", "type", "codes", ",", "and", "names", "for", "all", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_price FROM Products WHERE product_name  =  \"Monitor\"", "query_toks": ["SELECT", "product_price", "FROM", "Products", "WHERE", "product_name", "=", "``", "Monitor", "''"], "query_toks_no_value": ["select", "product_price", "from", "products", "where", "product_name", "=", "value"], "question": "What is the price for the product with name Monitor?", "question_toks": ["What", "is", "the", "price", "for", "the", "product", "with", "name", "Monitor", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Monitor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_price FROM Products WHERE product_name  =  \"Monitor\"", "query_toks": ["SELECT", "product_price", "FROM", "Products", "WHERE", "product_name", "=", "``", "Monitor", "''"], "query_toks_no_value": ["select", "product_price", "from", "products", "where", "product_name", "=", "value"], "question": "Give the price of the Monitor product.", "question_toks": ["Give", "the", "price", "of", "the", "Monitor", "product", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Monitor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT min(product_price) ,  avg(product_price) ,  max(product_price) FROM Products", "query_toks": ["SELECT", "min", "(", "product_price", ")", ",", "avg", "(", "product_price", ")", ",", "max", "(", "product_price", ")", "FROM", "Products"], "query_toks_no_value": ["select", "min", "(", "product_price", ")", ",", "avg", "(", "product_price", ")", ",", "max", "(", "product_price", ")", "from", "products"], "question": "Show the minimum, average, maximum price for all products.", "question_toks": ["Show", "the", "minimum", ",", "average", ",", "maximum", "price", "for", "all", "products", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 4, false], null]], [5, [0, [0, 4, false], null]], [1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT min(product_price) ,  avg(product_price) ,  max(product_price) FROM Products", "query_toks": ["SELECT", "min", "(", "product_price", ")", ",", "avg", "(", "product_price", ")", ",", "max", "(", "product_price", ")", "FROM", "Products"], "query_toks_no_value": ["select", "min", "(", "product_price", ")", ",", "avg", "(", "product_price", ")", ",", "max", "(", "product_price", ")", "from", "products"], "question": "What are the minimum, average, and maximum prices across all products?", "question_toks": ["What", "are", "the", "minimum", ",", "average", ",", "and", "maximum", "prices", "across", "all", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 4, false], null]], [5, [0, [0, 4, false], null]], [1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Clothes\"", "query_toks": ["SELECT", "avg", "(", "product_price", ")", "FROM", "Products", "WHERE", "product_type_code", "=", "``", "Clothes", "''"], "query_toks_no_value": ["select", "avg", "(", "product_price", ")", "from", "products", "where", "product_type_code", "=", "value"], "question": "What is the average price for products with type Clothes?", "question_toks": ["What", "is", "the", "average", "price", "for", "products", "with", "type", "Clothes", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Clothes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Clothes\"", "query_toks": ["SELECT", "avg", "(", "product_price", ")", "FROM", "Products", "WHERE", "product_type_code", "=", "``", "Clothes", "''"], "query_toks_no_value": ["select", "avg", "(", "product_price", ")", "from", "products", "where", "product_type_code", "=", "value"], "question": "Return the average price of Clothes.", "question_toks": ["Return", "the", "average", "price", "of", "Clothes", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Clothes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(*) FROM Products WHERE product_type_code  =  \"Hardware\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Products", "WHERE", "product_type_code", "=", "``", "Hardware", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "products", "where", "product_type_code", "=", "value"], "question": "How many hardware type products do we have?", "question_toks": ["How", "many", "hardware", "type", "products", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Hardware\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(*) FROM Products WHERE product_type_code  =  \"Hardware\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Products", "WHERE", "product_type_code", "=", "``", "Hardware", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "products", "where", "product_type_code", "=", "value"], "question": "Count the number of products of the type Hardware.", "question_toks": ["Count", "the", "number", "of", "products", "of", "the", "type", "Hardware", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Hardware\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_name FROM Products WHERE product_price  >  (SELECT avg(product_price) FROM Products)", "query_toks": ["SELECT", "product_name", "FROM", "Products", "WHERE", "product_price", ">", "(", "SELECT", "avg", "(", "product_price", ")", "FROM", "Products", ")"], "query_toks_no_value": ["select", "product_name", "from", "products", "where", "product_price", ">", "(", "select", "avg", "(", "product_price", ")", "from", "products", ")"], "question": "Show all product names with price higher than the average.", "question_toks": ["Show", "all", "product", "names", "with", "price", "higher", "than", "the", "average", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_name FROM Products WHERE product_price  >  (SELECT avg(product_price) FROM Products)", "query_toks": ["SELECT", "product_name", "FROM", "Products", "WHERE", "product_price", ">", "(", "SELECT", "avg", "(", "product_price", ")", "FROM", "Products", ")"], "query_toks_no_value": ["select", "product_name", "from", "products", "where", "product_price", ">", "(", "select", "avg", "(", "product_price", ")", "from", "products", ")"], "question": "What are the names of products that have a price above the average for all products.", "question_toks": ["What", "are", "the", "names", "of", "products", "that", "have", "a", "price", "above", "the", "average", "for", "all", "products", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" AND product_price  >  (SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Hardware\")", "query_toks": ["SELECT", "product_name", "FROM", "Products", "WHERE", "product_type_code", "=", "``", "Hardware", "''", "AND", "product_price", ">", "(", "SELECT", "avg", "(", "product_price", ")", "FROM", "Products", "WHERE", "product_type_code", "=", "``", "Hardware", "''", ")"], "query_toks_no_value": ["select", "product_name", "from", "products", "where", "product_type_code", "=", "value", "and", "product_price", ">", "(", "select", "avg", "(", "product_price", ")", "from", "products", "where", "product_type_code", "=", "value", ")"], "question": "Show all hardware product names with price higher than the average price of hardware type products.", "question_toks": ["Show", "all", "hardware", "product", "names", "with", "price", "higher", "than", "the", "average", "price", "of", "hardware", "type", "products", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Hardware\"", null], "and", [false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Hardware\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" AND product_price  >  (SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Hardware\")", "query_toks": ["SELECT", "product_name", "FROM", "Products", "WHERE", "product_type_code", "=", "``", "Hardware", "''", "AND", "product_price", ">", "(", "SELECT", "avg", "(", "product_price", ")", "FROM", "Products", "WHERE", "product_type_code", "=", "``", "Hardware", "''", ")"], "query_toks_no_value": ["select", "product_name", "from", "products", "where", "product_type_code", "=", "value", "and", "product_price", ">", "(", "select", "avg", "(", "product_price", ")", "from", "products", "where", "product_type_code", "=", "value", ")"], "question": "What are the names of Hardware product with prices above the average price of Hardware products.", "question_toks": ["What", "are", "the", "names", "of", "Hardware", "product", "with", "prices", "above", "the", "average", "price", "of", "Hardware", "products", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Hardware\"", null], "and", [false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Hardware\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_name FROM Products WHERE product_type_code  =  \"Clothes\" ORDER BY product_price DESC LIMIT 1", "query_toks": ["SELECT", "product_name", "FROM", "Products", "WHERE", "product_type_code", "=", "``", "Clothes", "''", "ORDER", "BY", "product_price", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "product_name", "from", "products", "where", "product_type_code", "=", "value", "order", "by", "product_price", "desc", "limit", "value"], "question": "What is the name of the most expensive product with type Clothes?", "question_toks": ["What", "is", "the", "name", "of", "the", "most", "expensive", "product", "with", "type", "Clothes", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Clothes\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_name FROM Products WHERE product_type_code  =  \"Clothes\" ORDER BY product_price DESC LIMIT 1", "query_toks": ["SELECT", "product_name", "FROM", "Products", "WHERE", "product_type_code", "=", "``", "Clothes", "''", "ORDER", "BY", "product_price", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "product_name", "from", "products", "where", "product_type_code", "=", "value", "order", "by", "product_price", "desc", "limit", "value"], "question": "Give the name of the most expensive Clothes product.", "question_toks": ["Give", "the", "name", "of", "the", "most", "expensive", "Clothes", "product", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Clothes\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_id ,  product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC LIMIT 1", "query_toks": ["SELECT", "product_id", ",", "product_name", "FROM", "Products", "WHERE", "product_type_code", "=", "``", "Hardware", "''", "ORDER", "BY", "product_price", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "product_id", ",", "product_name", "from", "products", "where", "product_type_code", "=", "value", "order", "by", "product_price", "asc", "limit", "value"], "question": "What is the product id and product name for the cheapest Hardware type product?", "question_toks": ["What", "is", "the", "product", "id", "and", "product", "name", "for", "the", "cheapest", "Hardware", "type", "product", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Hardware\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_id ,  product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC LIMIT 1", "query_toks": ["SELECT", "product_id", ",", "product_name", "FROM", "Products", "WHERE", "product_type_code", "=", "``", "Hardware", "''", "ORDER", "BY", "product_price", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "product_id", ",", "product_name", "from", "products", "where", "product_type_code", "=", "value", "order", "by", "product_price", "asc", "limit", "value"], "question": "Give the id and name of the cheapest Hardware product.", "question_toks": ["Give", "the", "id", "and", "name", "of", "the", "cheapest", "Hardware", "product", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Hardware\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_name FROM Products ORDER BY product_price DESC", "query_toks": ["SELECT", "product_name", "FROM", "Products", "ORDER", "BY", "product_price", "DESC"], "query_toks_no_value": ["select", "product_name", "from", "products", "order", "by", "product_price", "desc"], "question": "List all product names in descending order of price.", "question_toks": ["List", "all", "product", "names", "in", "descending", "order", "of", "price", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_name FROM Products ORDER BY product_price DESC", "query_toks": ["SELECT", "product_name", "FROM", "Products", "ORDER", "BY", "product_price", "DESC"], "query_toks_no_value": ["select", "product_name", "from", "products", "order", "by", "product_price", "desc"], "question": "What are the names of the products, sorted by descending price?", "question_toks": ["What", "are", "the", "names", "of", "the", "products", ",", "sorted", "by", "descending", "price", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC", "query_toks": ["SELECT", "product_name", "FROM", "Products", "WHERE", "product_type_code", "=", "``", "Hardware", "''", "ORDER", "BY", "product_price", "ASC"], "query_toks_no_value": ["select", "product_name", "from", "products", "where", "product_type_code", "=", "value", "order", "by", "product_price", "asc"], "question": "Show all hardware type products in ascending order of price.", "question_toks": ["Show", "all", "hardware", "type", "products", "in", "ascending", "order", "of", "price", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Hardware\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC", "query_toks": ["SELECT", "product_name", "FROM", "Products", "WHERE", "product_type_code", "=", "``", "Hardware", "''", "ORDER", "BY", "product_price", "ASC"], "query_toks_no_value": ["select", "product_name", "from", "products", "where", "product_type_code", "=", "value", "order", "by", "product_price", "asc"], "question": "What are the names of all Hardware products, sorted by price ascending?", "question_toks": ["What", "are", "the", "names", "of", "all", "Hardware", "products", ",", "sorted", "by", "price", "ascending", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Hardware\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_type_code ,  count(*) FROM Products GROUP BY product_type_code", "query_toks": ["SELECT", "product_type_code", ",", "count", "(", "*", ")", "FROM", "Products", "GROUP", "BY", "product_type_code"], "query_toks_no_value": ["select", "product_type_code", ",", "count", "(", "*", ")", "from", "products", "group", "by", "product_type_code"], "question": "List all product type codes and the number of products in each type.", "question_toks": ["List", "all", "product", "type", "codes", "and", "the", "number", "of", "products", "in", "each", "type", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_type_code ,  count(*) FROM Products GROUP BY product_type_code", "query_toks": ["SELECT", "product_type_code", ",", "count", "(", "*", ")", "FROM", "Products", "GROUP", "BY", "product_type_code"], "query_toks_no_value": ["select", "product_type_code", ",", "count", "(", "*", ")", "from", "products", "group", "by", "product_type_code"], "question": "How many products are there for each product type?", "question_toks": ["How", "many", "products", "are", "there", "for", "each", "product", "type", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_type_code ,  avg(product_price) FROM Products GROUP BY product_type_code", "query_toks": ["SELECT", "product_type_code", ",", "avg", "(", "product_price", ")", "FROM", "Products", "GROUP", "BY", "product_type_code"], "query_toks_no_value": ["select", "product_type_code", ",", "avg", "(", "product_price", ")", "from", "products", "group", "by", "product_type_code"], "question": "Show all product type codes and the average price for each type.", "question_toks": ["Show", "all", "product", "type", "codes", "and", "the", "average", "price", "for", "each", "type", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_type_code ,  avg(product_price) FROM Products GROUP BY product_type_code", "query_toks": ["SELECT", "product_type_code", ",", "avg", "(", "product_price", ")", "FROM", "Products", "GROUP", "BY", "product_type_code"], "query_toks_no_value": ["select", "product_type_code", ",", "avg", "(", "product_price", ")", "from", "products", "group", "by", "product_type_code"], "question": "What is the average price of products for each product type?", "question_toks": ["What", "is", "the", "average", "price", "of", "products", "for", "each", "product", "type", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING count(*)  >=  2", "query_toks": ["SELECT", "product_type_code", "FROM", "Products", "GROUP", "BY", "product_type_code", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "product_type_code", "from", "products", "group", "by", "product_type_code", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the product type code with at least two products?", "question_toks": ["What", "are", "the", "product", "type", "code", "with", "at", "least", "two", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING count(*)  >=  2", "query_toks": ["SELECT", "product_type_code", "FROM", "Products", "GROUP", "BY", "product_type_code", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "product_type_code", "from", "products", "group", "by", "product_type_code", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Give the product type codes of product types that have two or more products.", "question_toks": ["Give", "the", "product", "type", "codes", "of", "product", "types", "that", "have", "two", "or", "more", "products", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "product_type_code", "FROM", "Products", "GROUP", "BY", "product_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "product_type_code", "from", "products", "group", "by", "product_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the product type code with most number of products?", "question_toks": ["What", "is", "the", "product", "type", "code", "with", "most", "number", "of", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "product_type_code", "FROM", "Products", "GROUP", "BY", "product_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "product_type_code", "from", "products", "group", "by", "product_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most frequent product type code?", "question_toks": ["What", "is", "the", "most", "frequent", "product", "type", "code", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(*) FROM Customers", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Customers"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "customers"], "question": "How many customers do we have?", "question_toks": ["How", "many", "customers", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(*) FROM Customers", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Customers"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "customers"], "question": "Count the number of customers.", "question_toks": ["Count", "the", "number", "of", "customers", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT customer_id ,  customer_name FROM Customers", "query_toks": ["SELECT", "customer_id", ",", "customer_name", "FROM", "Customers"], "query_toks_no_value": ["select", "customer_id", ",", "customer_name", "from", "customers"], "question": "Show all customer ids and customer names.", "question_toks": ["Show", "all", "customer", "ids", "and", "customer", "names", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT customer_id ,  customer_name FROM Customers", "query_toks": ["SELECT", "customer_id", ",", "customer_name", "FROM", "Customers"], "query_toks_no_value": ["select", "customer_id", ",", "customer_name", "from", "customers"], "question": "What are the ids and names of all customers?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "all", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT customer_address ,  customer_phone ,  customer_email FROM Customers WHERE customer_name  =  \"Jeromy\"", "query_toks": ["SELECT", "customer_address", ",", "customer_phone", ",", "customer_email", "FROM", "Customers", "WHERE", "customer_name", "=", "``", "Jeromy", "''"], "query_toks_no_value": ["select", "customer_address", ",", "customer_phone", ",", "customer_email", "from", "customers", "where", "customer_name", "=", "value"], "question": "What is the customer address, customer phone, and customer email for Jeromy?", "question_toks": ["What", "is", "the", "customer", "address", ",", "customer", "phone", ",", "and", "customer", "email", "for", "Jeromy", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Jeromy\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT customer_address ,  customer_phone ,  customer_email FROM Customers WHERE customer_name  =  \"Jeromy\"", "query_toks": ["SELECT", "customer_address", ",", "customer_phone", ",", "customer_email", "FROM", "Customers", "WHERE", "customer_name", "=", "``", "Jeromy", "''"], "query_toks_no_value": ["select", "customer_address", ",", "customer_phone", ",", "customer_email", "from", "customers", "where", "customer_name", "=", "value"], "question": "Give the address, phone, and email for customers with the name Jeromy.", "question_toks": ["Give", "the", "address", ",", "phone", ",", "and", "email", "for", "customers", "with", "the", "name", "Jeromy", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Jeromy\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT payment_method_code ,  count(*) FROM Customers GROUP BY payment_method_code", "query_toks": ["SELECT", "payment_method_code", ",", "count", "(", "*", ")", "FROM", "Customers", "GROUP", "BY", "payment_method_code"], "query_toks_no_value": ["select", "payment_method_code", ",", "count", "(", "*", ")", "from", "customers", "group", "by", "payment_method_code"], "question": "Show all payment method codes and the number of customers in each code.", "question_toks": ["Show", "all", "payment", "method", "codes", "and", "the", "number", "of", "customers", "in", "each", "code", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT payment_method_code ,  count(*) FROM Customers GROUP BY payment_method_code", "query_toks": ["SELECT", "payment_method_code", ",", "count", "(", "*", ")", "FROM", "Customers", "GROUP", "BY", "payment_method_code"], "query_toks_no_value": ["select", "payment_method_code", ",", "count", "(", "*", ")", "from", "customers", "group", "by", "payment_method_code"], "question": "How many customers use each payment method?", "question_toks": ["How", "many", "customers", "use", "each", "payment", "method", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "payment_method_code", "FROM", "Customers", "GROUP", "BY", "payment_method_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "payment_method_code", "from", "customers", "group", "by", "payment_method_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the payment method code used by most number of customers?", "question_toks": ["What", "is", "the", "payment", "method", "code", "used", "by", "most", "number", "of", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "payment_method_code", "FROM", "Customers", "GROUP", "BY", "payment_method_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "payment_method_code", "from", "customers", "group", "by", "payment_method_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give the code of the payment method that is most commonly used.", "question_toks": ["Give", "the", "code", "of", "the", "payment", "method", "that", "is", "most", "commonly", "used", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT customer_name FROM Customers WHERE payment_method_code  =  ( SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) ASC LIMIT 1)", "query_toks": ["SELECT", "customer_name", "FROM", "Customers", "WHERE", "payment_method_code", "=", "(", "SELECT", "payment_method_code", "FROM", "Customers", "GROUP", "BY", "payment_method_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "customer_name", "from", "customers", "where", "payment_method_code", "=", "(", "select", "payment_method_code", "from", "customers", "group", "by", "payment_method_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value", ")"], "question": "Show all customer names with the  payment method code used by least number of customers.", "question_toks": ["Show", "all", "customer", "names", "with", "the", "payment", "method", "code", "used", "by", "least", "number", "of", "customers", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT customer_name FROM Customers WHERE payment_method_code  =  ( SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) ASC LIMIT 1)", "query_toks": ["SELECT", "customer_name", "FROM", "Customers", "WHERE", "payment_method_code", "=", "(", "SELECT", "payment_method_code", "FROM", "Customers", "GROUP", "BY", "payment_method_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "customer_name", "from", "customers", "where", "payment_method_code", "=", "(", "select", "payment_method_code", "from", "customers", "group", "by", "payment_method_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value", ")"], "question": "What are the names of customers who use the least common payment method?", "question_toks": ["What", "are", "the", "names", "of", "customers", "who", "use", "the", "least", "common", "payment", "method", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT payment_method_code ,  customer_number FROM Customers WHERE customer_name  =  \"Jeromy\"", "query_toks": ["SELECT", "payment_method_code", ",", "customer_number", "FROM", "Customers", "WHERE", "customer_name", "=", "``", "Jeromy", "''"], "query_toks_no_value": ["select", "payment_method_code", ",", "customer_number", "from", "customers", "where", "customer_name", "=", "value"], "question": "What is the payment method and customer number for customer named Jeromy?", "question_toks": ["What", "is", "the", "payment", "method", "and", "customer", "number", "for", "customer", "named", "Jeromy", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Jeromy\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT payment_method_code ,  customer_number FROM Customers WHERE customer_name  =  \"Jeromy\"", "query_toks": ["SELECT", "payment_method_code", ",", "customer_number", "FROM", "Customers", "WHERE", "customer_name", "=", "``", "Jeromy", "''"], "query_toks_no_value": ["select", "payment_method_code", ",", "customer_number", "from", "customers", "where", "customer_name", "=", "value"], "question": "Give the payment method code and customer number corresponding to the customer named Jeromy.", "question_toks": ["Give", "the", "payment", "method", "code", "and", "customer", "number", "corresponding", "to", "the", "customer", "named", "Jeromy", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Jeromy\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT DISTINCT payment_method_code FROM Customers", "query_toks": ["SELECT", "DISTINCT", "payment_method_code", "FROM", "Customers"], "query_toks_no_value": ["select", "distinct", "payment_method_code", "from", "customers"], "question": "What are the distinct payment methods used by customers?", "question_toks": ["What", "are", "the", "distinct", "payment", "methods", "used", "by", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT DISTINCT payment_method_code FROM Customers", "query_toks": ["SELECT", "DISTINCT", "payment_method_code", "FROM", "Customers"], "query_toks_no_value": ["select", "distinct", "payment_method_code", "from", "customers"], "question": "Give the different payment method codes that customers use.", "question_toks": ["Give", "the", "different", "payment", "method", "codes", "that", "customers", "use", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_id ,  product_type_code FROM Products ORDER BY product_name", "query_toks": ["SELECT", "product_id", ",", "product_type_code", "FROM", "Products", "ORDER", "BY", "product_name"], "query_toks_no_value": ["select", "product_id", ",", "product_type_code", "from", "products", "order", "by", "product_name"], "question": "Show the id and the product type for all products, order by product name.", "question_toks": ["Show", "the", "id", "and", "the", "product", "type", "for", "all", "products", ",", "order", "by", "product", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_id ,  product_type_code FROM Products ORDER BY product_name", "query_toks": ["SELECT", "product_id", ",", "product_type_code", "FROM", "Products", "ORDER", "BY", "product_name"], "query_toks_no_value": ["select", "product_id", ",", "product_type_code", "from", "products", "order", "by", "product_name"], "question": "What are the ids and product types for all products, sorted alphabetically by product name?", "question_toks": ["What", "are", "the", "ids", "and", "product", "types", "for", "all", "products", ",", "sorted", "alphabetically", "by", "product", "name", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "product_type_code", "FROM", "Products", "GROUP", "BY", "product_type_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "product_type_code", "from", "products", "group", "by", "product_type_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What is the product type with least number of products?", "question_toks": ["What", "is", "the", "product", "type", "with", "least", "number", "of", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "product_type_code", "FROM", "Products", "GROUP", "BY", "product_type_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "product_type_code", "from", "products", "group", "by", "product_type_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What is the code of the product type that is least common?", "question_toks": ["What", "is", "the", "code", "of", "the", "product", "type", "that", "is", "least", "common", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(*) FROM Customer_orders", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Customer_orders"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "customer_orders"], "question": "How many customer orders do we have?", "question_toks": ["How", "many", "customer", "orders", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(*) FROM Customer_orders", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Customer_orders"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "customer_orders"], "question": "Count the number of customer orders.", "question_toks": ["Count", "the", "number", "of", "customer", "orders", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT order_id ,  order_date ,  order_status_code FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_name  =  \"Jeromy\"", "query_toks": ["SELECT", "order_id", ",", "order_date", ",", "order_status_code", "FROM", "Customer_orders", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.customer_name", "=", "``", "Jeromy", "''"], "query_toks_no_value": ["select", "order_id", ",", "order_date", ",", "order_status_code", "from", "customer_orders", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "customer_name", "=", "value"], "question": "Show the order ids, order dates, and order status codes for all orders by customer Jeromy.", "question_toks": ["Show", "the", "order", "ids", ",", "order", "dates", ",", "and", "order", "status", "codes", "for", "all", "orders", "by", "customer", "Jeromy", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Jeromy\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT order_id ,  order_date ,  order_status_code FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_name  =  \"Jeromy\"", "query_toks": ["SELECT", "order_id", ",", "order_date", ",", "order_status_code", "FROM", "Customer_orders", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.customer_name", "=", "``", "Jeromy", "''"], "query_toks_no_value": ["select", "order_id", ",", "order_date", ",", "order_status_code", "from", "customer_orders", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "customer_name", "=", "value"], "question": "What were the ids, dates, and status codes for orders made by Jeromy?", "question_toks": ["What", "were", "the", "ids", ",", "dates", ",", "and", "status", "codes", "for", "orders", "made", "by", "Jeromy", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Jeromy\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT T2.customer_name ,  T1.customer_id ,  count(*) FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id", "query_toks": ["SELECT", "T2.customer_name", ",", "T1.customer_id", ",", "count", "(", "*", ")", "FROM", "Customer_orders", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id"], "query_toks_no_value": ["select", "t2", ".", "customer_name", ",", "t1", ".", "customer_id", ",", "count", "(", "*", ")", "from", "customer_orders", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id"], "question": "Show all customer names, ids and the number of orders by each customer.", "question_toks": ["Show", "all", "customer", "names", ",", "ids", "and", "the", "number", "of", "orders", "by", "each", "customer", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 16, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 16, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT T2.customer_name ,  T1.customer_id ,  count(*) FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id", "query_toks": ["SELECT", "T2.customer_name", ",", "T1.customer_id", ",", "count", "(", "*", ")", "FROM", "Customer_orders", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id"], "query_toks_no_value": ["select", "t2", ".", "customer_name", ",", "t1", ".", "customer_id", ",", "count", "(", "*", ")", "from", "customer_orders", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id"], "question": "What are the names, ids, and number of orders made for each customer?", "question_toks": ["What", "are", "the", "names", ",", "ids", ",", "and", "number", "of", "orders", "made", "for", "each", "customer", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 16, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 16, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT T1.customer_id ,  T2.customer_name ,  T2.customer_phone ,  T2.customer_email FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.customer_id", ",", "T2.customer_name", ",", "T2.customer_phone", ",", "T2.customer_email", "FROM", "Customer_orders", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t2", ".", "customer_name", ",", "t2", ".", "customer_phone", ",", "t2", ".", "customer_email", "from", "customer_orders", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the customer id, name, phone, and email for the customer with most orders?", "question_toks": ["What", "is", "the", "customer", "id", ",", "name", ",", "phone", ",", "and", "email", "for", "the", "customer", "with", "most", "orders", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 16, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT T1.customer_id ,  T2.customer_name ,  T2.customer_phone ,  T2.customer_email FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.customer_id", ",", "T2.customer_name", ",", "T2.customer_phone", ",", "T2.customer_email", "FROM", "Customer_orders", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t2", ".", "customer_name", ",", "t2", ".", "customer_phone", ",", "t2", ".", "customer_email", "from", "customer_orders", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give the id, name, phone, and email corresponding to the customer who made the most orders.", "question_toks": ["Give", "the", "id", ",", "name", ",", "phone", ",", "and", "email", "corresponding", "to", "the", "customer", "who", "made", "the", "most", "orders", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 16, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT order_status_code ,  count(*) FROM Customer_orders GROUP BY order_status_code", "query_toks": ["SELECT", "order_status_code", ",", "count", "(", "*", ")", "FROM", "Customer_orders", "GROUP", "BY", "order_status_code"], "query_toks_no_value": ["select", "order_status_code", ",", "count", "(", "*", ")", "from", "customer_orders", "group", "by", "order_status_code"], "question": "Show all order status and the number of orders in each status.", "question_toks": ["Show", "all", "order", "status", "and", "the", "number", "of", "orders", "in", "each", "status", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT order_status_code ,  count(*) FROM Customer_orders GROUP BY order_status_code", "query_toks": ["SELECT", "order_status_code", ",", "count", "(", "*", ")", "FROM", "Customer_orders", "GROUP", "BY", "order_status_code"], "query_toks_no_value": ["select", "order_status_code", ",", "count", "(", "*", ")", "from", "customer_orders", "group", "by", "order_status_code"], "question": "How many orders have each order status code?", "question_toks": ["How", "many", "orders", "have", "each", "order", "status", "code", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT order_status_code FROM Customer_orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "order_status_code", "FROM", "Customer_orders", "GROUP", "BY", "order_status_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "order_status_code", "from", "customer_orders", "group", "by", "order_status_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the order status code that is most common?", "question_toks": ["What", "is", "the", "order", "status", "code", "that", "is", "most", "common", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT order_status_code FROM Customer_orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "order_status_code", "FROM", "Customer_orders", "GROUP", "BY", "order_status_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "order_status_code", "from", "customer_orders", "group", "by", "order_status_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give the order status code that is most frequent across customer orders.", "question_toks": ["Give", "the", "order", "status", "code", "that", "is", "most", "frequent", "across", "customer", "orders", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Customer_orders)", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Customers", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "Customer_orders", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "customer_orders", ")"], "question": "How many customers do not have an order?", "question_toks": ["How", "many", "customers", "do", "not", "have", "an", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Customer_orders)", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Customers", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "Customer_orders", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "customer_orders", ")"], "question": "Count the number of customers who have not made an order.", "question_toks": ["Count", "the", "number", "of", "customers", "who", "have", "not", "made", "an", "order", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS t1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id", "query_toks": ["SELECT", "product_name", "FROM", "Products", "EXCEPT", "SELECT", "T1.product_name", "FROM", "Products", "AS", "t1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id"], "query_toks_no_value": ["select", "product_name", "from", "products", "except", "select", "t1", ".", "product_name", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id"], "question": "Show all product names without an order.", "question_toks": ["Show", "all", "product", "names", "without", "an", "order", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS t1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id", "query_toks": ["SELECT", "product_name", "FROM", "Products", "EXCEPT", "SELECT", "T1.product_name", "FROM", "Products", "AS", "t1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id"], "query_toks_no_value": ["select", "product_name", "from", "products", "except", "select", "t1", ".", "product_name", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id"], "question": "What are the names of products that have not been ordered?", "question_toks": ["What", "are", "the", "names", "of", "products", "that", "have", "not", "been", "ordered", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT sum(order_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name  =  \"Monitor\"", "query_toks": ["SELECT", "sum", "(", "order_quantity", ")", "FROM", "Order_items", "AS", "T1", "JOIN", "Products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "WHERE", "T2.product_name", "=", "``", "Monitor", "''"], "query_toks_no_value": ["select", "sum", "(", "order_quantity", ")", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t2", ".", "product_name", "=", "value"], "question": "How many products named Monitor have been ordered?", "question_toks": ["How", "many", "products", "named", "Monitor", "have", "been", "ordered", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]]}, "select": [false, [[4, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Monitor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT sum(order_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name  =  \"Monitor\"", "query_toks": ["SELECT", "sum", "(", "order_quantity", ")", "FROM", "Order_items", "AS", "T1", "JOIN", "Products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "WHERE", "T2.product_name", "=", "``", "Monitor", "''"], "query_toks_no_value": ["select", "sum", "(", "order_quantity", ")", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t2", ".", "product_name", "=", "value"], "question": "What is the total number of Monitor products that have been ordered?", "question_toks": ["What", "is", "the", "total", "number", "of", "Monitor", "products", "that", "have", "been", "ordered", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]]}, "select": [false, [[4, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Monitor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(DISTINCT T3.customer_id) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Customer_orders AS T3 ON T3.order_id  =  T1.order_id WHERE T2.product_name  =  \"Monitor\"", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T3.customer_id", ")", "FROM", "Order_items", "AS", "T1", "JOIN", "Products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Customer_orders", "AS", "T3", "ON", "T3.order_id", "=", "T1.order_id", "WHERE", "T2.product_name", "=", "``", "Monitor", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "t3", ".", "customer_id", ")", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "customer_orders", "as", "t3", "on", "t3", ".", "order_id", "=", "t1", ".", "order_id", "where", "t2", ".", "product_name", "=", "value"], "question": "How many customers have ordered the product named Monitor?", "question_toks": ["How", "many", "customers", "have", "ordered", "the", "product", "named", "Monitor", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 15, false], null], [0, 20, false], null]]}, "select": [false, [[3, [0, [0, 16, true], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Monitor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(DISTINCT T3.customer_id) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Customer_orders AS T3 ON T3.order_id  =  T1.order_id WHERE T2.product_name  =  \"Monitor\"", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T3.customer_id", ")", "FROM", "Order_items", "AS", "T1", "JOIN", "Products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Customer_orders", "AS", "T3", "ON", "T3.order_id", "=", "T1.order_id", "WHERE", "T2.product_name", "=", "``", "Monitor", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "t3", ".", "customer_id", ")", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "customer_orders", "as", "t3", "on", "t3", ".", "order_id", "=", "t1", ".", "order_id", "where", "t2", ".", "product_name", "=", "value"], "question": "Count the number of different customers who have bought a Monitor Product.", "question_toks": ["Count", "the", "number", "of", "different", "customers", "who", "have", "bought", "a", "Monitor", "Product", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 15, false], null], [0, 20, false], null]]}, "select": [false, [[3, [0, [0, 16, true], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Monitor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(DISTINCT customer_id) FROM Customer_orders", "query_toks": ["SELECT", "count", "(", "DISTINCT", "customer_id", ")", "FROM", "Customer_orders"], "query_toks_no_value": ["select", "count", "(", "distinct", "customer_id", ")", "from", "customer_orders"], "question": "How many customers have an order?", "question_toks": ["How", "many", "customers", "have", "an", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 16, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT count(DISTINCT customer_id) FROM Customer_orders", "query_toks": ["SELECT", "count", "(", "DISTINCT", "customer_id", ")", "FROM", "Customer_orders"], "query_toks_no_value": ["select", "count", "(", "distinct", "customer_id", ")", "from", "customer_orders"], "question": "Count the number of differnt customers who have made an order.", "question_toks": ["Count", "the", "number", "of", "differnt", "customers", "who", "have", "made", "an", "order", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 16, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Customer_orders", "query_toks": ["SELECT", "customer_id", "FROM", "Customers", "EXCEPT", "SELECT", "customer_id", "FROM", "Customer_orders"], "query_toks_no_value": ["select", "customer_id", "from", "customers", "except", "select", "customer_id", "from", "customer_orders"], "question": "Show all customer ids without an order.", "question_toks": ["Show", "all", "customer", "ids", "without", "an", "order", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Customer_orders", "query_toks": ["SELECT", "customer_id", "FROM", "Customers", "EXCEPT", "SELECT", "customer_id", "FROM", "Customer_orders"], "query_toks_no_value": ["select", "customer_id", "from", "customers", "except", "select", "customer_id", "from", "customer_orders"], "question": "What are the ids of customers who have not made an order?", "question_toks": ["What", "are", "the", "ids", "of", "customers", "who", "have", "not", "made", "an", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id WHERE T2.order_quantity  >  6 UNION SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  3;", "query_toks": ["SELECT", "T1.order_date", ",", "T1.order_id", "FROM", "Customer_Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "WHERE", "T2.order_quantity", ">", "6", "UNION", "SELECT", "T1.order_date", ",", "T1.order_id", "FROM", "Customer_Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T1.order_id", "HAVING", "count", "(", "*", ")", ">", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "order_date", ",", "t1", ".", "order_id", "from", "customer_orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "where", "t2", ".", "order_quantity", ">", "value", "union", "select", "t1", ".", "order_date", ",", "t1", ".", "order_id", "from", "customer_orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t1", ".", "order_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Show all the order dates and ids of the orders with quantity of any product larger than 6 or with more than 3 products.", "question_toks": ["Show", "all", "the", "order", "dates", "and", "ids", "of", "the", "orders", "with", "quantity", "of", "any", "product", "larger", "than", "6", "or", "with", "more", "than", "3", "products", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 22, false], null], 6.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "customers_and_orders", "query": "SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id WHERE T2.order_quantity  >  6 UNION SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  3;", "query_toks": ["SELECT", "T1.order_date", ",", "T1.order_id", "FROM", "Customer_Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "WHERE", "T2.order_quantity", ">", "6", "UNION", "SELECT", "T1.order_date", ",", "T1.order_id", "FROM", "Customer_Orders", "AS", "T1", "JOIN", "Order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T1.order_id", "HAVING", "count", "(", "*", ")", ">", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "order_date", ",", "t1", ".", "order_id", "from", "customer_orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "where", "t2", ".", "order_quantity", ">", "value", "union", "select", "t1", ".", "order_date", ",", "t1", ".", "order_id", "from", "customer_orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t1", ".", "order_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the order ids and corresponding order dates for orders with a quantity greater than 6 or consisting of more than 3 products?", "question_toks": ["What", "are", "the", "order", "ids", "and", "corresponding", "order", "dates", "for", "orders", "with", "a", "quantity", "greater", "than", "6", "or", "consisting", "of", "more", "than", "3", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 22, false], null], 6.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "tables": [{"name": "Products", "schema": ["product_id:number", "product_type_code:text", "product_name:text", "product_price:number"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Customers", "schema": ["customer_id:number", "address_id:number", "payment_method_code:text", "customer_number:text", "customer_name:text", "customer_address:text", "customer_phone:text", "customer_email:text"]}, {"name": "Customer_Orders", "schema": ["order_id:number", "customer_id:number", "order_date:time", "order_status_code:text"]}, {"name": "Order_Items", "schema": ["order_item_id:number", "order_id:number", "product_id:number", "order_quantity:text"]}]}
{"db_id": "region_building", "query": "SELECT count(*) FROM building", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "building"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "building"], "question": "How many buildings are there?", "question_toks": ["How", "many", "buildings", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT count(*) FROM building", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "building"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "building"], "question": "Count the number of buildings.", "question_toks": ["Count", "the", "number", "of", "buildings", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Name FROM building ORDER BY Number_of_Stories ASC", "query_toks": ["SELECT", "Name", "FROM", "building", "ORDER", "BY", "Number_of_Stories", "ASC"], "query_toks_no_value": ["select", "name", "from", "building", "order", "by", "number_of_stories", "asc"], "question": "List the names of buildings in ascending order of number of stories.", "question_toks": ["List", "the", "names", "of", "buildings", "in", "ascending", "order", "of", "number", "of", "stories", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Name FROM building ORDER BY Number_of_Stories ASC", "query_toks": ["SELECT", "Name", "FROM", "building", "ORDER", "BY", "Number_of_Stories", "ASC"], "query_toks_no_value": ["select", "name", "from", "building", "order", "by", "number_of_stories", "asc"], "question": "What is the list of building names, sorted by the number of stories of each building in ascending order?", "question_toks": ["What", "is", "the", "list", "of", "building", "names", ",", "sorted", "by", "the", "number", "of", "stories", "of", "each", "building", "in", "ascending", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Address FROM building ORDER BY Completed_Year DESC", "query_toks": ["SELECT", "Address", "FROM", "building", "ORDER", "BY", "Completed_Year", "DESC"], "query_toks_no_value": ["select", "address", "from", "building", "order", "by", "completed_year", "desc"], "question": "List the addresses of buildings in descending order of building completion year.", "question_toks": ["List", "the", "addresses", "of", "buildings", "in", "descending", "order", "of", "building", "completion", "year", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Address FROM building ORDER BY Completed_Year DESC", "query_toks": ["SELECT", "Address", "FROM", "building", "ORDER", "BY", "Completed_Year", "DESC"], "query_toks_no_value": ["select", "address", "from", "building", "order", "by", "completed_year", "desc"], "question": "Sort the buildings in descending order of building completion year, and return the building addresses.", "question_toks": ["Sort", "the", "buildings", "in", "descending", "order", "of", "building", "completion", "year", ",", "and", "return", "the", "building", "addresses", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT max(Number_of_Stories) FROM building WHERE Completed_Year != \"1980\"", "query_toks": ["SELECT", "max", "(", "Number_of_Stories", ")", "FROM", "building", "WHERE", "Completed_Year", "!", "=", "``", "1980", "''"], "query_toks_no_value": ["select", "max", "(", "number_of_stories", ")", "from", "building", "where", "completed_year", "!", "=", "value"], "question": "What is the maximum number of stories of buildings not completed in 1980?", "question_toks": ["What", "is", "the", "maximum", "number", "of", "stories", "of", "buildings", "not", "completed", "in", "1980", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 5, false], null]]]], "where": [[false, 7, [0, [0, 6, false], null], "\"1980\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT max(Number_of_Stories) FROM building WHERE Completed_Year != \"1980\"", "query_toks": ["SELECT", "max", "(", "Number_of_Stories", ")", "FROM", "building", "WHERE", "Completed_Year", "!", "=", "``", "1980", "''"], "query_toks_no_value": ["select", "max", "(", "number_of_stories", ")", "from", "building", "where", "completed_year", "!", "=", "value"], "question": "Among the buildings not completed in 1980, what is the maximum number of stories?", "question_toks": ["Among", "the", "buildings", "not", "completed", "in", "1980", ",", "what", "is", "the", "maximum", "number", "of", "stories", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 5, false], null]]]], "where": [[false, 7, [0, [0, 6, false], null], "\"1980\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT avg(Population) FROM region", "query_toks": ["SELECT", "avg", "(", "Population", ")", "FROM", "region"], "query_toks_no_value": ["select", "avg", "(", "population", ")", "from", "region"], "question": "What is the average population for all regions?", "question_toks": ["What", "is", "the", "average", "population", "for", "all", "regions", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT avg(Population) FROM region", "query_toks": ["SELECT", "avg", "(", "Population", ")", "FROM", "region"], "query_toks_no_value": ["select", "avg", "(", "population", ")", "from", "region"], "question": "Compute the average population of a region.", "question_toks": ["Compute", "the", "average", "population", "of", "a", "region", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Name FROM region ORDER BY Name ASC", "query_toks": ["SELECT", "Name", "FROM", "region", "ORDER", "BY", "Name", "ASC"], "query_toks_no_value": ["select", "name", "from", "region", "order", "by", "name", "asc"], "question": "What are the names of regions in ascending alphabetical order?", "question_toks": ["What", "are", "the", "names", "of", "regions", "in", "ascending", "alphabetical", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 8, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Name FROM region ORDER BY Name ASC", "query_toks": ["SELECT", "Name", "FROM", "region", "ORDER", "BY", "Name", "ASC"], "query_toks_no_value": ["select", "name", "from", "region", "order", "by", "name", "asc"], "question": "List the names of regions in alphabetical order.", "question_toks": ["List", "the", "names", "of", "regions", "in", "alphabetical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 8, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Capital FROM region WHERE Area  >  10000", "query_toks": ["SELECT", "Capital", "FROM", "region", "WHERE", "Area", ">", "10000"], "query_toks_no_value": ["select", "capital", "from", "region", "where", "area", ">", "value"], "question": "What are the capitals of the regions with area bigger than 10000?", "question_toks": ["What", "are", "the", "capitals", "of", "the", "regions", "with", "area", "bigger", "than", "10000", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 10000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Capital FROM region WHERE Area  >  10000", "query_toks": ["SELECT", "Capital", "FROM", "region", "WHERE", "Area", ">", "10000"], "query_toks_no_value": ["select", "capital", "from", "region", "where", "area", ">", "value"], "question": "Give me the capitals of the regions whose area is larger than 10000.", "question_toks": ["Give", "me", "the", "capitals", "of", "the", "regions", "whose", "area", "is", "larger", "than", "10000", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 10000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Capital FROM region ORDER BY Population DESC LIMIT 1", "query_toks": ["SELECT", "Capital", "FROM", "region", "ORDER", "BY", "Population", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "capital", "from", "region", "order", "by", "population", "desc", "limit", "value"], "question": "List the capital of the region with the largest population.", "question_toks": ["List", "the", "capital", "of", "the", "region", "with", "the", "largest", "population", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Capital FROM region ORDER BY Population DESC LIMIT 1", "query_toks": ["SELECT", "Capital", "FROM", "region", "ORDER", "BY", "Population", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "capital", "from", "region", "order", "by", "population", "desc", "limit", "value"], "question": "Which region has the largest population? Give me the capital of the region.", "question_toks": ["Which", "region", "has", "the", "largest", "population", "?", "Give", "me", "the", "capital", "of", "the", "region", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5", "query_toks": ["SELECT", "Name", "FROM", "region", "ORDER", "BY", "Area", "DESC", "LIMIT", "5"], "query_toks_no_value": ["select", "name", "from", "region", "order", "by", "area", "desc", "limit", "value"], "question": "List the names of the regions with the top 5 largest areas.", "question_toks": ["List", "the", "names", "of", "the", "regions", "with", "the", "top", "5", "largest", "areas", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": 5, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5", "query_toks": ["SELECT", "Name", "FROM", "region", "ORDER", "BY", "Area", "DESC", "LIMIT", "5"], "query_toks_no_value": ["select", "name", "from", "region", "order", "by", "area", "desc", "limit", "value"], "question": "What are the names of the 5 largest regions in terms of area?", "question_toks": ["What", "are", "the", "names", "of", "the", "5", "largest", "regions", "in", "terms", "of", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": 5, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT T1.Name ,  T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Name", "FROM", "building", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.Region_ID", "=", "T2.Region_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "building", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id"], "question": "Show the names of buildings and the names of regions they are in.", "question_toks": ["Show", "the", "names", "of", "buildings", "and", "the", "names", "of", "regions", "they", "are", "in", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT T1.Name ,  T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Name", "FROM", "building", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.Region_ID", "=", "T2.Region_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "building", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id"], "question": "For each building, return the name of the building and the name of the region it belongs to.", "question_toks": ["For", "each", "building", ",", "return", "the", "name", "of", "the", "building", "and", "the", "name", "of", "the", "region", "it", "belongs", "to", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T2.Name", "FROM", "building", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.Region_ID", "=", "T2.Region_ID", "GROUP", "BY", "T1.Region_ID", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "building", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "group", "by", "t1", ".", "region_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Show the names of regions that have more than one building.", "question_toks": ["Show", "the", "names", "of", "regions", "that", "have", "more", "than", "one", "building", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T2.Name", "FROM", "building", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.Region_ID", "=", "T2.Region_ID", "GROUP", "BY", "T1.Region_ID", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "building", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "group", "by", "t1", ".", "region_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Which regions have more than one building? Give me the names of the regions.", "question_toks": ["Which", "regions", "have", "more", "than", "one", "building", "?", "Give", "me", "the", "names", "of", "the", "regions", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT T2.capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.capital", "FROM", "building", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.Region_ID", "=", "T2.Region_ID", "GROUP", "BY", "T1.Region_ID", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "capital", "from", "building", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "group", "by", "t1", ".", "region_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the capital of the region that has the most buildings.", "question_toks": ["Show", "the", "capital", "of", "the", "region", "that", "has", "the", "most", "buildings", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT T2.capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.capital", "FROM", "building", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.Region_ID", "=", "T2.Region_ID", "GROUP", "BY", "T1.Region_ID", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "capital", "from", "building", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "group", "by", "t1", ".", "region_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which region has the largest number of buildings? Show me the capital of the region.", "question_toks": ["Which", "region", "has", "the", "largest", "number", "of", "buildings", "?", "Show", "me", "the", "capital", "of", "the", "region", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT T1.Address ,  T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID", "query_toks": ["SELECT", "T1.Address", ",", "T2.Capital", "FROM", "building", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.Region_ID", "=", "T2.Region_ID"], "query_toks_no_value": ["select", "t1", ".", "address", ",", "t2", ".", "capital", "from", "building", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id"], "question": "Show addresses of buildings and the capitals of regions they are in.", "question_toks": ["Show", "addresses", "of", "buildings", "and", "the", "capitals", "of", "regions", "they", "are", "in", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT T1.Address ,  T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID", "query_toks": ["SELECT", "T1.Address", ",", "T2.Capital", "FROM", "building", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.Region_ID", "=", "T2.Region_ID"], "query_toks_no_value": ["select", "t1", ".", "address", ",", "t2", ".", "capital", "from", "building", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id"], "question": "For each building, return the address of the building and the name of the region it belongs to.", "question_toks": ["For", "each", "building", ",", "return", "the", "address", "of", "the", "building", "and", "the", "name", "of", "the", "region", "it", "belongs", "to", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT T1.Number_of_Stories FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID WHERE T2.Name  =  \"Abruzzo\"", "query_toks": ["SELECT", "T1.Number_of_Stories", "FROM", "building", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.Region_ID", "=", "T2.Region_ID", "WHERE", "T2.Name", "=", "``", "Abruzzo", "''"], "query_toks_no_value": ["select", "t1", ".", "number_of_stories", "from", "building", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "where", "t2", ".", "name", "=", "value"], "question": "Show the number of stories of buildings in the region with name \"Abruzzo\".", "question_toks": ["Show", "the", "number", "of", "stories", "of", "buildings", "in", "the", "region", "with", "name", "``", "Abruzzo", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Abruzzo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT T1.Number_of_Stories FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID WHERE T2.Name  =  \"Abruzzo\"", "query_toks": ["SELECT", "T1.Number_of_Stories", "FROM", "building", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.Region_ID", "=", "T2.Region_ID", "WHERE", "T2.Name", "=", "``", "Abruzzo", "''"], "query_toks_no_value": ["select", "t1", ".", "number_of_stories", "from", "building", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "where", "t2", ".", "name", "=", "value"], "question": "Return the number of stories for each building in the region named \"Abruzzo\".", "question_toks": ["Return", "the", "number", "of", "stories", "for", "each", "building", "in", "the", "region", "named", "``", "Abruzzo", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Abruzzo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Completed_Year ,  COUNT(*) FROM building GROUP BY Completed_Year", "query_toks": ["SELECT", "Completed_Year", ",", "COUNT", "(", "*", ")", "FROM", "building", "GROUP", "BY", "Completed_Year"], "query_toks_no_value": ["select", "completed_year", ",", "count", "(", "*", ")", "from", "building", "group", "by", "completed_year"], "question": "Please show each completion year and the number of buildings completed in that year.", "question_toks": ["Please", "show", "each", "completion", "year", "and", "the", "number", "of", "buildings", "completed", "in", "that", "year", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Completed_Year ,  COUNT(*) FROM building GROUP BY Completed_Year", "query_toks": ["SELECT", "Completed_Year", ",", "COUNT", "(", "*", ")", "FROM", "building", "GROUP", "BY", "Completed_Year"], "query_toks_no_value": ["select", "completed_year", ",", "count", "(", "*", ")", "from", "building", "group", "by", "completed_year"], "question": "For completion year, return the year and the number of buildings completed.", "question_toks": ["For", "completion", "year", ",", "return", "the", "year", "and", "the", "number", "of", "buildings", "completed", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Completed_Year", "FROM", "building", "GROUP", "BY", "Completed_Year", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "completed_year", "from", "building", "group", "by", "completed_year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "List the year in which the most buildings are completed.", "question_toks": ["List", "the", "year", "in", "which", "the", "most", "buildings", "are", "completed", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Completed_Year", "FROM", "building", "GROUP", "BY", "Completed_Year", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "completed_year", "from", "building", "group", "by", "completed_year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "In which year did the most building constructions complete?", "question_toks": ["In", "which", "year", "did", "the", "most", "building", "constructions", "complete", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)", "query_toks": ["SELECT", "Name", "FROM", "region", "WHERE", "Region_ID", "NOT", "IN", "(", "SELECT", "Region_ID", "FROM", "building", ")"], "query_toks_no_value": ["select", "name", "from", "region", "where", "region_id", "not", "in", "(", "select", "region_id", "from", "building", ")"], "question": "List the names of regions that do not have any buildings.", "question_toks": ["List", "the", "names", "of", "regions", "that", "do", "not", "have", "any", "buildings", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)", "query_toks": ["SELECT", "Name", "FROM", "region", "WHERE", "Region_ID", "NOT", "IN", "(", "SELECT", "Region_ID", "FROM", "building", ")"], "query_toks_no_value": ["select", "name", "from", "region", "where", "region_id", "not", "in", "(", "select", "region_id", "from", "building", ")"], "question": "What are the names of regions in which there are no buildings?", "question_toks": ["What", "are", "the", "names", "of", "regions", "in", "which", "there", "are", "no", "buildings", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Completed_Year FROM building WHERE Number_of_Stories  >  20 INTERSECT SELECT Completed_Year FROM building WHERE Number_of_Stories  <  15", "query_toks": ["SELECT", "Completed_Year", "FROM", "building", "WHERE", "Number_of_Stories", ">", "20", "INTERSECT", "SELECT", "Completed_Year", "FROM", "building", "WHERE", "Number_of_Stories", "<", "15"], "query_toks_no_value": ["select", "completed_year", "from", "building", "where", "number_of_stories", ">", "value", "intersect", "select", "completed_year", "from", "building", "where", "number_of_stories", "<", "value"], "question": "Show the completed years shared by buildings with more than 20 stories and buildings with less than 15 stories.", "question_toks": ["Show", "the", "completed", "years", "shared", "by", "buildings", "with", "more", "than", "20", "stories", "and", "buildings", "with", "less", "than", "15", "stories", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], 15.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Completed_Year FROM building WHERE Number_of_Stories  >  20 INTERSECT SELECT Completed_Year FROM building WHERE Number_of_Stories  <  15", "query_toks": ["SELECT", "Completed_Year", "FROM", "building", "WHERE", "Number_of_Stories", ">", "20", "INTERSECT", "SELECT", "Completed_Year", "FROM", "building", "WHERE", "Number_of_Stories", "<", "15"], "query_toks_no_value": ["select", "completed_year", "from", "building", "where", "number_of_stories", ">", "value", "intersect", "select", "completed_year", "from", "building", "where", "number_of_stories", "<", "value"], "question": "In which years did both buildings with more than 20 stories and buildings with less than 15 stories were completed?", "question_toks": ["In", "which", "years", "did", "both", "buildings", "with", "more", "than", "20", "stories", "and", "buildings", "with", "less", "than", "15", "stories", "were", "completed", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], 15.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT DISTINCT Address FROM building", "query_toks": ["SELECT", "DISTINCT", "Address", "FROM", "building"], "query_toks_no_value": ["select", "distinct", "address", "from", "building"], "question": "Show the distinct addresses of buildings.", "question_toks": ["Show", "the", "distinct", "addresses", "of", "buildings", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT DISTINCT Address FROM building", "query_toks": ["SELECT", "DISTINCT", "Address", "FROM", "building"], "query_toks_no_value": ["select", "distinct", "address", "from", "building"], "question": "Give me a list of distinct building addresses.", "question_toks": ["Give", "me", "a", "list", "of", "distinct", "building", "addresses", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Completed_Year FROM building ORDER BY Number_of_Stories DESC", "query_toks": ["SELECT", "Completed_Year", "FROM", "building", "ORDER", "BY", "Number_of_Stories", "DESC"], "query_toks_no_value": ["select", "completed_year", "from", "building", "order", "by", "number_of_stories", "desc"], "question": "Show the completed years of buildings in descending order of the number of stories.", "question_toks": ["Show", "the", "completed", "years", "of", "buildings", "in", "descending", "order", "of", "the", "number", "of", "stories", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "region_building", "query": "SELECT Completed_Year FROM building ORDER BY Number_of_Stories DESC", "query_toks": ["SELECT", "Completed_Year", "FROM", "building", "ORDER", "BY", "Number_of_Stories", "DESC"], "query_toks_no_value": ["select", "completed_year", "from", "building", "order", "by", "number_of_stories", "desc"], "question": "Sort buildings in descending order of the number of stories, and return their completion years.", "question_toks": ["Sort", "buildings", "in", "descending", "order", "of", "the", "number", "of", "stories", ",", "and", "return", "their", "completion", "years", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "building", "schema": ["Building_ID:number", "Region_ID:number", "Name:text", "Address:text", "Number_of_Stories:number", "Completed_Year:number"]}, {"name": "region", "schema": ["Region_ID:number", "Name:text", "Capital:text", "Area:number", "Population:number"]}]}
{"db_id": "government_shift", "query": "select channel_details from channels order by channel_details", "query_toks": ["select", "channel_details", "from", "channels", "order", "by", "channel_details"], "query_toks_no_value": ["select", "channel_details", "from", "channels", "order", "by", "channel_details"], "question": "List details of all the channel in alphabetical order .", "question_toks": ["List", "details", "of", "all", "the", "channel", "in", "alphabetical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "select channel_details from channels order by channel_details", "query_toks": ["select", "channel_details", "from", "channels", "order", "by", "channel_details"], "query_toks_no_value": ["select", "channel_details", "from", "channels", "order", "by", "channel_details"], "question": "What is the list of channel details ordered alphabetically ?", "question_toks": ["What", "is", "the", "list", "of", "channel", "details", "ordered", "alphabetically", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT count(*) FROM services", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "services"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "services"], "question": "How many services are there?", "question_toks": ["How", "many", "services", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT count(*) FROM services", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "services"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "services"], "question": "Count the number of services.", "question_toks": ["Count", "the", "number", "of", "services", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT analytical_layer_type_code FROM analytical_layer GROUP BY analytical_layer_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "analytical_layer_type_code", "FROM", "analytical_layer", "GROUP", "BY", "analytical_layer_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "analytical_layer_type_code", "from", "analytical_layer", "group", "by", "analytical_layer_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most common analytical layer type code?", "question_toks": ["What", "is", "the", "most", "common", "analytical", "layer", "type", "code", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT analytical_layer_type_code FROM analytical_layer GROUP BY analytical_layer_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "analytical_layer_type_code", "FROM", "analytical_layer", "GROUP", "BY", "analytical_layer_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "analytical_layer_type_code", "from", "analytical_layer", "group", "by", "analytical_layer_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the analytical layer type code that appears most often.", "question_toks": ["Find", "the", "analytical", "layer", "type", "code", "that", "appears", "most", "often", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t1.customer_details  =  \"Hardy Kutch\"", "query_toks": ["SELECT", "t3.service_details", "FROM", "customers", "AS", "t1", "JOIN", "customers_and_services", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "services", "AS", "t3", "ON", "t2.service_id", "=", "t3.service_id", "WHERE", "t1.customer_details", "=", "``", "Hardy", "Kutch", "''"], "query_toks_no_value": ["select", "t3", ".", "service_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "services", "as", "t3", "on", "t2", ".", "service_id", "=", "t3", ".", "service_id", "where", "t1", ".", "customer_details", "=", "value"], "question": "Find all the services that has been used by the customer with details \"Hardy Kutch\".", "question_toks": ["Find", "all", "the", "services", "that", "has", "been", "used", "by", "the", "customer", "with", "details", "``", "Hardy", "Kutch", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Hardy Kutch\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t1.customer_details  =  \"Hardy Kutch\"", "query_toks": ["SELECT", "t3.service_details", "FROM", "customers", "AS", "t1", "JOIN", "customers_and_services", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "services", "AS", "t3", "ON", "t2.service_id", "=", "t3.service_id", "WHERE", "t1.customer_details", "=", "``", "Hardy", "Kutch", "''"], "query_toks_no_value": ["select", "t3", ".", "service_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "services", "as", "t3", "on", "t2", ".", "service_id", "=", "t3", ".", "service_id", "where", "t1", ".", "customer_details", "=", "value"], "question": "Which services were used by the customer with details \"Hardy Kutch\"? Give me the service details.", "question_toks": ["Which", "services", "were", "used", "by", "the", "customer", "with", "details", "``", "Hardy", "Kutch", "''", "?", "Give", "me", "the", "service", "details", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Hardy Kutch\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "select t1.service_details from services as t1 join customers_and_services as t2 on t1.service_id  =  t2.service_id group by t1.service_details having count(*)  >  3", "query_toks": ["select", "t1.service_details", "from", "services", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1.service_id", "=", "t2.service_id", "group", "by", "t1.service_details", "having", "count", "(", "*", ")", ">", "3"], "query_toks_no_value": ["select", "t1", ".", "service_details", "from", "services", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "service_id", "=", "t2", ".", "service_id", "group", "by", "t1", ".", "service_details", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the details of the services that have been used by more than 3 times .", "question_toks": ["Find", "the", "details", "of", "the", "services", "that", "have", "been", "used", "by", "more", "than", "3", "times", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT t1.service_details FROM services AS t1 JOIN customers_and_services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_details HAVING count(*)  >  3", "query_toks": ["SELECT", "t1.service_details", "FROM", "services", "AS", "t1", "JOIN", "customers_and_services", "AS", "t2", "ON", "t1.service_id", "=", "t2.service_id", "GROUP", "BY", "t1.service_details", "HAVING", "count", "(", "*", ")", ">", "3"], "query_toks_no_value": ["select", "t1", ".", "service_details", "from", "services", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "service_id", "=", "t2", ".", "service_id", "group", "by", "t1", ".", "service_details", "having", "count", "(", "*", ")", ">", "value"], "question": "Which services were used by customers by more than 3 times? Give me the service details.", "question_toks": ["Which", "services", "were", "used", "by", "customers", "by", "more", "than", "3", "times", "?", "Give", "me", "the", "service", "details", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT t1.customer_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_details ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.customer_details", "FROM", "customers", "AS", "t1", "JOIN", "customers_and_services", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "GROUP", "BY", "t1.customer_details", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the details of the customer who has used services the most times.", "question_toks": ["Find", "the", "details", "of", "the", "customer", "who", "has", "used", "services", "the", "most", "times", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1", "query_toks": ["select", "t1.customer_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1.customer_id", "=", "t2.customer_id", "group", "by", "t1.customer_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "1"], "query_toks_no_value": ["select", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "return the details of the customer with largest count of used services.", "question_toks": ["return", "the", "details", "of", "the", "customer", "with", "largest", "count", "of", "used", "services."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1", "query_toks": ["select", "t1.customer_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1.customer_id", "=", "t2.customer_id", "group", "by", "t1.customer_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "1"], "query_toks_no_value": ["select", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name of the customer who has used the most types of services .", "question_toks": ["Find", "the", "name", "of", "the", "customer", "who", "has", "used", "the", "most", "types", "of", "services", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1", "query_toks": ["select", "t1.customer_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1.customer_id", "=", "t2.customer_id", "group", "by", "t1.customer_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "1"], "query_toks_no_value": ["select", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which customer has used the most types of services ? Give me the customer details .", "question_toks": ["Which", "customer", "has", "used", "the", "most", "types", "of", "services", "?", "Give", "me", "the", "customer", "details", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "select customer_details from customers where customer_id not in (select customer_id from customers_and_services)", "query_toks": ["select", "customer_details", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "customers_and_services", ")"], "query_toks_no_value": ["select", "customer_details", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "customers_and_services", ")"], "question": "Find the details of the customer who has never used any services .", "question_toks": ["Find", "the", "details", "of", "the", "customer", "who", "has", "never", "used", "any", "services", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "select customer_details from customers where customer_id not in (select customer_id from customers_and_services)", "query_toks": ["select", "customer_details", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "customers_and_services", ")"], "query_toks_no_value": ["select", "customer_details", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "customers_and_services", ")"], "question": "Which customers never used any services ? Give me the customer details .", "question_toks": ["Which", "customers", "never", "used", "any", "services", "?", "Give", "me", "the", "customer", "details", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "select distinct t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id where t2.service_id  =  (select service_id from services group by service_id order by count(*) asc limit 1)", "query_toks": ["select", "distinct", "t1.customer_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1.customer_id", "=", "t2.customer_id", "where", "t2.service_id", "=", "(", "select", "service_id", "from", "services", "group", "by", "service_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ")"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "service_id", "=", "(", "select", "service_id", "from", "services", "group", "by", "service_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value", ")"], "question": "Find the details of the customers who have used the least-used service .", "question_toks": ["Find", "the", "details", "of", "the", "customers", "who", "have", "used", "the", "least-used", "service", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "select distinct t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id where t2.service_id  =  (select service_id from services group by service_id order by count(*) asc limit 1)", "query_toks": ["select", "distinct", "t1.customer_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1.customer_id", "=", "t2.customer_id", "where", "t2.service_id", "=", "(", "select", "service_id", "from", "services", "group", "by", "service_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ")"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "service_id", "=", "(", "select", "service_id", "from", "services", "group", "by", "service_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value", ")"], "question": "Which customers used the least commonly-used service ? Give me the distinct customer details .", "question_toks": ["Which", "customers", "used", "the", "least", "commonly-used", "service", "?", "Give", "me", "the", "distinct", "customer", "details", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT count(DISTINCT customers_and_services_details) FROM customers_and_services", "query_toks": ["SELECT", "count", "(", "DISTINCT", "customers_and_services_details", ")", "FROM", "customers_and_services"], "query_toks_no_value": ["select", "count", "(", "distinct", "customers_and_services_details", ")", "from", "customers_and_services"], "question": "How many distinct customer and services details are there?", "question_toks": ["How", "many", "distinct", "customer", "and", "services", "details", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT count(DISTINCT customers_and_services_details) FROM customers_and_services", "query_toks": ["SELECT", "count", "(", "DISTINCT", "customers_and_services_details", ")", "FROM", "customers_and_services"], "query_toks_no_value": ["select", "count", "(", "distinct", "customers_and_services_details", ")", "from", "customers_and_services"], "question": "Count the total number of available customers and services details.", "question_toks": ["Count", "the", "total", "number", "of", "available", "customers", "and", "services", "details", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Kutch%\"", "query_toks": ["SELECT", "customer_details", "FROM", "customers", "WHERE", "customer_details", "LIKE", "``", "%", "Kutch", "%", "''"], "query_toks_no_value": ["select", "customer_details", "from", "customers", "where", "customer_details", "like", "value"], "question": "Find all the customers whose name contains \"Kutch\".", "question_toks": ["Find", "all", "the", "customers", "whose", "name", "contains", "``", "Kutch", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 4, false], null], "\"%Kutch%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Kutch%\"", "query_toks": ["SELECT", "customer_details", "FROM", "customers", "WHERE", "customer_details", "LIKE", "``", "%", "Kutch", "%", "''"], "query_toks_no_value": ["select", "customer_details", "from", "customers", "where", "customer_details", "like", "value"], "question": "What are the details of the customers who have \"Kutch\" in part of their details?", "question_toks": ["What", "are", "the", "details", "of", "the", "customers", "who", "have", "``", "Kutch", "''", "in", "part", "of", "their", "details", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 4, false], null], "\"%Kutch%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" OR t4.services_and_channels_details  =  \"good\"", "query_toks": ["SELECT", "DISTINCT", "t3.service_details", "FROM", "customers", "AS", "t1", "JOIN", "customers_and_services", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "services", "AS", "t3", "ON", "t2.service_id", "=", "t3.service_id", "JOIN", "customer_interactions", "AS", "t4", "ON", "t3.service_id", "=", "t4.service_id", "WHERE", "t1.customer_details", "=", "``", "Hardy", "Kutch", "''", "OR", "t4.services_and_channels_details", "=", "``", "good", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "service_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "services", "as", "t3", "on", "t2", ".", "service_id", "=", "t3", ".", "service_id", "join", "customer_interactions", "as", "t4", "on", "t3", ".", "service_id", "=", "t4", ".", "service_id", "where", "t1", ".", "customer_details", "=", "value", "or", "t4", ".", "services_and_channels_details", "=", "value"], "question": "Find the name of all the services which either have been used by customer \"Hardy Kutch\" or have been rated as \"good\" in one of the customer interactions.", "question_toks": ["Find", "the", "name", "of", "all", "the", "services", "which", "either", "have", "been", "used", "by", "customer", "``", "Hardy", "Kutch", "''", "or", "have", "been", "rated", "as", "``", "good", "''", "in", "one", "of", "the", "customer", "interactions", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Hardy Kutch\"", null], "or", [false, 2, [0, [0, 16, false], null], "\"good\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" OR t4.services_and_channels_details  =  \"good\"", "query_toks": ["SELECT", "DISTINCT", "t3.service_details", "FROM", "customers", "AS", "t1", "JOIN", "customers_and_services", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "services", "AS", "t3", "ON", "t2.service_id", "=", "t3.service_id", "JOIN", "customer_interactions", "AS", "t4", "ON", "t3.service_id", "=", "t4.service_id", "WHERE", "t1.customer_details", "=", "``", "Hardy", "Kutch", "''", "OR", "t4.services_and_channels_details", "=", "``", "good", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "service_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "services", "as", "t3", "on", "t2", ".", "service_id", "=", "t3", ".", "service_id", "join", "customer_interactions", "as", "t4", "on", "t3", ".", "service_id", "=", "t4", ".", "service_id", "where", "t1", ".", "customer_details", "=", "value", "or", "t4", ".", "services_and_channels_details", "=", "value"], "question": "Which services are used by the customer \"Hardy Kutch\" or are rated as \"good\" in a customer interaction? Give me the service details.", "question_toks": ["Which", "services", "are", "used", "by", "the", "customer", "``", "Hardy", "Kutch", "''", "or", "are", "rated", "as", "``", "good", "''", "in", "a", "customer", "interaction", "?", "Give", "me", "the", "service", "details", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Hardy Kutch\"", null], "or", [false, 2, [0, [0, 16, false], null], "\"good\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" AND t4.services_and_channels_details  =  \"bad\"", "query_toks": ["SELECT", "DISTINCT", "t3.service_details", "FROM", "customers", "AS", "t1", "JOIN", "customers_and_services", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "services", "AS", "t3", "ON", "t2.service_id", "=", "t3.service_id", "JOIN", "customer_interactions", "AS", "t4", "ON", "t3.service_id", "=", "t4.service_id", "WHERE", "t1.customer_details", "=", "``", "Hardy", "Kutch", "''", "AND", "t4.services_and_channels_details", "=", "``", "bad", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "service_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "services", "as", "t3", "on", "t2", ".", "service_id", "=", "t3", ".", "service_id", "join", "customer_interactions", "as", "t4", "on", "t3", ".", "service_id", "=", "t4", ".", "service_id", "where", "t1", ".", "customer_details", "=", "value", "and", "t4", ".", "services_and_channels_details", "=", "value"], "question": "Find the names of all the services which both have been used by customer \"Hardy Kutch\" and have been rated \"bad\" in one of the customer interactions.", "question_toks": ["Find", "the", "names", "of", "all", "the", "services", "which", "both", "have", "been", "used", "by", "customer", "``", "Hardy", "Kutch", "''", "and", "have", "been", "rated", "``", "bad", "''", "in", "one", "of", "the", "customer", "interactions", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Hardy Kutch\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"bad\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" AND t4.services_and_channels_details  =  \"bad\"", "query_toks": ["SELECT", "DISTINCT", "t3.service_details", "FROM", "customers", "AS", "t1", "JOIN", "customers_and_services", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "services", "AS", "t3", "ON", "t2.service_id", "=", "t3.service_id", "JOIN", "customer_interactions", "AS", "t4", "ON", "t3.service_id", "=", "t4.service_id", "WHERE", "t1.customer_details", "=", "``", "Hardy", "Kutch", "''", "AND", "t4.services_and_channels_details", "=", "``", "bad", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "service_details", "from", "customers", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "services", "as", "t3", "on", "t2", ".", "service_id", "=", "t3", ".", "service_id", "join", "customer_interactions", "as", "t4", "on", "t3", ".", "service_id", "=", "t4", ".", "service_id", "where", "t1", ".", "customer_details", "=", "value", "and", "t4", ".", "services_and_channels_details", "=", "value"], "question": "Which services are both used by the customer \"Hardy Kutch\" and are rated as \"bad\" in a customer interaction? Give me the service details.", "question_toks": ["Which", "services", "are", "both", "used", "by", "the", "customer", "``", "Hardy", "Kutch", "''", "and", "are", "rated", "as", "``", "bad", "''", "in", "a", "customer", "interaction", "?", "Give", "me", "the", "service", "details", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Hardy Kutch\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"bad\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "select distinct t1.service_details from services as t1 join customer_interactions as t2 on t1.service_id  =  t2.service_id join channels as t3 on t2.channel_id  =  t3.channel_id where t3.channel_details  =  \"15 ij\"", "query_toks": ["select", "distinct", "t1.service_details", "from", "services", "as", "t1", "join", "customer_interactions", "as", "t2", "on", "t1.service_id", "=", "t2.service_id", "join", "channels", "as", "t3", "on", "t2.channel_id", "=", "t3.channel_id", "where", "t3.channel_details", "=", "\"15 ij\""], "query_toks_no_value": ["select", "distinct", "t1", ".", "service_details", "from", "services", "as", "t1", "join", "customer_interactions", "as", "t2", "on", "t1", ".", "service_id", "=", "t2", ".", "service_id", "join", "channels", "as", "t3", "on", "t2", ".", "channel_id", "=", "t3", ".", "channel_id", "where", "t3", ".", "channel_details", "=", "value"], "question": "Find details of all the services that have interacted with `` 15 ij '' for the the channel details.", "question_toks": ["Find", "details", "of", "all", "the", "services", "that", "have", "interacted", "with", "``", "15", "ij", "''", "for", "the", "the", "channel", "details."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"15 ij\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT DISTINCT t1.service_details FROM services AS t1 JOIN customer_interactions AS t2 ON t1.service_id  =  t2.service_id JOIN channels AS t3 ON t2.channel_id  =  t3.channel_id WHERE t3.channel_details  =  \"15 ij\"", "query_toks": ["SELECT", "DISTINCT", "t1.service_details", "FROM", "services", "AS", "t1", "JOIN", "customer_interactions", "AS", "t2", "ON", "t1.service_id", "=", "t2.service_id", "JOIN", "channels", "AS", "t3", "ON", "t2.channel_id", "=", "t3.channel_id", "WHERE", "t3.channel_details", "=", "``", "15", "ij", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "service_details", "from", "services", "as", "t1", "join", "customer_interactions", "as", "t2", "on", "t1", ".", "service_id", "=", "t2", ".", "service_id", "join", "channels", "as", "t3", "on", "t2", ".", "channel_id", "=", "t3", ".", "channel_id", "where", "t3", ".", "channel_details", "=", "value"], "question": "Give me the details of all the services that have interacted with the channel with detail \"15 ij\".", "question_toks": ["Give", "me", "the", "details", "of", "all", "the", "services", "that", "have", "interacted", "with", "the", "channel", "with", "detail", "``", "15", "ij", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"15 ij\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "select t1.customer_details from customers as t1 join customer_interactions as t2 on t1.customer_id  =  t2.customer_id where t2.status_code  =  \"stuck\" and services_and_channels_details  =  \"bad\"", "query_toks": ["select", "t1.customer_details", "from", "customers", "as", "t1", "join", "customer_interactions", "as", "t2", "on", "t1.customer_id", "=", "t2.customer_id", "where", "t2.status_code", "=", "\"stuck\"", "and", "services_and_channels_details", "=", "\"bad\""], "query_toks_no_value": ["select", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "customer_interactions", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "status_code", "=", "value", "and", "services_and_channels_details", "=", "value"], "question": "Find all the details of the customers who have been involved in an interaction with status `` Stuck '' and service and channel detail `` bad '' .", "question_toks": ["Find", "all", "the", "details", "of", "the", "customers", "who", "have", "been", "involved", "in", "an", "interaction", "with", "status", "``", "Stuck", "''", "and", "service", "and", "channel", "detail", "``", "bad", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"stuck\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"bad\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT t1.customer_details FROM customers AS t1 JOIN customer_interactions AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.status_code  =  \"Stuck\" AND services_and_channels_details  =  \"bad\"", "query_toks": ["SELECT", "t1.customer_details", "FROM", "customers", "AS", "t1", "JOIN", "customer_interactions", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t2.status_code", "=", "``", "Stuck", "''", "AND", "services_and_channels_details", "=", "``", "bad", "''"], "query_toks_no_value": ["select", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "customer_interactions", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "status_code", "=", "value", "and", "services_and_channels_details", "=", "value"], "question": "Which customers have experienced status \"Stuck\" and service and channel detail \"bad\" in  an interaction? Give me the customer details.", "question_toks": ["Which", "customers", "have", "experienced", "status", "``", "Stuck", "''", "and", "service", "and", "channel", "detail", "``", "bad", "''", "in", "an", "interaction", "?", "Give", "me", "the", "customer", "details", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Stuck\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"bad\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT count(*) FROM integration_platform WHERE integration_platform_details  =  \"Success\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "integration_platform", "WHERE", "integration_platform_details", "=", "``", "Success", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "integration_platform", "where", "integration_platform_details", "=", "value"], "question": "How many integration platforms are successful?", "question_toks": ["How", "many", "integration", "platforms", "are", "successful", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Success\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT count(*) FROM integration_platform WHERE integration_platform_details  =  \"Success\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "integration_platform", "WHERE", "integration_platform_details", "=", "``", "Success", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "integration_platform", "where", "integration_platform_details", "=", "value"], "question": "Count the number of integration platforms that have \"Success\" in the details.", "question_toks": ["Count", "the", "number", "of", "integration", "platforms", "that", "have", "``", "Success", "''", "in", "the", "details", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Success\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "select distinct t1.customer_details from customers as t1 join customer_interactions as t2 on t1.customer_id  =  t2.customer_id join integration_platform as t3 where t3.integration_platform_details  =  \"fail\"", "query_toks": ["select", "distinct", "t1.customer_details", "from", "customers", "as", "t1", "join", "customer_interactions", "as", "t2", "on", "t1.customer_id", "=", "t2.customer_id", "join", "integration_platform", "as", "t3", "where", "t3.integration_platform_details", "=", "\"fail\""], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "customer_interactions", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "integration_platform", "as", "t3", "where", "t3", ".", "integration_platform_details", "=", "value"], "question": "List the details of all the customers who are associated with a failed integration platform .", "question_toks": ["List", "the", "details", "of", "all", "the", "customers", "who", "are", "associated", "with", "a", "failed", "integration", "platform", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 13, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"fail\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT DISTINCT t1.customer_details FROM customers AS t1 JOIN customer_interactions AS t2 ON t1.customer_id  =  t2.customer_id JOIN integration_platform AS t3 WHERE t3.integration_platform_details  =  \"Fail\"", "query_toks": ["SELECT", "DISTINCT", "t1.customer_details", "FROM", "customers", "AS", "t1", "JOIN", "customer_interactions", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "integration_platform", "AS", "t3", "WHERE", "t3.integration_platform_details", "=", "``", "Fail", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "customer_interactions", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "integration_platform", "as", "t3", "where", "t3", ".", "integration_platform_details", "=", "value"], "question": "Which customers have integration platform details \"Fail\" in interactions? Give me the customer details.", "question_toks": ["Which", "customers", "have", "integration", "platform", "details", "``", "Fail", "''", "in", "interactions", "?", "Give", "me", "the", "customer", "details", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 13, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Fail\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "select service_details from services except select t2.service_details from customers_and_services as t1 join services as t2 on t1.service_id  =  t2.service_id", "query_toks": ["select", "service_details", "from", "services", "except", "select", "t2.service_details", "from", "customers_and_services", "as", "t1", "join", "services", "as", "t2", "on", "t1.service_id", "=", "t2.service_id"], "query_toks_no_value": ["select", "service_details", "from", "services", "except", "select", "t2", ".", "service_details", "from", "customers_and_services", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "service_id", "=", "t2", ".", "service_id"], "question": "Which service ( s ) has never been used by any customer ? List their details .", "question_toks": ["Which", "service", "(", "s", ")", "has", "never", "been", "used", "by", "any", "customer", "?", "List", "their", "details", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "select service_details from services except select t2.service_details from customers_and_services as t1 join services as t2 on t1.service_id  =  t2.service_id", "query_toks": ["select", "service_details", "from", "services", "except", "select", "t2.service_details", "from", "customers_and_services", "as", "t1", "join", "services", "as", "t2", "on", "t1.service_id", "=", "t2.service_id"], "query_toks_no_value": ["select", "service_details", "from", "services", "except", "select", "t2", ".", "service_details", "from", "customers_and_services", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "service_id", "=", "t2", ".", "service_id"], "question": "Find details of the services that no customer has ever used . Return the service details .", "question_toks": ["Find", "details", "of", "the", "services", "that", "no", "customer", "has", "ever", "used", ".", "Return", "the", "service", "details", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT analytical_layer_type_code ,  count(*) FROM analytical_layer GROUP BY analytical_layer_type_code", "query_toks": ["SELECT", "analytical_layer_type_code", ",", "count", "(", "*", ")", "FROM", "analytical_layer", "GROUP", "BY", "analytical_layer_type_code"], "query_toks_no_value": ["select", "analytical_layer_type_code", ",", "count", "(", "*", ")", "from", "analytical_layer", "group", "by", "analytical_layer_type_code"], "question": "Find all the layer type codes with their corresponding usage count.", "question_toks": ["Find", "all", "the", "layer", "type", "codes", "with", "their", "corresponding", "usage", "count", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT analytical_layer_type_code ,  count(*) FROM analytical_layer GROUP BY analytical_layer_type_code", "query_toks": ["SELECT", "analytical_layer_type_code", ",", "count", "(", "*", ")", "FROM", "analytical_layer", "GROUP", "BY", "analytical_layer_type_code"], "query_toks_no_value": ["select", "analytical_layer_type_code", ",", "count", "(", "*", ")", "from", "analytical_layer", "group", "by", "analytical_layer_type_code"], "question": "For each analytical layer, return the analytical layer type code and the number of times it was used.", "question_toks": ["For", "each", "analytical", "layer", ",", "return", "the", "analytical", "layer", "type", "code", "and", "the", "number", "of", "times", "it", "was", "used", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "select distinct t1.service_details from services as t1 join customers_and_services as t2 on t1.service_id  =  t2.service_id where t2.customers_and_services_details  =  \"unsatisfied\"", "query_toks": ["select", "distinct", "t1.service_details", "from", "services", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1.service_id", "=", "t2.service_id", "where", "t2.customers_and_services_details", "=", "\"unsatisfied\""], "query_toks_no_value": ["select", "distinct", "t1", ".", "service_details", "from", "services", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "service_id", "=", "t2", ".", "service_id", "where", "t2", ".", "customers_and_services_details", "=", "value"], "question": "Find details of all the services that have been marked as `` unsatisfied '' in customers and services details .", "question_toks": ["Find", "details", "of", "all", "the", "services", "that", "have", "been", "marked", "as", "``", "unsatisfied", "''", "in", "customers", "and", "services", "details", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"unsatisfied\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "government_shift", "query": "SELECT DISTINCT t1.service_details FROM services AS t1 JOIN customers_and_services AS t2 ON t1.service_id  =  t2.service_id WHERE t2.customers_and_services_details  =  \"Unsatisfied\"", "query_toks": ["SELECT", "DISTINCT", "t1.service_details", "FROM", "services", "AS", "t1", "JOIN", "customers_and_services", "AS", "t2", "ON", "t1.service_id", "=", "t2.service_id", "WHERE", "t2.customers_and_services_details", "=", "``", "Unsatisfied", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "service_details", "from", "services", "as", "t1", "join", "customers_and_services", "as", "t2", "on", "t1", ".", "service_id", "=", "t2", ".", "service_id", "where", "t2", ".", "customers_and_services_details", "=", "value"], "question": "Which services have been rated as \"unsatisfied\" in customers and services details? Give me the service_details.", "question_toks": ["Which", "services", "have", "been", "rated", "as", "``", "unsatisfied", "''", "in", "customers", "and", "services", "details", "?", "Give", "me", "the", "service_details", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Unsatisfied\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Services", "schema": ["Service_ID:number", "Service_Details:text"]}, {"name": "Customers", "schema": ["Customer_ID:number", "Customer_Details:text"]}, {"name": "Channels", "schema": ["Channel_ID:number", "Channel_Details:text"]}, {"name": "Customers_and_Services", "schema": ["Customers_and_Services_ID:number", "Customer_ID:number", "Service_ID:number", "Customers_and_Services_Details:text"]}, {"name": "Customer_Interactions", "schema": ["Customer_Interaction_ID:number", "Channel_ID:number", "Customer_ID:number", "Service_ID:number", "Status_Code:text", "Services_and_Channels_Details:text"]}, {"name": "Integration_Platform", "schema": ["Integration_Platform_ID:number", "Customer_Interaction_ID:number", "Integration_Platform_Details:text"]}, {"name": "Analytical_Layer", "schema": ["Analytical_ID:number", "Customers_and_Services_ID:text", "Pattern_Recognition:text", "Analytical_Layer_Type_Code:text"]}]}
{"db_id": "vehicle_rent", "query": "SELECT count(*) FROM vehicles", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "vehicles"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "vehicles"], "question": "How many vehicles do we have?", "question_toks": ["How", "many", "vehicles", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT count(*) FROM vehicles", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "vehicles"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "vehicles"], "question": "Count the number of vehicles.", "question_toks": ["Count", "the", "number", "of", "vehicles", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT name FROM vehicles ORDER BY model_year DESC", "query_toks": ["SELECT", "name", "FROM", "vehicles", "ORDER", "BY", "model_year", "DESC"], "query_toks_no_value": ["select", "name", "from", "vehicles", "order", "by", "model_year", "desc"], "question": "Show names for all vehicles in descending order of model year.", "question_toks": ["Show", "names", "for", "all", "vehicles", "in", "descending", "order", "of", "model", "year", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT name FROM vehicles ORDER BY model_year DESC", "query_toks": ["SELECT", "name", "FROM", "vehicles", "ORDER", "BY", "model_year", "DESC"], "query_toks_no_value": ["select", "name", "from", "vehicles", "order", "by", "model_year", "desc"], "question": "What are the names of all vehicles, ordered by model year descending?", "question_toks": ["What", "are", "the", "names", "of", "all", "vehicles", ",", "ordered", "by", "model", "year", "descending", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT DISTINCT type_of_powertrain FROM vehicles", "query_toks": ["SELECT", "DISTINCT", "type_of_powertrain", "FROM", "vehicles"], "query_toks_no_value": ["select", "distinct", "type_of_powertrain", "from", "vehicles"], "question": "List all distinct types of powertrain of vehicles.", "question_toks": ["List", "all", "distinct", "types", "of", "powertrain", "of", "vehicles", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT DISTINCT type_of_powertrain FROM vehicles", "query_toks": ["SELECT", "DISTINCT", "type_of_powertrain", "FROM", "vehicles"], "query_toks_no_value": ["select", "distinct", "type_of_powertrain", "from", "vehicles"], "question": "What are the different types of powertrains?", "question_toks": ["What", "are", "the", "different", "types", "of", "powertrains", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT name ,  type_of_powertrain ,  annual_fuel_cost FROM vehicles WHERE model_year  =  2013 OR model_year  =  2014", "query_toks": ["SELECT", "name", ",", "type_of_powertrain", ",", "annual_fuel_cost", "FROM", "vehicles", "WHERE", "model_year", "=", "2013", "OR", "model_year", "=", "2014"], "query_toks_no_value": ["select", "name", ",", "type_of_powertrain", ",", "annual_fuel_cost", "from", "vehicles", "where", "model_year", "=", "value", "or", "model_year", "=", "value"], "question": "Show name, type of powertrain, and annual fuel cost for all vehicles with model year 2013 or 2014.", "question_toks": ["Show", "name", ",", "type", "of", "powertrain", ",", "and", "annual", "fuel", "cost", "for", "all", "vehicles", "with", "model", "year", "2013", "or", "2014", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 2013.0, null], "or", [false, 2, [0, [0, 10, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT name ,  type_of_powertrain ,  annual_fuel_cost FROM vehicles WHERE model_year  =  2013 OR model_year  =  2014", "query_toks": ["SELECT", "name", ",", "type_of_powertrain", ",", "annual_fuel_cost", "FROM", "vehicles", "WHERE", "model_year", "=", "2013", "OR", "model_year", "=", "2014"], "query_toks_no_value": ["select", "name", ",", "type_of_powertrain", ",", "annual_fuel_cost", "from", "vehicles", "where", "model_year", "=", "value", "or", "model_year", "=", "value"], "question": "What are the names, types of powertrains, and yearly fuel costs for vehicles with model years in either 2013 2014?", "question_toks": ["What", "are", "the", "names", ",", "types", "of", "powertrains", ",", "and", "yearly", "fuel", "costs", "for", "vehicles", "with", "model", "years", "in", "either", "2013", "2014", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 2013.0, null], "or", [false, 2, [0, [0, 10, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2014 INTERSECT SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2013", "query_toks": ["SELECT", "type_of_powertrain", "FROM", "vehicles", "WHERE", "model_year", "=", "2014", "INTERSECT", "SELECT", "type_of_powertrain", "FROM", "vehicles", "WHERE", "model_year", "=", "2013"], "query_toks_no_value": ["select", "type_of_powertrain", "from", "vehicles", "where", "model_year", "=", "value", "intersect", "select", "type_of_powertrain", "from", "vehicles", "where", "model_year", "=", "value"], "question": "Show types of powertrain with vehicles both from 2014 and 2013.", "question_toks": ["Show", "types", "of", "powertrain", "with", "vehicles", "both", "from", "2014", "and", "2013", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 2013.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2014 INTERSECT SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2013", "query_toks": ["SELECT", "type_of_powertrain", "FROM", "vehicles", "WHERE", "model_year", "=", "2014", "INTERSECT", "SELECT", "type_of_powertrain", "FROM", "vehicles", "WHERE", "model_year", "=", "2013"], "query_toks_no_value": ["select", "type_of_powertrain", "from", "vehicles", "where", "model_year", "=", "value", "intersect", "select", "type_of_powertrain", "from", "vehicles", "where", "model_year", "=", "value"], "question": "What are the types of powertrains that have vehicles that were made in both 2013 and 2014?", "question_toks": ["What", "are", "the", "types", "of", "powertrains", "that", "have", "vehicles", "that", "were", "made", "in", "both", "2013", "and", "2014", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 2013.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT type_of_powertrain ,  count(*) FROM vehicles GROUP BY type_of_powertrain", "query_toks": ["SELECT", "type_of_powertrain", ",", "count", "(", "*", ")", "FROM", "vehicles", "GROUP", "BY", "type_of_powertrain"], "query_toks_no_value": ["select", "type_of_powertrain", ",", "count", "(", "*", ")", "from", "vehicles", "group", "by", "type_of_powertrain"], "question": "Show all types of powertrain and the number of vehicles in each type.", "question_toks": ["Show", "all", "types", "of", "powertrain", "and", "the", "number", "of", "vehicles", "in", "each", "type", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT type_of_powertrain ,  count(*) FROM vehicles GROUP BY type_of_powertrain", "query_toks": ["SELECT", "type_of_powertrain", ",", "count", "(", "*", ")", "FROM", "vehicles", "GROUP", "BY", "type_of_powertrain"], "query_toks_no_value": ["select", "type_of_powertrain", ",", "count", "(", "*", ")", "from", "vehicles", "group", "by", "type_of_powertrain"], "question": "How many vehicles have each type of powertrain?", "question_toks": ["How", "many", "vehicles", "have", "each", "type", "of", "powertrain", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT type_of_powertrain FROM vehicles GROUP BY type_of_powertrain ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "type_of_powertrain", "FROM", "vehicles", "GROUP", "BY", "type_of_powertrain", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "type_of_powertrain", "from", "vehicles", "group", "by", "type_of_powertrain", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the type of powertrain with most number of vehicles.", "question_toks": ["What", "is", "the", "type", "of", "powertrain", "with", "most", "number", "of", "vehicles", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT type_of_powertrain FROM vehicles GROUP BY type_of_powertrain ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "type_of_powertrain", "FROM", "vehicles", "GROUP", "BY", "type_of_powertrain", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "type_of_powertrain", "from", "vehicles", "group", "by", "type_of_powertrain", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which type of powertrain is most common?", "question_toks": ["Which", "type", "of", "powertrain", "is", "most", "common", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT min(annual_fuel_cost) ,  max(annual_fuel_cost) ,  avg(annual_fuel_cost) FROM vehicles", "query_toks": ["SELECT", "min", "(", "annual_fuel_cost", ")", ",", "max", "(", "annual_fuel_cost", ")", ",", "avg", "(", "annual_fuel_cost", ")", "FROM", "vehicles"], "query_toks_no_value": ["select", "min", "(", "annual_fuel_cost", ")", ",", "max", "(", "annual_fuel_cost", ")", ",", "avg", "(", "annual_fuel_cost", ")", "from", "vehicles"], "question": "Show minimum, maximum, and average annual fuel cost for all vehicles.", "question_toks": ["Show", "minimum", ",", "maximum", ",", "and", "average", "annual", "fuel", "cost", "for", "all", "vehicles", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 16, false], null]], [1, [0, [0, 16, false], null]], [5, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT min(annual_fuel_cost) ,  max(annual_fuel_cost) ,  avg(annual_fuel_cost) FROM vehicles", "query_toks": ["SELECT", "min", "(", "annual_fuel_cost", ")", ",", "max", "(", "annual_fuel_cost", ")", ",", "avg", "(", "annual_fuel_cost", ")", "FROM", "vehicles"], "query_toks_no_value": ["select", "min", "(", "annual_fuel_cost", ")", ",", "max", "(", "annual_fuel_cost", ")", ",", "avg", "(", "annual_fuel_cost", ")", "from", "vehicles"], "question": "What are the minimum, maximum, and average annual fuel costs across all vehicles?", "question_toks": ["What", "are", "the", "minimum", ",", "maximum", ",", "and", "average", "annual", "fuel", "costs", "across", "all", "vehicles", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 16, false], null]], [1, [0, [0, 16, false], null]], [5, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT name ,  model_year FROM vehicles WHERE city_fuel_economy_rate  <=  highway_fuel_economy_rate", "query_toks": ["SELECT", "name", ",", "model_year", "FROM", "vehicles", "WHERE", "city_fuel_economy_rate", "<", "=", "highway_fuel_economy_rate"], "query_toks_no_value": ["select", "name", ",", "model_year", "from", "vehicles", "where", "city_fuel_economy_rate", "<", "=", "highway_fuel_economy_rate"], "question": "Show name and model year for vehicles with city fuel economy rate less than or equal to highway fuel economy rate.", "question_toks": ["Show", "name", "and", "model", "year", "for", "vehicles", "with", "city", "fuel", "economy", "rate", "less", "than", "or", "equal", "to", "highway", "fuel", "economy", "rate", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 6, [0, [0, 13, false], null], [0, 14, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT name ,  model_year FROM vehicles WHERE city_fuel_economy_rate  <=  highway_fuel_economy_rate", "query_toks": ["SELECT", "name", ",", "model_year", "FROM", "vehicles", "WHERE", "city_fuel_economy_rate", "<", "=", "highway_fuel_economy_rate"], "query_toks_no_value": ["select", "name", ",", "model_year", "from", "vehicles", "where", "city_fuel_economy_rate", "<", "=", "highway_fuel_economy_rate"], "question": "What are the names and model years for vehicles that have a city fuel economy rate less than or equal to its highway fuel economy rate?", "question_toks": ["What", "are", "the", "names", "and", "model", "years", "for", "vehicles", "that", "have", "a", "city", "fuel", "economy", "rate", "less", "than", "or", "equal", "to", "its", "highway", "fuel", "economy", "rate", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 6, [0, [0, 13, false], null], [0, 14, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT type_of_powertrain ,  avg(annual_fuel_cost) FROM vehicles GROUP BY type_of_powertrain HAVING count(*)  >=  2", "query_toks": ["SELECT", "type_of_powertrain", ",", "avg", "(", "annual_fuel_cost", ")", "FROM", "vehicles", "GROUP", "BY", "type_of_powertrain", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "type_of_powertrain", ",", "avg", "(", "annual_fuel_cost", ")", "from", "vehicles", "group", "by", "type_of_powertrain", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the type of powertrain with at least two vehicles, and the average annual fuel cost for vehicles in each such type.", "question_toks": ["Show", "the", "type", "of", "powertrain", "with", "at", "least", "two", "vehicles", ",", "and", "the", "average", "annual", "fuel", "cost", "for", "vehicles", "in", "each", "such", "type", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [5, [0, [0, 16, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT type_of_powertrain ,  avg(annual_fuel_cost) FROM vehicles GROUP BY type_of_powertrain HAVING count(*)  >=  2", "query_toks": ["SELECT", "type_of_powertrain", ",", "avg", "(", "annual_fuel_cost", ")", "FROM", "vehicles", "GROUP", "BY", "type_of_powertrain", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "type_of_powertrain", ",", "avg", "(", "annual_fuel_cost", ")", "from", "vehicles", "group", "by", "type_of_powertrain", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the types of powertrains for which there are two or more vehicles, and what are their average annual fuel costs?", "question_toks": ["What", "are", "the", "types", "of", "powertrains", "for", "which", "there", "are", "two", "or", "more", "vehicles", ",", "and", "what", "are", "their", "average", "annual", "fuel", "costs", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [5, [0, [0, 16, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT name ,  age ,  membership_credit FROM customers", "query_toks": ["SELECT", "name", ",", "age", ",", "membership_credit", "FROM", "customers"], "query_toks_no_value": ["select", "name", ",", "age", ",", "membership_credit", "from", "customers"], "question": "Show the name, age, membership credit for all customers?", "question_toks": ["Show", "the", "name", ",", "age", ",", "membership", "credit", "for", "all", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT name ,  age ,  membership_credit FROM customers", "query_toks": ["SELECT", "name", ",", "age", ",", "membership_credit", "FROM", "customers"], "query_toks_no_value": ["select", "name", ",", "age", ",", "membership_credit", "from", "customers"], "question": "What are the names, ages, and membership credits for all customers?", "question_toks": ["What", "are", "the", "names", ",", "ages", ",", "and", "membership", "credits", "for", "all", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT name ,  age FROM customers ORDER BY membership_credit DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "age", "FROM", "customers", "ORDER", "BY", "membership_credit", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "age", "from", "customers", "order", "by", "membership_credit", "desc", "limit", "value"], "question": "Show the name and age of the customer with maximum membership credit.", "question_toks": ["Show", "the", "name", "and", "age", "of", "the", "customer", "with", "maximum", "membership", "credit", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT name ,  age FROM customers ORDER BY membership_credit DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "age", "FROM", "customers", "ORDER", "BY", "membership_credit", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "age", "from", "customers", "order", "by", "membership_credit", "desc", "limit", "value"], "question": "What is the name and age of the customer with the most membership credit?", "question_toks": ["What", "is", "the", "name", "and", "age", "of", "the", "customer", "with", "the", "most", "membership", "credit", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT avg(age) FROM customers WHERE membership_credit  >  (SELECT avg(membership_credit) FROM customers)", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "customers", "WHERE", "membership_credit", ">", "(", "SELECT", "avg", "(", "membership_credit", ")", "FROM", "customers", ")"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "customers", "where", "membership_credit", ">", "(", "select", "avg", "(", "membership_credit", ")", "from", "customers", ")"], "question": "What is the average age for customers with a membership credit above the average?", "question_toks": ["What", "is", "the", "average", "age", "for", "customers", "with", "a", "membership", "credit", "above", "the", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT avg(age) FROM customers WHERE membership_credit  >  (SELECT avg(membership_credit) FROM customers)", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "customers", "WHERE", "membership_credit", ">", "(", "SELECT", "avg", "(", "membership_credit", ")", "FROM", "customers", ")"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "customers", "where", "membership_credit", ">", "(", "select", "avg", "(", "membership_credit", ")", "from", "customers", ")"], "question": "Return the average age for customers who have membership above the average across all customers.", "question_toks": ["Return", "the", "average", "age", "for", "customers", "who", "have", "membership", "above", "the", "average", "across", "all", "customers", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT * FROM discount", "query_toks": ["SELECT", "*", "FROM", "discount"], "query_toks_no_value": ["select", "*", "from", "discount"], "question": "Show all information for all discounts.", "question_toks": ["Show", "all", "information", "for", "all", "discounts", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT * FROM discount", "query_toks": ["SELECT", "*", "FROM", "discount"], "query_toks_no_value": ["select", "*", "from", "discount"], "question": "Return all information about discounts.", "question_toks": ["Return", "all", "information", "about", "discounts", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT T2.name ,  sum(T1.total_hours) FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id", "query_toks": ["SELECT", "T2.name", ",", "sum", "(", "T1.total_hours", ")", "FROM", "renting_history", "AS", "T1", "JOIN", "vehicles", "AS", "T2", "ON", "T1.vehicles_id", "=", "T2.id", "GROUP", "BY", "T2.id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "sum", "(", "t1", ".", "total_hours", ")", "from", "renting_history", "as", "t1", "join", "vehicles", "as", "t2", "on", "t1", ".", "vehicles_id", "=", "t2", ".", "id", "group", "by", "t2", ".", "id"], "question": "Show the name and total hours of renting for each vehicle.", "question_toks": ["Show", "the", "name", "and", "total", "hours", "of", "renting", "for", "each", "vehicle", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [4, [0, [0, 22, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT T2.name ,  sum(T1.total_hours) FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id", "query_toks": ["SELECT", "T2.name", ",", "sum", "(", "T1.total_hours", ")", "FROM", "renting_history", "AS", "T1", "JOIN", "vehicles", "AS", "T2", "ON", "T1.vehicles_id", "=", "T2.id", "GROUP", "BY", "T2.id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "sum", "(", "t1", ".", "total_hours", ")", "from", "renting_history", "as", "t1", "join", "vehicles", "as", "t2", "on", "t1", ".", "vehicles_id", "=", "t2", ".", "id", "group", "by", "t2", ".", "id"], "question": "What are the names and total rental hours for each vehicle?", "question_toks": ["What", "are", "the", "names", "and", "total", "rental", "hours", "for", "each", "vehicle", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [4, [0, [0, 22, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT name FROM vehicles WHERE id NOT IN (SELECT vehicles_id FROM renting_history)", "query_toks": ["SELECT", "name", "FROM", "vehicles", "WHERE", "id", "NOT", "IN", "(", "SELECT", "vehicles_id", "FROM", "renting_history", ")"], "query_toks_no_value": ["select", "name", "from", "vehicles", "where", "id", "not", "in", "(", "select", "vehicles_id", "from", "renting_history", ")"], "question": "Show the name of vehicles with no renting history.", "question_toks": ["Show", "the", "name", "of", "vehicles", "with", "no", "renting", "history", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT name FROM vehicles WHERE id NOT IN (SELECT vehicles_id FROM renting_history)", "query_toks": ["SELECT", "name", "FROM", "vehicles", "WHERE", "id", "NOT", "IN", "(", "SELECT", "vehicles_id", "FROM", "renting_history", ")"], "query_toks_no_value": ["select", "name", "from", "vehicles", "where", "id", "not", "in", "(", "select", "vehicles_id", "from", "renting_history", ")"], "question": "What are the names of vehicles that have never been rented?", "question_toks": ["What", "are", "the", "names", "of", "vehicles", "that", "have", "never", "been", "rented", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT T2.name FROM renting_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.id GROUP BY T2.id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.name", "FROM", "renting_history", "AS", "T1", "JOIN", "customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.id", "GROUP", "BY", "T2.id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "renting_history", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "id", "group", "by", "t2", ".", "id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the name of customer with at least two renting history records.", "question_toks": ["Show", "the", "name", "of", "customer", "with", "at", "least", "two", "renting", "history", "records", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT T2.name FROM renting_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.id GROUP BY T2.id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.name", "FROM", "renting_history", "AS", "T1", "JOIN", "customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.id", "GROUP", "BY", "T2.id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "renting_history", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "id", "group", "by", "t2", ".", "id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of customers who have two or more records of rental history?", "question_toks": ["What", "are", "the", "names", "of", "customers", "who", "have", "two", "or", "more", "records", "of", "rental", "history", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT T2.name ,  T2.model_year FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "T2.model_year", "FROM", "renting_history", "AS", "T1", "JOIN", "vehicles", "AS", "T2", "ON", "T1.vehicles_id", "=", "T2.id", "GROUP", "BY", "T2.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "model_year", "from", "renting_history", "as", "t1", "join", "vehicles", "as", "t2", "on", "t1", ".", "vehicles_id", "=", "t2", ".", "id", "group", "by", "t2", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the name and model year of the vehicle with most number of renting history records.", "question_toks": ["Show", "the", "name", "and", "model", "year", "of", "the", "vehicle", "with", "most", "number", "of", "renting", "history", "records", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT T2.name ,  T2.model_year FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "T2.model_year", "FROM", "renting_history", "AS", "T1", "JOIN", "vehicles", "AS", "T2", "ON", "T1.vehicles_id", "=", "T2.id", "GROUP", "BY", "T2.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "model_year", "from", "renting_history", "as", "t1", "join", "vehicles", "as", "t2", "on", "t1", ".", "vehicles_id", "=", "t2", ".", "id", "group", "by", "t2", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and model year of the vehicle which has been rented the most times?", "question_toks": ["What", "is", "the", "name", "and", "model", "year", "of", "the", "vehicle", "which", "has", "been", "rented", "the", "most", "times", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT T2.name FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.total_hours) DESC", "query_toks": ["SELECT", "T2.name", "FROM", "renting_history", "AS", "T1", "JOIN", "vehicles", "AS", "T2", "ON", "T1.vehicles_id", "=", "T2.id", "GROUP", "BY", "T2.id", "ORDER", "BY", "sum", "(", "T1.total_hours", ")", "DESC"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "renting_history", "as", "t1", "join", "vehicles", "as", "t2", "on", "t1", ".", "vehicles_id", "=", "t2", ".", "id", "group", "by", "t2", ".", "id", "order", "by", "sum", "(", "t1", ".", "total_hours", ")", "desc"], "question": "Show the vehicle name with a descending order of total hours of renting.", "question_toks": ["Show", "the", "vehicle", "name", "with", "a", "descending", "order", "of", "total", "hours", "of", "renting", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [4, 22, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT T2.name FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.total_hours) DESC", "query_toks": ["SELECT", "T2.name", "FROM", "renting_history", "AS", "T1", "JOIN", "vehicles", "AS", "T2", "ON", "T1.vehicles_id", "=", "T2.id", "GROUP", "BY", "T2.id", "ORDER", "BY", "sum", "(", "T1.total_hours", ")", "DESC"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "renting_history", "as", "t1", "join", "vehicles", "as", "t2", "on", "t1", ".", "vehicles_id", "=", "t2", ".", "id", "group", "by", "t2", ".", "id", "order", "by", "sum", "(", "t1", ".", "total_hours", ")", "desc"], "question": "What are the names of vehicles, sorted descending by total hours of renting?", "question_toks": ["What", "are", "the", "names", "of", "vehicles", ",", "sorted", "descending", "by", "total", "hours", "of", "renting", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [4, 22, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT T2.name FROM renting_history AS T1 JOIN discount AS T2 ON T1.discount_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "renting_history", "AS", "T1", "JOIN", "discount", "AS", "T2", "ON", "T1.discount_id", "=", "T2.id", "GROUP", "BY", "T2.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "renting_history", "as", "t1", "join", "discount", "as", "t2", "on", "t1", ".", "discount_id", "=", "t2", ".", "id", "group", "by", "t2", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the discount name with most number of renting history records?", "question_toks": ["What", "is", "the", "discount", "name", "with", "most", "number", "of", "renting", "history", "records", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT T2.name FROM renting_history AS T1 JOIN discount AS T2 ON T1.discount_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "renting_history", "AS", "T1", "JOIN", "discount", "AS", "T2", "ON", "T1.discount_id", "=", "T2.id", "GROUP", "BY", "T2.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "renting_history", "as", "t1", "join", "discount", "as", "t2", "on", "t1", ".", "discount_id", "=", "t2", ".", "id", "group", "by", "t2", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the name of the discount that corresponds to the most rental history records.", "question_toks": ["Return", "the", "name", "of", "the", "discount", "that", "corresponds", "to", "the", "most", "rental", "history", "records", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT T2.name ,  T2.Type_of_powertrain FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T1.vehicles_id HAVING sum(T1.total_hours)  >  30", "query_toks": ["SELECT", "T2.name", ",", "T2.Type_of_powertrain", "FROM", "renting_history", "AS", "T1", "JOIN", "vehicles", "AS", "T2", "ON", "T1.vehicles_id", "=", "T2.id", "GROUP", "BY", "T1.vehicles_id", "HAVING", "sum", "(", "T1.total_hours", ")", ">", "30"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "type_of_powertrain", "from", "renting_history", "as", "t1", "join", "vehicles", "as", "t2", "on", "t1", ".", "vehicles_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "vehicles_id", "having", "sum", "(", "t1", ".", "total_hours", ")", ">", "value"], "question": "Find the name and powertrain type of the cars that rented for more than 30 total hours.", "question_toks": ["Find", "the", "name", "and", "powertrain", "type", "of", "the", "cars", "that", "rented", "for", "more", "than", "30", "total", "hours", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [[false, 3, [0, [4, 22, false], null], 30.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT T2.name ,  T2.Type_of_powertrain FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T1.vehicles_id HAVING sum(T1.total_hours)  >  30", "query_toks": ["SELECT", "T2.name", ",", "T2.Type_of_powertrain", "FROM", "renting_history", "AS", "T1", "JOIN", "vehicles", "AS", "T2", "ON", "T1.vehicles_id", "=", "T2.id", "GROUP", "BY", "T1.vehicles_id", "HAVING", "sum", "(", "T1.total_hours", ")", ">", "30"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "type_of_powertrain", "from", "renting_history", "as", "t1", "join", "vehicles", "as", "t2", "on", "t1", ".", "vehicles_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "vehicles_id", "having", "sum", "(", "t1", ".", "total_hours", ")", ">", "value"], "question": "What are the names and powertrain types of cars that have more than 30 total rental hours?", "question_toks": ["What", "are", "the", "names", "and", "powertrain", "types", "of", "cars", "that", "have", "more", "than", "30", "total", "rental", "hours", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [[false, 3, [0, [4, 22, false], null], 30.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT avg(City_fuel_economy_rate) ,  avg(Highway_fuel_economy_rate) , Type_of_powertrain FROM vehicles GROUP BY Type_of_powertrain", "query_toks": ["SELECT", "avg", "(", "City_fuel_economy_rate", ")", ",", "avg", "(", "Highway_fuel_economy_rate", ")", ",", "Type_of_powertrain", "FROM", "vehicles", "GROUP", "BY", "Type_of_powertrain"], "query_toks_no_value": ["select", "avg", "(", "city_fuel_economy_rate", ")", ",", "avg", "(", "highway_fuel_economy_rate", ")", ",", "type_of_powertrain", "from", "vehicles", "group", "by", "type_of_powertrain"], "question": "Find the average city and highway fuel rates for cars with different powertrain types.", "question_toks": ["Find", "the", "average", "city", "and", "highway", "fuel", "rates", "for", "cars", "with", "different", "powertrain", "types", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "vehicle_rent", "query": "SELECT avg(City_fuel_economy_rate) ,  avg(Highway_fuel_economy_rate) , Type_of_powertrain FROM vehicles GROUP BY Type_of_powertrain", "query_toks": ["SELECT", "avg", "(", "City_fuel_economy_rate", ")", ",", "avg", "(", "Highway_fuel_economy_rate", ")", ",", "Type_of_powertrain", "FROM", "vehicles", "GROUP", "BY", "Type_of_powertrain"], "query_toks_no_value": ["select", "avg", "(", "city_fuel_economy_rate", ")", ",", "avg", "(", "highway_fuel_economy_rate", ")", ",", "type_of_powertrain", "from", "vehicles", "group", "by", "type_of_powertrain"], "question": "What are the average city fuel economy rate, average highway fuel economy rate for different types of powertrains?", "question_toks": ["What", "are", "the", "average", "city", "fuel", "economy", "rate", ",", "average", "highway", "fuel", "economy", "rate", "for", "different", "types", "of", "powertrains", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Customers", "schema": ["id:number", "name:text", "age:number", "membership_credit:number"]}, {"name": "Discount", "schema": ["id:number", "name:text", "membership_credit:number"]}, {"name": "Vehicles", "schema": ["id:number", "name:text", "Model_year:number", "Type_of_powertrain:text", "Combined_fuel_economy_rate:number", "City_fuel_economy_rate:number", "Highway_fuel_economy_rate:number", "Cost_per_25_miles:number", "Annual_fuel_cost:number", "Notes:text"]}, {"name": "Renting_history", "schema": ["id:number", "customer_id:number", "discount_id:number", "vehicles_id:number", "total_hours:number"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT avg(amount_of_loan) FROM Student_Loans", "query_toks": ["SELECT", "avg", "(", "amount_of_loan", ")", "FROM", "Student_Loans"], "query_toks_no_value": ["select", "avg", "(", "amount_of_loan", ")", "from", "student_loans"], "question": "What is the average amount of a student loan?", "question_toks": ["What", "is", "the", "average", "amount", "of", "a", "student", "loan", "?"], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[5, [0, [0, 31, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT avg(amount_of_loan) FROM Student_Loans", "query_toks": ["SELECT", "avg", "(", "amount_of_loan", ")", "FROM", "Student_Loans"], "query_toks_no_value": ["select", "avg", "(", "amount_of_loan", ")", "from", "student_loans"], "question": "Compute the average amount of student loans.", "question_toks": ["Compute", "the", "average", "amount", "of", "student", "loans", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[5, [0, [0, 31, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  >=  2 UNION SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Detention AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  <  2", "query_toks": ["SELECT", "T1.bio_data", ",", "T1.student_id", "FROM", "Students", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", ">", "=", "2", "UNION", "SELECT", "T1.bio_data", ",", "T1.student_id", "FROM", "Students", "AS", "T1", "JOIN", "Detention", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", "<", "2"], "query_toks_no_value": ["select", "t1", ".", "bio_data", ",", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value", "union", "select", "t1", ".", "bio_data", ",", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "detention", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", "<", "value"], "question": "List the biographical data and student id for the students who take 2 or more classes and the students who have less than 2 detentions.", "question_toks": ["List", "the", "biographical", "data", "and", "student", "id", "for", "the", "students", "who", "take", "2", "or", "more", "classes", "and", "the", "students", "who", "have", "less", "than", "2", "detentions", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 0], ["table_unit", 13]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 4, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  >=  2 UNION SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Detention AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  <  2", "query_toks": ["SELECT", "T1.bio_data", ",", "T1.student_id", "FROM", "Students", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", ">", "=", "2", "UNION", "SELECT", "T1.bio_data", ",", "T1.student_id", "FROM", "Students", "AS", "T1", "JOIN", "Detention", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", "<", "2"], "query_toks_no_value": ["select", "t1", ".", "bio_data", ",", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value", "union", "select", "t1", ".", "bio_data", ",", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "detention", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", "<", "value"], "question": "What are the biographical data and student id of the students who either took two or more classes and or have less than two detentions?", "question_toks": ["What", "are", "the", "biographical", "data", "and", "student", "id", "of", "the", "students", "who", "either", "took", "two", "or", "more", "classes", "and", "or", "have", "less", "than", "two", "detentions", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 0], ["table_unit", 13]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 4, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE '%data%' EXCEPT SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE 'net%'", "query_toks": ["SELECT", "T1.teacher_details", "FROM", "Teachers", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "WHERE", "T2.class_details", "LIKE", "'", "%", "data", "%", "'", "EXCEPT", "SELECT", "T1.teacher_details", "FROM", "Teachers", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "WHERE", "T2.class_details", "LIKE", "'net", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "teacher_details", "from", "teachers", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "where", "t2", ".", "class_details", "like", "value", "except", "select", "t1", ".", "teacher_details", "from", "teachers", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "where", "t2", ".", "class_details", "like", "value"], "question": "List the details of the teachers who teach some class whose detail has the substring 'data' but do not teach a class whose detail contains the prefix 'net'", "question_toks": ["List", "the", "details", "of", "the", "teachers", "who", "teach", "some", "class", "whose", "detail", "has", "the", "substring", "'data", "'", "but", "do", "not", "teach", "a", "class", "whose", "detail", "contains", "the", "prefix", "'net", "'"], "sql": {"from": {"table_units": [["table_unit", 9], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 35, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 9, [0, [0, 36, false], null], "\"%data%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 9], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 35, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 9, [0, [0, 36, false], null], "\"net%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE '%data%' EXCEPT SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE 'net%'", "query_toks": ["SELECT", "T1.teacher_details", "FROM", "Teachers", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "WHERE", "T2.class_details", "LIKE", "'", "%", "data", "%", "'", "EXCEPT", "SELECT", "T1.teacher_details", "FROM", "Teachers", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "WHERE", "T2.class_details", "LIKE", "'net", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "teacher_details", "from", "teachers", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "where", "t2", ".", "class_details", "like", "value", "except", "select", "t1", ".", "teacher_details", "from", "teachers", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "where", "t2", ".", "class_details", "like", "value"], "question": "Which teachers teach a class that has the substring 'data' in its detail but do not teach a class that has prefix 'net' in its detail? Give me the teacher details.", "question_toks": ["Which", "teachers", "teach", "a", "class", "that", "has", "the", "substring", "'data", "'", "in", "its", "detail", "but", "do", "not", "teach", "a", "class", "that", "has", "prefix", "'net", "'", "in", "its", "detail", "?", "Give", "me", "the", "teacher", "details", "."], "sql": {"from": {"table_units": [["table_unit", 9], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 35, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 9, [0, [0, 36, false], null], "\"%data%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 9], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 35, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 9, [0, [0, 36, false], null], "\"net%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "select bio_data from students where student_id not in (select t1.student_id from students as t1 join detention as t2 on t1.student_id  =  t2.student_id union select t1.student_id from students as t1 join student_loans as t2 on t1.student_id  =  t2.student_id)", "query_toks": ["select", "bio_data", "from", "students", "where", "student_id", "not", "in", "(", "select", "t1.student_id", "from", "students", "as", "t1", "join", "detention", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "union", "select", "t1.student_id", "from", "students", "as", "t1", "join", "student_loans", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", ")"], "query_toks_no_value": ["select", "bio_data", "from", "students", "where", "student_id", "not", "in", "(", "select", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "detention", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "union", "select", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "student_loans", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", ")"], "question": "List the biographical data of the students who never had a detention or student loan .", "question_toks": ["List", "the", "biographical", "data", "of", "the", "students", "who", "never", "had", "a", "detention", "or", "student", "loan", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 13]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 29, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 0], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 29, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "select bio_data from students where student_id not in (select t1.student_id from students as t1 join detention as t2 on t1.student_id  =  t2.student_id union select t1.student_id from students as t1 join student_loans as t2 on t1.student_id  =  t2.student_id)", "query_toks": ["select", "bio_data", "from", "students", "where", "student_id", "not", "in", "(", "select", "t1.student_id", "from", "students", "as", "t1", "join", "detention", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "union", "select", "t1.student_id", "from", "students", "as", "t1", "join", "student_loans", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", ")"], "query_toks_no_value": ["select", "bio_data", "from", "students", "where", "student_id", "not", "in", "(", "select", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "detention", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "union", "select", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "student_loans", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", ")"], "question": "Which students never had a detention or student loan ? Find their biographical data .", "question_toks": ["Which", "students", "never", "had", "a", "detention", "or", "student", "loan", "?", "Find", "their", "biographical", "data", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 13]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 29, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 0], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 29, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT amount_of_loan ,  date_of_loan FROM Student_Loans WHERE student_id IN ( SELECT student_id FROM Achievements GROUP BY student_id HAVING count(*)  >=  2 )", "query_toks": ["SELECT", "amount_of_loan", ",", "date_of_loan", "FROM", "Student_Loans", "WHERE", "student_id", "IN", "(", "SELECT", "student_id", "FROM", "Achievements", "GROUP", "BY", "student_id", "HAVING", "count", "(", "*", ")", ">", "=", "2", ")"], "query_toks_no_value": ["select", "amount_of_loan", ",", "date_of_loan", "from", "student_loans", "where", "student_id", "in", "(", "select", "student_id", "from", "achievements", "group", "by", "student_id", "having", "count", "(", "*", ")", ">", "=", "value", ")"], "question": "What are the loan amounts and loan dates of the students who have at least 2 achievements?", "question_toks": ["What", "are", "the", "loan", "amounts", "and", "loan", "dates", "of", "the", "students", "who", "have", "at", "least", "2", "achievements", "?"], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]], [0, [0, [0, 30, false], null]]]], "where": [[false, 8, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 14]], "conds": []}, "select": [false, [[0, [0, [0, 52, false], null]]]], "where": [], "groupBy": [[0, 52, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT amount_of_loan ,  date_of_loan FROM Student_Loans WHERE student_id IN ( SELECT student_id FROM Achievements GROUP BY student_id HAVING count(*)  >=  2 )", "query_toks": ["SELECT", "amount_of_loan", ",", "date_of_loan", "FROM", "Student_Loans", "WHERE", "student_id", "IN", "(", "SELECT", "student_id", "FROM", "Achievements", "GROUP", "BY", "student_id", "HAVING", "count", "(", "*", ")", ">", "=", "2", ")"], "query_toks_no_value": ["select", "amount_of_loan", ",", "date_of_loan", "from", "student_loans", "where", "student_id", "in", "(", "select", "student_id", "from", "achievements", "group", "by", "student_id", "having", "count", "(", "*", ")", ">", "=", "value", ")"], "question": "List the amount and date of loan for the students who have two or more achievements.", "question_toks": ["List", "the", "amount", "and", "date", "of", "loan", "for", "the", "students", "who", "have", "two", "or", "more", "achievements", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]], [0, [0, [0, 30, false], null]]]], "where": [[false, 8, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 14]], "conds": []}, "select": [false, [[0, [0, [0, 52, false], null]]]], "where": [], "groupBy": [[0, 52, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.teacher_details ,  T1.teacher_id FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.teacher_details", ",", "T1.teacher_id", "FROM", "Teachers", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "GROUP", "BY", "T1.teacher_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "teacher_details", ",", "t1", ".", "teacher_id", "from", "teachers", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "group", "by", "t1", ".", "teacher_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "List the detail and id of the teacher who teaches the most courses.", "question_toks": ["List", "the", "detail", "and", "id", "of", "the", "teacher", "who", "teaches", "the", "most", "courses", "."], "sql": {"from": {"table_units": [["table_unit", 9], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 35, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.teacher_details ,  T1.teacher_id FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.teacher_details", ",", "T1.teacher_id", "FROM", "Teachers", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "GROUP", "BY", "T1.teacher_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "teacher_details", ",", "t1", ".", "teacher_id", "from", "teachers", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "group", "by", "t1", ".", "teacher_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the detail and id of the teacher who teaches the largest number of courses?", "question_toks": ["What", "are", "the", "detail", "and", "id", "of", "the", "teacher", "who", "teaches", "the", "largest", "number", "of", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 9], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 35, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT distinct(T1.detention_type_description) FROM Ref_Detention_Type AS T1 JOIN Detention AS T2 ON T1.detention_type_code  =  T2.detention_type_code", "query_toks": ["SELECT", "distinct", "(", "T1.detention_type_description", ")", "FROM", "Ref_Detention_Type", "AS", "T1", "JOIN", "Detention", "AS", "T2", "ON", "T1.detention_type_code", "=", "T2.detention_type_code"], "query_toks_no_value": ["select", "distinct", "(", "t1", ".", "detention_type_description", ")", "from", "ref_detention_type", "as", "t1", "join", "detention", "as", "t2", "on", "t1", ".", "detention_type_code", "=", "t2", ".", "detention_type_code"], "question": "What are the distinct descriptions of all the detentions which have ever happened?", "question_toks": ["What", "are", "the", "distinct", "descriptions", "of", "all", "the", "detentions", "which", "have", "ever", "happened", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 13]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 44, false], null]]}, "select": [true, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT distinct(T1.detention_type_description) FROM Ref_Detention_Type AS T1 JOIN Detention AS T2 ON T1.detention_type_code  =  T2.detention_type_code", "query_toks": ["SELECT", "distinct", "(", "T1.detention_type_description", ")", "FROM", "Ref_Detention_Type", "AS", "T1", "JOIN", "Detention", "AS", "T2", "ON", "T1.detention_type_code", "=", "T2.detention_type_code"], "query_toks_no_value": ["select", "distinct", "(", "t1", ".", "detention_type_description", ")", "from", "ref_detention_type", "as", "t1", "join", "detention", "as", "t2", "on", "t1", ".", "detention_type_code", "=", "t2", ".", "detention_type_code"], "question": "Return the distinct descriptions of all the detentions that have happened.", "question_toks": ["Return", "the", "distinct", "descriptions", "of", "all", "the", "detentions", "that", "have", "happened", "."], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 13]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 44, false], null]]}, "select": [true, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT DISTINCT T1.student_details ,  T3.address_type_description FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Address_Types AS T3 ON T2.address_type_code  =  T3.address_type_code", "query_toks": ["SELECT", "DISTINCT", "T1.student_details", ",", "T3.address_type_description", "FROM", "Students", "AS", "T1", "JOIN", "Students_Addresses", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "JOIN", "Ref_Address_Types", "AS", "T3", "ON", "T2.address_type_code", "=", "T3.address_type_code"], "query_toks_no_value": ["select", "distinct", "t1", ".", "student_details", ",", "t3", ".", "address_type_description", "from", "students", "as", "t1", "join", "students_addresses", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "join", "ref_address_types", "as", "t3", "on", "t2", ".", "address_type_code", "=", "t3", ".", "address_type_code"], "question": "List the personal details and the address type descriptions of all the students.", "question_toks": ["List", "the", "personal", "details", "and", "the", "address", "type", "descriptions", "of", "all", "the", "students", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 12], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 39, false], null], [0, 17, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT DISTINCT T1.student_details ,  T3.address_type_description FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Address_Types AS T3 ON T2.address_type_code  =  T3.address_type_code", "query_toks": ["SELECT", "DISTINCT", "T1.student_details", ",", "T3.address_type_description", "FROM", "Students", "AS", "T1", "JOIN", "Students_Addresses", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "JOIN", "Ref_Address_Types", "AS", "T3", "ON", "T2.address_type_code", "=", "T3.address_type_code"], "query_toks_no_value": ["select", "distinct", "t1", ".", "student_details", ",", "t3", ".", "address_type_description", "from", "students", "as", "t1", "join", "students_addresses", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "join", "ref_address_types", "as", "t3", "on", "t2", ".", "address_type_code", "=", "t3", ".", "address_type_code"], "question": "What are the personal details and the address type descriptions of each student?", "question_toks": ["What", "are", "the", "personal", "details", "and", "the", "address", "type", "descriptions", "of", "each", "student", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 12], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 39, false], null], [0, 17, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.address_details ,  T3.bio_data FROM Addresses AS T1 JOIN Students_Addresses AS T2 ON T1.address_id  =  T2.address_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id", "query_toks": ["SELECT", "T1.address_details", ",", "T3.bio_data", "FROM", "Addresses", "AS", "T1", "JOIN", "Students_Addresses", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "JOIN", "Students", "AS", "T3", "ON", "T2.student_id", "=", "T3.student_id"], "query_toks_no_value": ["select", "t1", ".", "address_details", ",", "t3", ".", "bio_data", "from", "addresses", "as", "t1", "join", "students_addresses", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "join", "students", "as", "t3", "on", "t2", ".", "student_id", "=", "t3", ".", "student_id"], "question": "List the the address details and the biographical information of the students.", "question_toks": ["List", "the", "the", "address", "details", "and", "the", "biographical", "information", "of", "the", "students", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 12], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 38, false], null], "and", [false, 2, [0, [0, 40, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.address_details ,  T3.bio_data FROM Addresses AS T1 JOIN Students_Addresses AS T2 ON T1.address_id  =  T2.address_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id", "query_toks": ["SELECT", "T1.address_details", ",", "T3.bio_data", "FROM", "Addresses", "AS", "T1", "JOIN", "Students_Addresses", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "JOIN", "Students", "AS", "T3", "ON", "T2.student_id", "=", "T3.student_id"], "query_toks_no_value": ["select", "t1", ".", "address_details", ",", "t3", ".", "bio_data", "from", "addresses", "as", "t1", "join", "students_addresses", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "join", "students", "as", "t3", "on", "t2", ".", "student_id", "=", "t3", ".", "student_id"], "question": "What are the address details and biographical information of each student?", "question_toks": ["What", "are", "the", "address", "details", "and", "biographical", "information", "of", "each", "student", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 12], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 38, false], null], "and", [false, 2, [0, [0, 40, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.bio_data ,  T2.date_of_transcript FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id  =  T2.student_id", "query_toks": ["SELECT", "T1.bio_data", ",", "T2.date_of_transcript", "FROM", "Students", "AS", "T1", "JOIN", "Transcripts", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id"], "query_toks_no_value": ["select", "t1", ".", "bio_data", ",", "t2", ".", "date_of_transcript", "from", "students", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id"], "question": "List the biographical data and the date of the transcript of all the students.", "question_toks": ["List", "the", "biographical", "data", "and", "the", "date", "of", "the", "transcript", "of", "all", "the", "students", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.bio_data ,  T2.date_of_transcript FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id  =  T2.student_id", "query_toks": ["SELECT", "T1.bio_data", ",", "T2.date_of_transcript", "FROM", "Students", "AS", "T1", "JOIN", "Transcripts", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id"], "query_toks_no_value": ["select", "t1", ".", "bio_data", ",", "t2", ".", "date_of_transcript", "from", "students", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id"], "question": "What are the biographical data and the date of transcript issuance of each student?", "question_toks": ["What", "are", "the", "biographical", "data", "and", "the", "date", "of", "transcript", "issuance", "of", "each", "student", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT count(DISTINCT student_id) ,  behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "DISTINCT", "student_id", ")", ",", "behaviour_monitoring_details", "FROM", "Behaviour_Monitoring", "GROUP", "BY", "behaviour_monitoring_details", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "distinct", "student_id", ")", ",", "behaviour_monitoring_details", "from", "behaviour_monitoring", "group", "by", "behaviour_monitoring_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "How many students got the most common result in the behavioral monitoring details? Also list the result details.", "question_toks": ["How", "many", "students", "got", "the", "most", "common", "result", "in", "the", "behavioral", "monitoring", "details", "?", "Also", "list", "the", "result", "details", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 9, true], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT count(DISTINCT student_id) ,  behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "DISTINCT", "student_id", ")", ",", "behaviour_monitoring_details", "FROM", "Behaviour_Monitoring", "GROUP", "BY", "behaviour_monitoring_details", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "distinct", "student_id", ")", ",", "behaviour_monitoring_details", "from", "behaviour_monitoring", "group", "by", "behaviour_monitoring_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the most common result in the behavioral monitoring details. What are the count and the details of this result?", "question_toks": ["Find", "the", "most", "common", "result", "in", "the", "behavioral", "monitoring", "details", ".", "What", "are", "the", "count", "and", "the", "details", "of", "this", "result", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 9, true], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 ) INTERSECT SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details HAVING count(*)  =  3 )", "query_toks": ["SELECT", "T1.bio_data", ",", "T1.student_details", "FROM", "Students", "AS", "T1", "JOIN", "Behaviour_Monitoring", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.behaviour_monitoring_details", "IN", "(", "SELECT", "behaviour_monitoring_details", "FROM", "Behaviour_Monitoring", "GROUP", "BY", "behaviour_monitoring_details", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")", "INTERSECT", "SELECT", "T1.bio_data", ",", "T1.student_details", "FROM", "Students", "AS", "T1", "JOIN", "Behaviour_Monitoring", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.behaviour_monitoring_details", "IN", "(", "SELECT", "behaviour_monitoring_details", "FROM", "Behaviour_Monitoring", "GROUP", "BY", "behaviour_monitoring_details", "HAVING", "count", "(", "*", ")", "=", "3", ")"], "query_toks_no_value": ["select", "t1", ".", "bio_data", ",", "t1", ".", "student_details", "from", "students", "as", "t1", "join", "behaviour_monitoring", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "behaviour_monitoring_details", "in", "(", "select", "behaviour_monitoring_details", "from", "behaviour_monitoring", "group", "by", "behaviour_monitoring_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")", "intersect", "select", "t1", ".", "bio_data", ",", "t1", ".", "student_details", "from", "students", "as", "t1", "join", "behaviour_monitoring", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "behaviour_monitoring_details", "in", "(", "select", "behaviour_monitoring_details", "from", "behaviour_monitoring", "group", "by", "behaviour_monitoring_details", "having", "count", "(", "*", ")", "=", "value", ")"], "question": "Which students not only got the most common result but also got a result obtained by 3 students in behaviour monitoring? List the student's biographical data and details.", "question_toks": ["Which", "students", "not", "only", "got", "the", "most", "common", "result", "but", "also", "got", "a", "result", "obtained", "by", "3", "students", "in", "behaviour", "monitoring", "?", "List", "the", "student", "'s", "biographical", "data", "and", "details", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 2, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 ) INTERSECT SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details HAVING count(*)  =  3 )", "query_toks": ["SELECT", "T1.bio_data", ",", "T1.student_details", "FROM", "Students", "AS", "T1", "JOIN", "Behaviour_Monitoring", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.behaviour_monitoring_details", "IN", "(", "SELECT", "behaviour_monitoring_details", "FROM", "Behaviour_Monitoring", "GROUP", "BY", "behaviour_monitoring_details", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")", "INTERSECT", "SELECT", "T1.bio_data", ",", "T1.student_details", "FROM", "Students", "AS", "T1", "JOIN", "Behaviour_Monitoring", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.behaviour_monitoring_details", "IN", "(", "SELECT", "behaviour_monitoring_details", "FROM", "Behaviour_Monitoring", "GROUP", "BY", "behaviour_monitoring_details", "HAVING", "count", "(", "*", ")", "=", "3", ")"], "query_toks_no_value": ["select", "t1", ".", "bio_data", ",", "t1", ".", "student_details", "from", "students", "as", "t1", "join", "behaviour_monitoring", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "behaviour_monitoring_details", "in", "(", "select", "behaviour_monitoring_details", "from", "behaviour_monitoring", "group", "by", "behaviour_monitoring_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")", "intersect", "select", "t1", ".", "bio_data", ",", "t1", ".", "student_details", "from", "students", "as", "t1", "join", "behaviour_monitoring", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "behaviour_monitoring_details", "in", "(", "select", "behaviour_monitoring_details", "from", "behaviour_monitoring", "group", "by", "behaviour_monitoring_details", "having", "count", "(", "*", ")", "=", "value", ")"], "question": "Find the biographical data and details of students who got not only the most common result but also a result that is obtained by 3 students in behaviour monitoring.", "question_toks": ["Find", "the", "biographical", "data", "and", "details", "of", "students", "who", "got", "not", "only", "the", "most", "common", "result", "but", "also", "a", "result", "that", "is", "obtained", "by", "3", "students", "in", "behaviour", "monitoring", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 2, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.bio_data FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 ) EXCEPT SELECT T1.bio_data FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details NOT IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 )", "query_toks": ["SELECT", "T1.bio_data", "FROM", "Students", "AS", "T1", "JOIN", "Behaviour_Monitoring", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.behaviour_monitoring_details", "IN", "(", "SELECT", "behaviour_monitoring_details", "FROM", "Behaviour_Monitoring", "GROUP", "BY", "behaviour_monitoring_details", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")", "EXCEPT", "SELECT", "T1.bio_data", "FROM", "Students", "AS", "T1", "JOIN", "Behaviour_Monitoring", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.behaviour_monitoring_details", "NOT", "IN", "(", "SELECT", "behaviour_monitoring_details", "FROM", "Behaviour_Monitoring", "GROUP", "BY", "behaviour_monitoring_details", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t1", ".", "bio_data", "from", "students", "as", "t1", "join", "behaviour_monitoring", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "behaviour_monitoring_details", "in", "(", "select", "behaviour_monitoring_details", "from", "behaviour_monitoring", "group", "by", "behaviour_monitoring_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")", "except", "select", "t1", ".", "bio_data", "from", "students", "as", "t1", "join", "behaviour_monitoring", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "behaviour_monitoring_details", "not", "in", "(", "select", "behaviour_monitoring_details", "from", "behaviour_monitoring", "group", "by", "behaviour_monitoring_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Which students only got the most common result for his or her all behaviour monitoring details? List the students' biographical information.", "question_toks": ["Which", "students", "only", "got", "the", "most", "common", "result", "for", "his", "or", "her", "all", "behaviour", "monitoring", "details", "?", "List", "the", "students", "'", "biographical", "information", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "select t1.bio_data from students as t1 join behaviour_monitoring as t2 on t1.student_id  =  t2.student_id where t2.behaviour_monitoring_details in ( select behaviour_monitoring_details from behaviour_monitoring group by behaviour_monitoring_details order by count(*) desc limit 1 ) except select t1.bio_data from students as t1 join behaviour_monitoring as t2 on t1.student_id  =  t2.student_id where t2.behaviour_monitoring_details not in ( select behaviour_monitoring_details from behaviour_monitoring group by behaviour_monitoring_details order by count(*) desc limit 1 )", "query_toks": ["select", "t1.bio_data", "from", "students", "as", "t1", "join", "behaviour_monitoring", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "where", "t2.behaviour_monitoring_details", "in", "(", "select", "behaviour_monitoring_details", "from", "behaviour_monitoring", "group", "by", "behaviour_monitoring_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ")", "except", "select", "t1.bio_data", "from", "students", "as", "t1", "join", "behaviour_monitoring", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "where", "t2.behaviour_monitoring_details", "not", "in", "(", "select", "behaviour_monitoring_details", "from", "behaviour_monitoring", "group", "by", "behaviour_monitoring_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ")"], "query_toks_no_value": ["select", "t1", ".", "bio_data", "from", "students", "as", "t1", "join", "behaviour_monitoring", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "behaviour_monitoring_details", "in", "(", "select", "behaviour_monitoring_details", "from", "behaviour_monitoring", "group", "by", "behaviour_monitoring_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")", "except", "select", "t1", ".", "bio_data", "from", "students", "as", "t1", "join", "behaviour_monitoring", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "behaviour_monitoring_details", "not", "in", "(", "select", "behaviour_monitoring_details", "from", "behaviour_monitoring", "group", "by", "behaviour_monitoring_details", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "What is the biographical information of the students who got the most common result for their behaviour monitoring details ?", "question_toks": ["What", "is", "the", "biographical", "information", "of", "the", "students", "who", "got", "the", "most", "common", "result", "for", "their", "behaviour", "monitoring", "details", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.bio_data ,  T2.event_date FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id", "query_toks": ["SELECT", "T1.bio_data", ",", "T2.event_date", "FROM", "Students", "AS", "T1", "JOIN", "Student_Events", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id"], "query_toks_no_value": ["select", "t1", ".", "bio_data", ",", "t2", ".", "event_date", "from", "students", "as", "t1", "join", "student_events", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id"], "question": "Which students have gone through any event? List the students' biographical data and event date.", "question_toks": ["Which", "students", "have", "gone", "through", "any", "event", "?", "List", "the", "students", "'", "biographical", "data", "and", "event", "date", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.bio_data ,  T2.event_date FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id", "query_toks": ["SELECT", "T1.bio_data", ",", "T2.event_date", "FROM", "Students", "AS", "T1", "JOIN", "Student_Events", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id"], "query_toks_no_value": ["select", "t1", ".", "bio_data", ",", "t2", ".", "event_date", "from", "students", "as", "t1", "join", "student_events", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id"], "question": "Find the biographical data and event date for students who participated in any events.", "question_toks": ["Find", "the", "biographical", "data", "and", "event", "date", "for", "students", "who", "participated", "in", "any", "events", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT count(*) ,  T2.event_type_code ,  T3.event_type_description FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Event_Types AS T3 ON T2.event_type_code  =  T3.event_type_code GROUP BY T2.event_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T2.event_type_code", ",", "T3.event_type_description", "FROM", "Students", "AS", "T1", "JOIN", "Student_Events", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "JOIN", "Ref_Event_Types", "AS", "T3", "ON", "T2.event_type_code", "=", "T3.event_type_code", "GROUP", "BY", "T2.event_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "event_type_code", ",", "t3", ".", "event_type_description", "from", "students", "as", "t1", "join", "student_events", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "join", "ref_event_types", "as", "t3", "on", "t2", ".", "event_type_code", "=", "t3", ".", "event_type_code", "group", "by", "t2", ".", "event_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "How many students have joined in the most common type of event? List the number, the event type and description.", "question_toks": ["How", "many", "students", "have", "joined", "in", "the", "most", "common", "type", "of", "event", "?", "List", "the", "number", ",", "the", "event", "type", "and", "description", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 8], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 23, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 13, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 22, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 22, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT count(*) ,  T2.event_type_code ,  T3.event_type_description FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Event_Types AS T3 ON T2.event_type_code  =  T3.event_type_code GROUP BY T2.event_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T2.event_type_code", ",", "T3.event_type_description", "FROM", "Students", "AS", "T1", "JOIN", "Student_Events", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "JOIN", "Ref_Event_Types", "AS", "T3", "ON", "T2.event_type_code", "=", "T3.event_type_code", "GROUP", "BY", "T2.event_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "event_type_code", ",", "t3", ".", "event_type_description", "from", "students", "as", "t1", "join", "student_events", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "join", "ref_event_types", "as", "t3", "on", "t2", ".", "event_type_code", "=", "t3", ".", "event_type_code", "group", "by", "t2", ".", "event_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the type of event the most students joined? Give me the number of students, and the event type code and description.", "question_toks": ["What", "is", "the", "type", "of", "event", "the", "most", "students", "joined", "?", "Give", "me", "the", "number", "of", "students", ",", "and", "the", "event", "type", "code", "and", "description", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 8], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 23, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 13, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 22, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 22, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.achievement_details ,  T2.achievement_type_description FROM Achievements AS T1 JOIN Ref_Achievement_Type AS T2 ON T1.achievement_type_code  =  T2.achievement_type_code", "query_toks": ["SELECT", "T1.achievement_details", ",", "T2.achievement_type_description", "FROM", "Achievements", "AS", "T1", "JOIN", "Ref_Achievement_Type", "AS", "T2", "ON", "T1.achievement_type_code", "=", "T2.achievement_type_code"], "query_toks_no_value": ["select", "t1", ".", "achievement_details", ",", "t2", ".", "achievement_type_description", "from", "achievements", "as", "t1", "join", "ref_achievement_type", "as", "t2", "on", "t1", ".", "achievement_type_code", "=", "t2", ".", "achievement_type_code"], "question": "How are all the achievements described? List the achievement detail and the type description.", "question_toks": ["How", "are", "all", "the", "achievements", "described", "?", "List", "the", "achievement", "detail", "and", "the", "type", "description", "."], "sql": {"from": {"table_units": [["table_unit", 14], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 51, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 54, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.achievement_details ,  T2.achievement_type_description FROM Achievements AS T1 JOIN Ref_Achievement_Type AS T2 ON T1.achievement_type_code  =  T2.achievement_type_code", "query_toks": ["SELECT", "T1.achievement_details", ",", "T2.achievement_type_description", "FROM", "Achievements", "AS", "T1", "JOIN", "Ref_Achievement_Type", "AS", "T2", "ON", "T1.achievement_type_code", "=", "T2.achievement_type_code"], "query_toks_no_value": ["select", "t1", ".", "achievement_details", ",", "t2", ".", "achievement_type_description", "from", "achievements", "as", "t1", "join", "ref_achievement_type", "as", "t2", "on", "t1", ".", "achievement_type_code", "=", "t2", ".", "achievement_type_code"], "question": "What are the achievement detail and the type description of each achievements?", "question_toks": ["What", "are", "the", "achievement", "detail", "and", "the", "type", "description", "of", "each", "achievements", "?"], "sql": {"from": {"table_units": [["table_unit", 14], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 51, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 54, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT count(DISTINCT T1.teacher_id) FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.student_id NOT IN ( SELECT student_id FROM Achievements )", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T1.teacher_id", ")", "FROM", "Teachers", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "WHERE", "T2.student_id", "NOT", "IN", "(", "SELECT", "student_id", "FROM", "Achievements", ")"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "teacher_id", ")", "from", "teachers", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "where", "t2", ".", "student_id", "not", "in", "(", "select", "student_id", "from", "achievements", ")"], "question": "How many teachers have taught a student who has not won any achievements?", "question_toks": ["How", "many", "teachers", "have", "taught", "a", "student", "who", "has", "not", "won", "any", "achievements", "?"], "sql": {"from": {"table_units": [["table_unit", 9], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 35, false], null]]}, "select": [false, [[3, [0, [0, 26, true], null]]]], "where": [[true, 8, [0, [0, 34, false], null], {"from": {"table_units": [["table_unit", 14]], "conds": []}, "select": [false, [[0, [0, [0, 52, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT count(DISTINCT T1.teacher_id) FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.student_id NOT IN ( SELECT student_id FROM Achievements )", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T1.teacher_id", ")", "FROM", "Teachers", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "WHERE", "T2.student_id", "NOT", "IN", "(", "SELECT", "student_id", "FROM", "Achievements", ")"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "teacher_id", ")", "from", "teachers", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "where", "t2", ".", "student_id", "not", "in", "(", "select", "student_id", "from", "achievements", ")"], "question": "Count the number of teachers who have taught students who have never won an achievement.", "question_toks": ["Count", "the", "number", "of", "teachers", "who", "have", "taught", "students", "who", "have", "never", "won", "an", "achievement", "."], "sql": {"from": {"table_units": [["table_unit", 9], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 35, false], null]]}, "select": [false, [[3, [0, [0, 26, true], null]]]], "where": [[true, 8, [0, [0, 34, false], null], {"from": {"table_units": [["table_unit", 14]], "conds": []}, "select": [false, [[0, [0, [0, 52, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT date_of_transcript ,  transcript_details FROM Transcripts", "query_toks": ["SELECT", "date_of_transcript", ",", "transcript_details", "FROM", "Transcripts"], "query_toks_no_value": ["select", "date_of_transcript", ",", "transcript_details", "from", "transcripts"], "question": "List the date of the transcripts and the transcript details.", "question_toks": ["List", "the", "date", "of", "the", "transcripts", "and", "the", "transcript", "details", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT date_of_transcript ,  transcript_details FROM Transcripts", "query_toks": ["SELECT", "date_of_transcript", ",", "transcript_details", "FROM", "Transcripts"], "query_toks_no_value": ["select", "date_of_transcript", ",", "transcript_details", "from", "transcripts"], "question": "What are the date and detail of each transcript?", "question_toks": ["What", "are", "the", "date", "and", "detail", "of", "each", "transcript", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT achievement_type_code ,  achievement_details ,  date_achievement FROM Achievements", "query_toks": ["SELECT", "achievement_type_code", ",", "achievement_details", ",", "date_achievement", "FROM", "Achievements"], "query_toks_no_value": ["select", "achievement_type_code", ",", "achievement_details", ",", "date_achievement", "from", "achievements"], "question": "List the achievement type code, achievement details and the date of the achievements.", "question_toks": ["List", "the", "achievement", "type", "code", ",", "achievement", "details", "and", "the", "date", "of", "the", "achievements", "."], "sql": {"from": {"table_units": [["table_unit", 14]], "conds": []}, "select": [false, [[0, [0, [0, 51, false], null]], [0, [0, [0, 54, false], null]], [0, [0, [0, 53, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT achievement_type_code ,  achievement_details ,  date_achievement FROM Achievements", "query_toks": ["SELECT", "achievement_type_code", ",", "achievement_details", ",", "date_achievement", "FROM", "Achievements"], "query_toks_no_value": ["select", "achievement_type_code", ",", "achievement_details", ",", "date_achievement", "from", "achievements"], "question": "What are the type code, details, and date of each achievement?", "question_toks": ["What", "are", "the", "type", "code", ",", "details", ",", "and", "date", "of", "each", "achievement", "?"], "sql": {"from": {"table_units": [["table_unit", 14]], "conds": []}, "select": [false, [[0, [0, [0, 51, false], null]], [0, [0, [0, 54, false], null]], [0, [0, [0, 53, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT datetime_detention_start ,  datetime_detention_end FROM Detention", "query_toks": ["SELECT", "datetime_detention_start", ",", "datetime_detention_end", "FROM", "Detention"], "query_toks_no_value": ["select", "datetime_detention_start", ",", "datetime_detention_end", "from", "detention"], "question": "Show the detention start time and end time of the detentions.", "question_toks": ["Show", "the", "detention", "start", "time", "and", "end", "time", "of", "the", "detentions", "."], "sql": {"from": {"table_units": [["table_unit", 13]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]], [0, [0, [0, 47, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT datetime_detention_start ,  datetime_detention_end FROM Detention", "query_toks": ["SELECT", "datetime_detention_start", ",", "datetime_detention_end", "FROM", "Detention"], "query_toks_no_value": ["select", "datetime_detention_start", ",", "datetime_detention_end", "from", "detention"], "question": "What are the starting time and ending time of each detention record?", "question_toks": ["What", "are", "the", "starting", "time", "and", "ending", "time", "of", "each", "detention", "record", "?"], "sql": {"from": {"table_units": [["table_unit", 13]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]], [0, [0, [0, 47, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT bio_data FROM Students WHERE student_details LIKE '%Suite%'", "query_toks": ["SELECT", "bio_data", "FROM", "Students", "WHERE", "student_details", "LIKE", "'", "%", "Suite", "%", "'"], "query_toks_no_value": ["select", "bio_data", "from", "students", "where", "student_details", "like", "value"], "question": "Show the biographical information of the students whose details include the substring 'Suite'.", "question_toks": ["Show", "the", "biographical", "information", "of", "the", "students", "whose", "details", "include", "the", "substring", "'Suite", "'", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%Suite%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT bio_data FROM Students WHERE student_details LIKE '%Suite%'", "query_toks": ["SELECT", "bio_data", "FROM", "Students", "WHERE", "student_details", "LIKE", "'", "%", "Suite", "%", "'"], "query_toks_no_value": ["select", "bio_data", "from", "students", "where", "student_details", "like", "value"], "question": "Which students have 'Suite' as a substring in their details? Give me their biographical information.", "question_toks": ["Which", "students", "have", "'Suite", "'", "as", "a", "substring", "in", "their", "details", "?", "Give", "me", "their", "biographical", "information", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%Suite%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.teacher_details ,  T3.student_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id", "query_toks": ["SELECT", "T1.teacher_details", ",", "T3.student_details", "FROM", "Teachers", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "JOIN", "Students", "AS", "T3", "ON", "T2.student_id", "=", "T3.student_id"], "query_toks_no_value": ["select", "t1", ".", "teacher_details", ",", "t3", ".", "student_details", "from", "teachers", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "join", "students", "as", "t3", "on", "t2", ".", "student_id", "=", "t3", ".", "student_id"], "question": "List the details for all the pairs of teachers and students who are in the same class.", "question_toks": ["List", "the", "details", "for", "all", "the", "pairs", "of", "teachers", "and", "students", "who", "are", "in", "the", "same", "class", "."], "sql": {"from": {"table_units": [["table_unit", 9], ["table_unit", 11], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 35, false], null], "and", [false, 2, [0, [0, 34, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.teacher_details ,  T3.student_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id", "query_toks": ["SELECT", "T1.teacher_details", ",", "T3.student_details", "FROM", "Teachers", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "JOIN", "Students", "AS", "T3", "ON", "T2.student_id", "=", "T3.student_id"], "query_toks_no_value": ["select", "t1", ".", "teacher_details", ",", "t3", ".", "student_details", "from", "teachers", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "join", "students", "as", "t3", "on", "t2", ".", "student_id", "=", "t3", ".", "student_id"], "question": "What are the pairs of teachers and students who are in the same class? Give me the pairs of their details.", "question_toks": ["What", "are", "the", "pairs", "of", "teachers", "and", "students", "who", "are", "in", "the", "same", "class", "?", "Give", "me", "the", "pairs", "of", "their", "details", "."], "sql": {"from": {"table_units": [["table_unit", 9], ["table_unit", 11], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 35, false], null], "and", [false, 2, [0, [0, 34, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT count(*) ,  teacher_id FROM Classes GROUP BY teacher_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "teacher_id", "FROM", "Classes", "GROUP", "BY", "teacher_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "teacher_id", "from", "classes", "group", "by", "teacher_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "How many courses do teachers teach at most? Also find the id of the teacher who teaches the most.", "question_toks": ["How", "many", "courses", "do", "teachers", "teach", "at", "most", "?", "Also", "find", "the", "id", "of", "the", "teacher", "who", "teaches", "the", "most", "."], "sql": {"from": {"table_units": [["table_unit", 11]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [[0, 35, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT count(*) ,  teacher_id FROM Classes GROUP BY teacher_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "teacher_id", "FROM", "Classes", "GROUP", "BY", "teacher_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "teacher_id", "from", "classes", "group", "by", "teacher_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which teacher teaches the most courses? Give me the id of the teacher and the number of courses he or she teaches.", "question_toks": ["Which", "teacher", "teaches", "the", "most", "courses", "?", "Give", "me", "the", "id", "of", "the", "teacher", "and", "the", "number", "of", "courses", "he", "or", "she", "teaches", "."], "sql": {"from": {"table_units": [["table_unit", 11]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [[0, 35, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT count(*) ,  student_id FROM Classes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "student_id", "FROM", "Classes", "GROUP", "BY", "student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "student_id", "from", "classes", "group", "by", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "How many courses do students take at most? Also find the id of the student who takes the most courses.", "question_toks": ["How", "many", "courses", "do", "students", "take", "at", "most", "?", "Also", "find", "the", "id", "of", "the", "student", "who", "takes", "the", "most", "courses", "."], "sql": {"from": {"table_units": [["table_unit", 11]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 34, false], null]]]], "where": [], "groupBy": [[0, 34, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT count(*) ,  student_id FROM Classes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "student_id", "FROM", "Classes", "GROUP", "BY", "student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "student_id", "from", "classes", "group", "by", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which student is taking the most courses? Give me the id of the student and the number of courses he or she is taking.", "question_toks": ["Which", "student", "is", "taking", "the", "most", "courses", "?", "Give", "me", "the", "id", "of", "the", "student", "and", "the", "number", "of", "courses", "he", "or", "she", "is", "taking", "."], "sql": {"from": {"table_units": [["table_unit", 11]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 34, false], null]]]], "where": [], "groupBy": [[0, 34, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.student_id ,  T1.student_details FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2", "query_toks": ["SELECT", "T1.student_id", ",", "T1.student_details", "FROM", "Students", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t1", ".", "student_details", "from", "students", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", "=", "value"], "question": "Which students take 2 courses? List student id and details.", "question_toks": ["Which", "students", "take", "2", "courses", "?", "List", "student", "id", "and", "details", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.student_id ,  T1.student_details FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2", "query_toks": ["SELECT", "T1.student_id", ",", "T1.student_details", "FROM", "Students", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t1", ".", "student_details", "from", "students", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", "=", "value"], "question": "What are the ids and details of the students who take 2 courses?", "question_toks": ["What", "are", "the", "ids", "and", "details", "of", "the", "students", "who", "take", "2", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T1.detention_type_code", ",", "T2.detention_type_description", "FROM", "Detention", "AS", "T1", "JOIN", "Ref_Detention_Type", "AS", "T2", "ON", "T1.detention_type_code", "=", "T2.detention_type_code", "GROUP", "BY", "T1.detention_type_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "detention_type_code", ",", "t2", ".", "detention_type_description", "from", "detention", "as", "t1", "join", "ref_detention_type", "as", "t2", "on", "t1", ".", "detention_type_code", "=", "t2", ".", "detention_type_code", "group", "by", "t1", ".", "detention_type_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What is the least common detention type? Show the type code and the description.", "question_toks": ["What", "is", "the", "least", "common", "detention", "type", "?", "Show", "the", "type", "code", "and", "the", "description", "."], "sql": {"from": {"table_units": [["table_unit", 13], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 44, false], null], [0, 19, false], null]]}, "select": [false, [[0, [0, [0, 44, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 44, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T1.detention_type_code", ",", "T2.detention_type_description", "FROM", "Detention", "AS", "T1", "JOIN", "Ref_Detention_Type", "AS", "T2", "ON", "T1.detention_type_code", "=", "T2.detention_type_code", "GROUP", "BY", "T1.detention_type_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "detention_type_code", ",", "t2", ".", "detention_type_description", "from", "detention", "as", "t1", "join", "ref_detention_type", "as", "t2", "on", "t1", ".", "detention_type_code", "=", "t2", ".", "detention_type_code", "group", "by", "t1", ".", "detention_type_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Give me the type code and description of the least common detention type.", "question_toks": ["Give", "me", "the", "type", "code", "and", "description", "of", "the", "least", "common", "detention", "type", "."], "sql": {"from": {"table_units": [["table_unit", 13], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 44, false], null], [0, 19, false], null]]}, "select": [false, [[0, [0, [0, 44, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 44, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id WHERE T2.amount_of_loan  >  ( SELECT avg(amount_of_loan) FROM Student_Loans )", "query_toks": ["SELECT", "T1.bio_data", ",", "T1.student_details", "FROM", "Students", "AS", "T1", "JOIN", "Student_Loans", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.amount_of_loan", ">", "(", "SELECT", "avg", "(", "amount_of_loan", ")", "FROM", "Student_Loans", ")"], "query_toks_no_value": ["select", "t1", ".", "bio_data", ",", "t1", ".", "student_details", "from", "students", "as", "t1", "join", "student_loans", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "amount_of_loan", ">", "(", "select", "avg", "(", "amount_of_loan", ")", "from", "student_loans", ")"], "question": "Which students have a student loan more than the average amount? List the students' biographical data and the details.", "question_toks": ["Which", "students", "have", "a", "student", "loan", "more", "than", "the", "average", "amount", "?", "List", "the", "students", "'", "biographical", "data", "and", "the", "details", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 29, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 31, false], null], {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[5, [0, [0, 31, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id WHERE T2.amount_of_loan  >  ( SELECT avg(amount_of_loan) FROM Student_Loans )", "query_toks": ["SELECT", "T1.bio_data", ",", "T1.student_details", "FROM", "Students", "AS", "T1", "JOIN", "Student_Loans", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.amount_of_loan", ">", "(", "SELECT", "avg", "(", "amount_of_loan", ")", "FROM", "Student_Loans", ")"], "query_toks_no_value": ["select", "t1", ".", "bio_data", ",", "t1", ".", "student_details", "from", "students", "as", "t1", "join", "student_loans", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "amount_of_loan", ">", "(", "select", "avg", "(", "amount_of_loan", ")", "from", "student_loans", ")"], "question": "Find the biographical data and details for students whose student loan is above the average amount.", "question_toks": ["Find", "the", "biographical", "data", "and", "details", "for", "students", "whose", "student", "loan", "is", "above", "the", "average", "amount", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 29, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 31, false], null], {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[5, [0, [0, 31, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT date_of_loan FROM Student_Loans ORDER BY date_of_loan ASC LIMIT 1", "query_toks": ["SELECT", "date_of_loan", "FROM", "Student_Loans", "ORDER", "BY", "date_of_loan", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "date_of_loan", "from", "student_loans", "order", "by", "date_of_loan", "asc", "limit", "value"], "question": "When was the earliest date of loan?", "question_toks": ["When", "was", "the", "earliest", "date", "of", "loan", "?"], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 30, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT date_of_loan FROM Student_Loans ORDER BY date_of_loan ASC LIMIT 1", "query_toks": ["SELECT", "date_of_loan", "FROM", "Student_Loans", "ORDER", "BY", "date_of_loan", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "date_of_loan", "from", "student_loans", "order", "by", "date_of_loan", "asc", "limit", "value"], "question": "Return the earliest date of loan in the record.", "question_toks": ["Return", "the", "earliest", "date", "of", "loan", "in", "the", "record", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 30, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan ASC LIMIT 1", "query_toks": ["SELECT", "T1.bio_data", "FROM", "Students", "AS", "T1", "JOIN", "Student_Loans", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "ORDER", "BY", "T2.amount_of_loan", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "bio_data", "from", "students", "as", "t1", "join", "student_loans", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "order", "by", "t2", ".", "amount_of_loan", "asc", "limit", "value"], "question": "Which student has the loan with the minimum value? List the student's biographical information.", "question_toks": ["Which", "student", "has", "the", "loan", "with", "the", "minimum", "value", "?", "List", "the", "student", "'s", "biographical", "information", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 29, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 31, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan ASC LIMIT 1", "query_toks": ["SELECT", "T1.bio_data", "FROM", "Students", "AS", "T1", "JOIN", "Student_Loans", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "ORDER", "BY", "T2.amount_of_loan", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "bio_data", "from", "students", "as", "t1", "join", "student_loans", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "order", "by", "t2", ".", "amount_of_loan", "asc", "limit", "value"], "question": "Find the biographical information of the student with the smallest student loan.", "question_toks": ["Find", "the", "biographical", "information", "of", "the", "student", "with", "the", "smallest", "student", "loan", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 29, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 31, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.date_of_transcript FROM Transcripts AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan DESC LIMIT 1", "query_toks": ["SELECT", "T1.date_of_transcript", "FROM", "Transcripts", "AS", "T1", "JOIN", "Student_Loans", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "ORDER", "BY", "T2.amount_of_loan", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "date_of_transcript", "from", "transcripts", "as", "t1", "join", "student_loans", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "order", "by", "t2", ".", "amount_of_loan", "desc", "limit", "value"], "question": "When was the transcript issued for the student with loan of maximum value?", "question_toks": ["When", "was", "the", "transcript", "issued", "for", "the", "student", "with", "loan", "of", "maximum", "value", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 29, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 31, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.date_of_transcript FROM Transcripts AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan DESC LIMIT 1", "query_toks": ["SELECT", "T1.date_of_transcript", "FROM", "Transcripts", "AS", "T1", "JOIN", "Student_Loans", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "ORDER", "BY", "T2.amount_of_loan", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "date_of_transcript", "from", "transcripts", "as", "t1", "join", "student_loans", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "order", "by", "t2", ".", "amount_of_loan", "desc", "limit", "value"], "question": "What is the transcript issuance date for the student with the largest amount of loan?", "question_toks": ["What", "is", "the", "transcript", "issuance", "date", "for", "the", "student", "with", "the", "largest", "amount", "of", "loan", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 29, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 31, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Transcripts AS T3 ON T2.student_id  =  T3.student_id ORDER BY T3.date_of_transcript ASC LIMIT 1", "query_toks": ["SELECT", "T1.teacher_details", "FROM", "Teachers", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "JOIN", "Transcripts", "AS", "T3", "ON", "T2.student_id", "=", "T3.student_id", "ORDER", "BY", "T3.date_of_transcript", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "teacher_details", "from", "teachers", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "join", "transcripts", "as", "t3", "on", "t2", ".", "student_id", "=", "t3", ".", "student_id", "order", "by", "t3", ".", "date_of_transcript", "asc", "limit", "value"], "question": "Which teachers have taught the student with the earliest transcript issuance? List the teacher details.", "question_toks": ["Which", "teachers", "have", "taught", "the", "student", "with", "the", "earliest", "transcript", "issuance", "?", "List", "the", "teacher", "details", "."], "sql": {"from": {"table_units": [["table_unit", 9], ["table_unit", 11], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 35, false], null], "and", [false, 2, [0, [0, 34, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Transcripts AS T3 ON T2.student_id  =  T3.student_id ORDER BY T3.date_of_transcript ASC LIMIT 1", "query_toks": ["SELECT", "T1.teacher_details", "FROM", "Teachers", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "JOIN", "Transcripts", "AS", "T3", "ON", "T2.student_id", "=", "T3.student_id", "ORDER", "BY", "T3.date_of_transcript", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "teacher_details", "from", "teachers", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "join", "transcripts", "as", "t3", "on", "t2", ".", "student_id", "=", "t3", ".", "student_id", "order", "by", "t3", ".", "date_of_transcript", "asc", "limit", "value"], "question": "Find the details of the teachers who have taught the student with the earliest transcript issuance.", "question_toks": ["Find", "the", "details", "of", "the", "teachers", "who", "have", "taught", "the", "student", "with", "the", "earliest", "transcript", "issuance", "."], "sql": {"from": {"table_units": [["table_unit", 9], ["table_unit", 11], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 35, false], null], "and", [false, 2, [0, [0, 34, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "select student_id ,  sum(amount_of_loan) from student_loans group by student_id", "query_toks": ["select", "student_id", ",", "sum", "(", "amount_of_loan", ")", "from", "student_loans", "group", "by", "student_id"], "query_toks_no_value": ["select", "student_id", ",", "sum", "(", "amount_of_loan", ")", "from", "student_loans", "group", "by", "student_id"], "question": "How much total loan does each student have ? List the student ids and the amounts .", "question_toks": ["How", "much", "total", "loan", "does", "each", "student", "have", "?", "List", "the", "student", "ids", "and", "the", "amounts", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]], [4, [0, [0, 31, false], null]]]], "where": [], "groupBy": [[0, 29, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT student_id ,  sum(amount_of_loan) FROM Student_Loans GROUP BY student_id", "query_toks": ["SELECT", "student_id", ",", "sum", "(", "amount_of_loan", ")", "FROM", "Student_Loans", "GROUP", "BY", "student_id"], "query_toks_no_value": ["select", "student_id", ",", "sum", "(", "amount_of_loan", ")", "from", "student_loans", "group", "by", "student_id"], "question": "For each student, find the student id and the total amount of loan he or she has.", "question_toks": ["For", "each", "student", ",", "find", "the", "student", "id", "and", "the", "total", "amount", "of", "loan", "he", "or", "she", "has", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]], [4, [0, [0, 31, false], null]]]], "where": [], "groupBy": [[0, 29, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.student_id ,  T1.bio_data ,  count(*) FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id", "query_toks": ["SELECT", "T1.student_id", ",", "T1.bio_data", ",", "count", "(", "*", ")", "FROM", "Students", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t1", ".", "bio_data", ",", "count", "(", "*", ")", "from", "students", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id"], "question": "How many courses does each student take? List the student id, the student biographical data and the course count.", "question_toks": ["How", "many", "courses", "does", "each", "student", "take", "?", "List", "the", "student", "id", ",", "the", "student", "biographical", "data", "and", "the", "course", "count", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.student_id ,  T1.bio_data ,  count(*) FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id", "query_toks": ["SELECT", "T1.student_id", ",", "T1.bio_data", ",", "count", "(", "*", ")", "FROM", "Students", "AS", "T1", "JOIN", "Classes", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t1", ".", "bio_data", ",", "count", "(", "*", ")", "from", "students", "as", "t1", "join", "classes", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id"], "question": "For each student, find the student id, student biographical data, and the number of courses he or she takes.", "question_toks": ["For", "each", "student", ",", "find", "the", "student", "id", ",", "student", "biographical", "data", ",", "and", "the", "number", "of", "courses", "he", "or", "she", "takes", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT count(DISTINCT student_id) FROM Detention", "query_toks": ["SELECT", "count", "(", "DISTINCT", "student_id", ")", "FROM", "Detention"], "query_toks_no_value": ["select", "count", "(", "distinct", "student_id", ")", "from", "detention"], "question": "How many students have gone through a detention?", "question_toks": ["How", "many", "students", "have", "gone", "through", "a", "detention", "?"], "sql": {"from": {"table_units": [["table_unit", 13]], "conds": []}, "select": [false, [[3, [0, [0, 45, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT count(DISTINCT student_id) FROM Detention", "query_toks": ["SELECT", "count", "(", "DISTINCT", "student_id", ")", "FROM", "Detention"], "query_toks_no_value": ["select", "count", "(", "distinct", "student_id", ")", "from", "detention"], "question": "Count the number of students who have a detention record.", "question_toks": ["Count", "the", "number", "of", "students", "who", "have", "a", "detention", "record", "."], "sql": {"from": {"table_units": [["table_unit", 13]], "conds": []}, "select": [false, [[3, [0, [0, 45, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.address_type_code ,  T2.address_type_description FROM Students_Addresses AS T1 JOIN Ref_Address_Types AS T2 WHERE T1.address_type_code  =  T2.address_type_code GROUP BY T1.address_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.address_type_code", ",", "T2.address_type_description", "FROM", "Students_Addresses", "AS", "T1", "JOIN", "Ref_Address_Types", "AS", "T2", "WHERE", "T1.address_type_code", "=", "T2.address_type_code", "GROUP", "BY", "T1.address_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "address_type_code", ",", "t2", ".", "address_type_description", "from", "students_addresses", "as", "t1", "join", "ref_address_types", "as", "t2", "where", "t1", ".", "address_type_code", "=", "t2", ".", "address_type_code", "group", "by", "t1", ".", "address_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the code and description of the most common student address type?", "question_toks": ["What", "is", "the", "code", "and", "description", "of", "the", "most", "common", "student", "address", "type", "?"], "sql": {"from": {"table_units": [["table_unit", 12], ["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 39, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 39, false], null], [0, 17, false], null]], "groupBy": [[0, 39, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.address_type_code ,  T2.address_type_description FROM Students_Addresses AS T1 JOIN Ref_Address_Types AS T2 WHERE T1.address_type_code  =  T2.address_type_code GROUP BY T1.address_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.address_type_code", ",", "T2.address_type_description", "FROM", "Students_Addresses", "AS", "T1", "JOIN", "Ref_Address_Types", "AS", "T2", "WHERE", "T1.address_type_code", "=", "T2.address_type_code", "GROUP", "BY", "T1.address_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "address_type_code", ",", "t2", ".", "address_type_description", "from", "students_addresses", "as", "t1", "join", "ref_address_types", "as", "t2", "where", "t1", ".", "address_type_code", "=", "t2", ".", "address_type_code", "group", "by", "t1", ".", "address_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most common student address type? Give me the code and description of the address type.", "question_toks": ["What", "is", "the", "most", "common", "student", "address", "type", "?", "Give", "me", "the", "code", "and", "description", "of", "the", "address", "type", "."], "sql": {"from": {"table_units": [["table_unit", 12], ["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 39, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 39, false], null], [0, 17, false], null]], "groupBy": [[0, 39, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Events AS T2 WHERE T1.student_id  =  T2.student_id EXCEPT SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 WHERE T1.student_id  =  T2.student_id", "query_toks": ["SELECT", "T1.bio_data", "FROM", "Students", "AS", "T1", "JOIN", "Student_Events", "AS", "T2", "WHERE", "T1.student_id", "=", "T2.student_id", "EXCEPT", "SELECT", "T1.bio_data", "FROM", "Students", "AS", "T1", "JOIN", "Student_Loans", "AS", "T2", "WHERE", "T1.student_id", "=", "T2.student_id"], "query_toks_no_value": ["select", "t1", ".", "bio_data", "from", "students", "as", "t1", "join", "student_events", "as", "t2", "where", "t1", ".", "student_id", "=", "t2", ".", "student_id", "except", "select", "t1", ".", "bio_data", "from", "students", "as", "t1", "join", "student_loans", "as", "t2", "where", "t1", ".", "student_id", "=", "t2", ".", "student_id"], "question": "For those students who have gone through an event, who do not have a student loan? List the students' biographical data", "question_toks": ["For", "those", "students", "who", "have", "gone", "through", "an", "event", ",", "who", "do", "not", "have", "a", "student", "loan", "?", "List", "the", "students", "'", "biographical", "data"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], [0, 29, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], [0, 29, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Events AS T2 WHERE T1.student_id  =  T2.student_id EXCEPT SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 WHERE T1.student_id  =  T2.student_id", "query_toks": ["SELECT", "T1.bio_data", "FROM", "Students", "AS", "T1", "JOIN", "Student_Events", "AS", "T2", "WHERE", "T1.student_id", "=", "T2.student_id", "EXCEPT", "SELECT", "T1.bio_data", "FROM", "Students", "AS", "T1", "JOIN", "Student_Loans", "AS", "T2", "WHERE", "T1.student_id", "=", "T2.student_id"], "query_toks_no_value": ["select", "t1", ".", "bio_data", "from", "students", "as", "t1", "join", "student_events", "as", "t2", "where", "t1", ".", "student_id", "=", "t2", ".", "student_id", "except", "select", "t1", ".", "bio_data", "from", "students", "as", "t1", "join", "student_loans", "as", "t2", "where", "t1", ".", "student_id", "=", "t2", ".", "student_id"], "question": "Among the students who have an event record, who do not have a student loan? Return the students' biographical data.", "question_toks": ["Among", "the", "students", "who", "have", "an", "event", "record", ",", "who", "do", "not", "have", "a", "student", "loan", "?", "Return", "the", "students", "'", "biographical", "data", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], [0, 29, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], [0, 29, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT date_from ,  date_to FROM Students_Addresses WHERE student_id IN ( SELECT student_id FROM Transcripts GROUP BY student_id HAVING count(*)  =  2 )", "query_toks": ["SELECT", "date_from", ",", "date_to", "FROM", "Students_Addresses", "WHERE", "student_id", "IN", "(", "SELECT", "student_id", "FROM", "Transcripts", "GROUP", "BY", "student_id", "HAVING", "count", "(", "*", ")", "=", "2", ")"], "query_toks_no_value": ["select", "date_from", ",", "date_to", "from", "students_addresses", "where", "student_id", "in", "(", "select", "student_id", "from", "transcripts", "group", "by", "student_id", "having", "count", "(", "*", ")", "=", "value", ")"], "question": "List the start time and the end time of the students' addresses for the students who have 2 transcripts.", "question_toks": ["List", "the", "start", "time", "and", "the", "end", "time", "of", "the", "students", "'", "addresses", "for", "the", "students", "who", "have", "2", "transcripts", "."], "sql": {"from": {"table_units": [["table_unit", 12]], "conds": []}, "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 42, false], null]]]], "where": [[false, 8, [0, [0, 40, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT date_from ,  date_to FROM Students_Addresses WHERE student_id IN ( SELECT student_id FROM Transcripts GROUP BY student_id HAVING count(*)  =  2 )", "query_toks": ["SELECT", "date_from", ",", "date_to", "FROM", "Students_Addresses", "WHERE", "student_id", "IN", "(", "SELECT", "student_id", "FROM", "Transcripts", "GROUP", "BY", "student_id", "HAVING", "count", "(", "*", ")", "=", "2", ")"], "query_toks_no_value": ["select", "date_from", ",", "date_to", "from", "students_addresses", "where", "student_id", "in", "(", "select", "student_id", "from", "transcripts", "group", "by", "student_id", "having", "count", "(", "*", ")", "=", "value", ")"], "question": "What are the start time and end time of addresses for the students who receive 2 transcripts?", "question_toks": ["What", "are", "the", "start", "time", "and", "end", "time", "of", "addresses", "for", "the", "students", "who", "receive", "2", "transcripts", "?"], "sql": {"from": {"table_units": [["table_unit", 12]], "conds": []}, "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 42, false], null]]]], "where": [[false, 8, [0, [0, 40, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT datetime_detention_start FROM Detention", "query_toks": ["SELECT", "datetime_detention_start", "FROM", "Detention"], "query_toks_no_value": ["select", "datetime_detention_start", "from", "detention"], "question": "When did all the detentions start?", "question_toks": ["When", "did", "all", "the", "detentions", "start", "?"], "sql": {"from": {"table_units": [["table_unit", 13]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "cre_Students_Information_Systems", "query": "SELECT datetime_detention_start FROM Detention", "query_toks": ["SELECT", "datetime_detention_start", "FROM", "Detention"], "query_toks_no_value": ["select", "datetime_detention_start", "from", "detention"], "question": "Give me the detention start date for all the detention records.", "question_toks": ["Give", "me", "the", "detention", "start", "date", "for", "all", "the", "detention", "records", "."], "sql": {"from": {"table_units": [["table_unit", 13]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Students", "schema": ["student_id:number", "bio_data:text", "student_details:text"]}, {"name": "Transcripts", "schema": ["transcript_id:number", "student_id:number", "date_of_transcript:time", "transcript_details:text"]}, {"name": "Behaviour_Monitoring", "schema": ["behaviour_monitoring_id:number", "student_id:number", "behaviour_monitoring_details:text"]}, {"name": "Addresses", "schema": ["address_id:number", "address_details:text"]}, {"name": "Ref_Event_Types", "schema": ["event_type_code:text", "event_type_description:text"]}, {"name": "Ref_Achievement_Type", "schema": ["achievement_type_code:text", "achievement_type_description:text"]}, {"name": "Ref_Address_Types", "schema": ["address_type_code:text", "address_type_description:text"]}, {"name": "Ref_Detention_Type", "schema": ["detention_type_code:text", "detention_type_description:text"]}, {"name": "Student_Events", "schema": ["event_id:number", "event_type_code:text", "student_id:number", "event_date:time", "other_details:text"]}, {"name": "Teachers", "schema": ["teacher_id:number", "teacher_details:text"]}, {"name": "Student_Loans", "schema": ["student_loan_id:number", "student_id:number", "date_of_loan:time", "amount_of_loan:number", "other_details:text"]}, {"name": "Classes", "schema": ["class_id:number", "student_id:number", "teacher_id:number", "class_details:text"]}, {"name": "Students_Addresses", "schema": ["student_address_id:number", "address_id:number", "address_type_code:text", "student_id:number", "date_from:time", "date_to:time"]}, {"name": "Detention", "schema": ["detention_id:number", "detention_type_code:text", "student_id:number", "datetime_detention_start:time", "datetime_detention_end:time", "detention_summary:text", "other_details:text"]}, {"name": "Achievements", "schema": ["achievement_id:number", "achievement_type_code:text", "student_id:number", "date_achievement:time", "achievement_details:text", "other_details:text"]}]}
{"db_id": "book_1", "query": "SELECT name FROM Author", "query_toks": ["SELECT", "name", "FROM", "Author"], "query_toks_no_value": ["select", "name", "from", "author"], "question": "List all the author names.", "question_toks": ["List", "all", "the", "author", "names", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT name FROM Author", "query_toks": ["SELECT", "name", "FROM", "Author"], "query_toks_no_value": ["select", "name", "from", "author"], "question": "What are the names of all the authors?", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "authors", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT name ,  address FROM Client", "query_toks": ["SELECT", "name", ",", "address", "FROM", "Client"], "query_toks_no_value": ["select", "name", ",", "address", "from", "client"], "question": "Show all Client names and their addresses.", "question_toks": ["Show", "all", "Client", "names", "and", "their", "addresses", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT name ,  address FROM Client", "query_toks": ["SELECT", "name", ",", "address", "FROM", "Client"], "query_toks_no_value": ["select", "name", ",", "address", "from", "client"], "question": "What are the names and addressed of all clients?", "question_toks": ["What", "are", "the", "names", "and", "addressed", "of", "all", "clients", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT title ,  isbn ,  SalePrice FROM Book", "query_toks": ["SELECT", "title", ",", "isbn", ",", "SalePrice", "FROM", "Book"], "query_toks_no_value": ["select", "title", ",", "isbn", ",", "saleprice", "from", "book"], "question": "List all Book titles, ISBNs, and sale prices.", "question_toks": ["List", "all", "Book", "titles", ",", "ISBNs", ",", "and", "sale", "prices", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT title ,  isbn ,  SalePrice FROM Book", "query_toks": ["SELECT", "title", ",", "isbn", ",", "SalePrice", "FROM", "Book"], "query_toks_no_value": ["select", "title", ",", "isbn", ",", "saleprice", "from", "book"], "question": "What are the titles, ISBNs, and sale prices for all books?", "question_toks": ["What", "are", "the", "titles", ",", "ISBNs", ",", "and", "sale", "prices", "for", "all", "books", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT count(*) FROM Book", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Book"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "book"], "question": "How many books do we have?", "question_toks": ["How", "many", "books", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT count(*) FROM Book", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Book"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "book"], "question": "Count the number of books.", "question_toks": ["Count", "the", "number", "of", "books", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT count(*) FROM Author", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Author"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "author"], "question": "How many authors are there?", "question_toks": ["How", "many", "authors", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT count(*) FROM Author", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Author"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "author"], "question": "Count the number of authors.", "question_toks": ["Count", "the", "number", "of", "authors", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT count(*) FROM Client", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Client"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "client"], "question": "How many clients are there?", "question_toks": ["How", "many", "clients", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT count(*) FROM Client", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Client"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "client"], "question": "Return the number of clients.", "question_toks": ["Return", "the", "number", "of", "clients", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT name ,  address FROM Client ORDER BY name", "query_toks": ["SELECT", "name", ",", "address", "FROM", "Client", "ORDER", "BY", "name"], "query_toks_no_value": ["select", "name", ",", "address", "from", "client", "order", "by", "name"], "question": "List names and addresses of all clients in alphabetical order by their names.", "question_toks": ["List", "names", "and", "addresses", "of", "all", "clients", "in", "alphabetical", "order", "by", "their", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 2, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT name ,  address FROM Client ORDER BY name", "query_toks": ["SELECT", "name", ",", "address", "FROM", "Client", "ORDER", "BY", "name"], "query_toks_no_value": ["select", "name", ",", "address", "from", "client", "order", "by", "name"], "question": "What are the names and addressed of all clients, ordered alphabetically by name?", "question_toks": ["What", "are", "the", "names", "and", "addressed", "of", "all", "clients", ",", "ordered", "alphabetically", "by", "name", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 2, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T3.title ,  T1.name FROM Author AS T1 JOIN Author_Book AS T2 ON T2.Author  =  T1.idAuthor JOIN Book AS T3 ON T2.isbn  =  T3.isbn", "query_toks": ["SELECT", "T3.title", ",", "T1.name", "FROM", "Author", "AS", "T1", "JOIN", "Author_Book", "AS", "T2", "ON", "T2.Author", "=", "T1.idAuthor", "JOIN", "Book", "AS", "T3", "ON", "T2.isbn", "=", "T3.isbn"], "query_toks_no_value": ["select", "t3", ".", "title", ",", "t1", ".", "name", "from", "author", "as", "t1", "join", "author_book", "as", "t2", "on", "t2", ".", "author", "=", "t1", ".", "idauthor", "join", "book", "as", "t3", "on", "t2", ".", "isbn", "=", "t3", ".", "isbn"], "question": "Show all book titles and corresponding author names.", "question_toks": ["Show", "all", "book", "titles", "and", "corresponding", "author", "names", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T3.title ,  T1.name FROM Author AS T1 JOIN Author_Book AS T2 ON T2.Author  =  T1.idAuthor JOIN Book AS T3 ON T2.isbn  =  T3.isbn", "query_toks": ["SELECT", "T3.title", ",", "T1.name", "FROM", "Author", "AS", "T1", "JOIN", "Author_Book", "AS", "T2", "ON", "T2.Author", "=", "T1.idAuthor", "JOIN", "Book", "AS", "T3", "ON", "T2.isbn", "=", "T3.isbn"], "query_toks_no_value": ["select", "t3", ".", "title", ",", "t1", ".", "name", "from", "author", "as", "t1", "join", "author_book", "as", "t2", "on", "t2", ".", "author", "=", "t1", ".", "idauthor", "join", "book", "as", "t3", "on", "t2", ".", "isbn", "=", "t3", ".", "isbn"], "question": "What are the names of all books and their corresponding authors?", "question_toks": ["What", "are", "the", "names", "of", "all", "books", "and", "their", "corresponding", "authors", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T1.idOrder ,  T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient", "query_toks": ["SELECT", "T1.idOrder", ",", "T2.name", "FROM", "Orders", "AS", "T1", "JOIN", "Client", "AS", "T2", "ON", "T1.idClient", "=", "T2.idClient"], "query_toks_no_value": ["select", "t1", ".", "idorder", ",", "t2", ".", "name", "from", "orders", "as", "t1", "join", "client", "as", "t2", "on", "t1", ".", "idclient", "=", "t2", ".", "idclient"], "question": "Show all order ids and their client names.", "question_toks": ["Show", "all", "order", "ids", "and", "their", "client", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T1.idOrder ,  T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient", "query_toks": ["SELECT", "T1.idOrder", ",", "T2.name", "FROM", "Orders", "AS", "T1", "JOIN", "Client", "AS", "T2", "ON", "T1.idClient", "=", "T2.idClient"], "query_toks_no_value": ["select", "t1", ".", "idorder", ",", "t2", ".", "name", "from", "orders", "as", "t1", "join", "client", "as", "t2", "on", "t1", ".", "idclient", "=", "t2", ".", "idclient"], "question": "What are the ids of all orders and the corresponding client names?", "question_toks": ["What", "are", "the", "ids", "of", "all", "orders", "and", "the", "corresponding", "client", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor  =  T2.Author GROUP BY T1.idAuthor", "query_toks": ["SELECT", "T1.name", ",", "count", "(", "*", ")", "FROM", "Author", "AS", "T1", "JOIN", "Author_Book", "AS", "T2", "ON", "T1.idAuthor", "=", "T2.Author", "GROUP", "BY", "T1.idAuthor"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "author", "as", "t1", "join", "author_book", "as", "t2", "on", "t1", ".", "idauthor", "=", "t2", ".", "author", "group", "by", "t1", ".", "idauthor"], "question": "Show all author names and the numbers of books each has written.", "question_toks": ["Show", "all", "author", "names", "and", "the", "numbers", "of", "books", "each", "has", "written", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor  =  T2.Author GROUP BY T1.idAuthor", "query_toks": ["SELECT", "T1.name", ",", "count", "(", "*", ")", "FROM", "Author", "AS", "T1", "JOIN", "Author_Book", "AS", "T2", "ON", "T1.idAuthor", "=", "T2.Author", "GROUP", "BY", "T1.idAuthor"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "author", "as", "t1", "join", "author_book", "as", "t2", "on", "t1", ".", "idauthor", "=", "t2", ".", "author", "group", "by", "t1", ".", "idauthor"], "question": "What are the names of all the authors, and how many books has each written?", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "authors", ",", "and", "how", "many", "books", "has", "each", "written", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT isbn ,  count(*) FROM Books_Order GROUP BY isbn", "query_toks": ["SELECT", "isbn", ",", "count", "(", "*", ")", "FROM", "Books_Order", "GROUP", "BY", "isbn"], "query_toks_no_value": ["select", "isbn", ",", "count", "(", "*", ")", "from", "books_order", "group", "by", "isbn"], "question": "Show all book isbns and the numbers of orders for each.", "question_toks": ["Show", "all", "book", "isbns", "and", "the", "numbers", "of", "orders", "for", "each", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT isbn ,  count(*) FROM Books_Order GROUP BY isbn", "query_toks": ["SELECT", "isbn", ",", "count", "(", "*", ")", "FROM", "Books_Order", "GROUP", "BY", "isbn"], "query_toks_no_value": ["select", "isbn", ",", "count", "(", "*", ")", "from", "books_order", "group", "by", "isbn"], "question": "What are all isbns for each book, and how many times has each been ordered?", "question_toks": ["What", "are", "all", "isbns", "for", "each", "book", ",", "and", "how", "many", "times", "has", "each", "been", "ordered", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT isbn ,  sum(amount) FROM Books_Order GROUP BY isbn", "query_toks": ["SELECT", "isbn", ",", "sum", "(", "amount", ")", "FROM", "Books_Order", "GROUP", "BY", "isbn"], "query_toks_no_value": ["select", "isbn", ",", "sum", "(", "amount", ")", "from", "books_order", "group", "by", "isbn"], "question": "Show all book isbns and the total amount ordered for each.", "question_toks": ["Show", "all", "book", "isbns", "and", "the", "total", "amount", "ordered", "for", "each", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]], [4, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT isbn ,  sum(amount) FROM Books_Order GROUP BY isbn", "query_toks": ["SELECT", "isbn", ",", "sum", "(", "amount", ")", "FROM", "Books_Order", "GROUP", "BY", "isbn"], "query_toks_no_value": ["select", "isbn", ",", "sum", "(", "amount", ")", "from", "books_order", "group", "by", "isbn"], "question": "What are the isbns for all books, and what is the total amount ordered for each?", "question_toks": ["What", "are", "the", "isbns", "for", "all", "books", ",", "and", "what", "is", "the", "total", "amount", "ordered", "for", "each", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]], [4, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T2.title FROM Books_Order AS T1 JOIN Book AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.title", "FROM", "Books_Order", "AS", "T1", "JOIN", "Book", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "GROUP", "BY", "T1.isbn", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "title", "from", "books_order", "as", "t1", "join", "book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "group", "by", "t1", ".", "isbn", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the book title corresponding to the book with the most number of orders.", "question_toks": ["Show", "the", "book", "title", "corresponding", "to", "the", "book", "with", "the", "most", "number", "of", "orders", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T2.title FROM Books_Order AS T1 JOIN Book AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.title", "FROM", "Books_Order", "AS", "T1", "JOIN", "Book", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "GROUP", "BY", "T1.isbn", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "title", "from", "books_order", "as", "t1", "join", "book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "group", "by", "t1", ".", "isbn", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the title of the book that has been ordered the greatest number of times?", "question_toks": ["What", "is", "the", "title", "of", "the", "book", "that", "has", "been", "ordered", "the", "greatest", "number", "of", "times", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T2.title ,  T2.PurchasePrice FROM Books_Order AS T1 JOIN BOOk AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY sum(amount) DESC LIMIT 1", "query_toks": ["SELECT", "T2.title", ",", "T2.PurchasePrice", "FROM", "Books_Order", "AS", "T1", "JOIN", "BOOk", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "GROUP", "BY", "T1.isbn", "ORDER", "BY", "sum", "(", "amount", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t2", ".", "purchaseprice", "from", "books_order", "as", "t1", "join", "book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "group", "by", "t1", ".", "isbn", "order", "by", "sum", "(", "amount", ")", "desc", "limit", "value"], "question": "Show the book title and purchase price of the book that has had the greatest amount in orders.", "question_toks": ["Show", "the", "book", "title", "and", "purchase", "price", "of", "the", "book", "that", "has", "had", "the", "greatest", "amount", "in", "orders", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["desc", [[0, [4, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T2.title ,  T2.PurchasePrice FROM Books_Order AS T1 JOIN BOOk AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY sum(amount) DESC LIMIT 1", "query_toks": ["SELECT", "T2.title", ",", "T2.PurchasePrice", "FROM", "Books_Order", "AS", "T1", "JOIN", "BOOk", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "GROUP", "BY", "T1.isbn", "ORDER", "BY", "sum", "(", "amount", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t2", ".", "purchaseprice", "from", "books_order", "as", "t1", "join", "book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "group", "by", "t1", ".", "isbn", "order", "by", "sum", "(", "amount", ")", "desc", "limit", "value"], "question": "What is the title and purchase price of the book that has the highest total order amount?", "question_toks": ["What", "is", "the", "title", "and", "purchase", "price", "of", "the", "book", "that", "has", "the", "highest", "total", "order", "amount", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["desc", [[0, [4, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT DISTINCT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn", "query_toks": ["SELECT", "DISTINCT", "T1.title", "FROM", "book", "AS", "T1", "JOIN", "books_order", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn"], "query_toks_no_value": ["select", "distinct", "t1", ".", "title", "from", "book", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn"], "question": "Show the titles of books that have been ordered.", "question_toks": ["Show", "the", "titles", "of", "books", "that", "have", "been", "ordered", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 18, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT DISTINCT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn", "query_toks": ["SELECT", "DISTINCT", "T1.title", "FROM", "book", "AS", "T1", "JOIN", "books_order", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn"], "query_toks_no_value": ["select", "distinct", "t1", ".", "title", "from", "book", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn"], "question": "What are the different titles of books that have been ordered in the past?", "question_toks": ["What", "are", "the", "different", "titles", "of", "books", "that", "have", "been", "ordered", "in", "the", "past", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 18, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT DISTINCT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "Client", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.idClient", "=", "T2.idClient"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "client", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "idclient", "=", "t2", ".", "idclient"], "question": "Show the names of clients who have ordered at least once.", "question_toks": ["Show", "the", "names", "of", "clients", "who", "have", "ordered", "at", "least", "once", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT DISTINCT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "Client", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.idClient", "=", "T2.idClient"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "client", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "idclient", "=", "t2", ".", "idclient"], "question": "What are the names of the different clients who have made an order?", "question_toks": ["What", "are", "the", "names", "of", "the", "different", "clients", "who", "have", "made", "an", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T2.name ,  count(*) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Orders", "AS", "T1", "JOIN", "Client", "AS", "T2", "ON", "T1.idClient", "=", "T2.idClient", "GROUP", "BY", "T1.idClient"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "orders", "as", "t1", "join", "client", "as", "t2", "on", "t1", ".", "idclient", "=", "t2", ".", "idclient", "group", "by", "t1", ".", "idclient"], "question": "Show all client names and the number of orders each has made.", "question_toks": ["Show", "all", "client", "names", "and", "the", "number", "of", "orders", "each", "has", "made", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T2.name ,  count(*) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Orders", "AS", "T1", "JOIN", "Client", "AS", "T2", "ON", "T1.idClient", "=", "T2.idClient", "GROUP", "BY", "T1.idClient"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "orders", "as", "t1", "join", "client", "as", "t2", "on", "t1", ".", "idclient", "=", "t2", ".", "idclient", "group", "by", "t1", ".", "idclient"], "question": "What are the names of all the clients, and how many times has each of them ordered?", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "clients", ",", "and", "how", "many", "times", "has", "each", "of", "them", "ordered", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Orders", "AS", "T1", "JOIN", "Client", "AS", "T2", "ON", "T1.idClient", "=", "T2.idClient", "GROUP", "BY", "T1.idClient", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "orders", "as", "t1", "join", "client", "as", "t2", "on", "t1", ".", "idclient", "=", "t2", ".", "idclient", "group", "by", "t1", ".", "idclient", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the client with the most number of orders?", "question_toks": ["What", "is", "the", "name", "of", "the", "client", "with", "the", "most", "number", "of", "orders", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Orders", "AS", "T1", "JOIN", "Client", "AS", "T2", "ON", "T1.idClient", "=", "T2.idClient", "GROUP", "BY", "T1.idClient", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "orders", "as", "t1", "join", "client", "as", "t2", "on", "t1", ".", "idclient", "=", "t2", ".", "idclient", "group", "by", "t1", ".", "idclient", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give the name of the client who has made the most orders.", "question_toks": ["Give", "the", "name", "of", "the", "client", "who", "has", "made", "the", "most", "orders", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T2.name ,  sum(T3.amount) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient", "query_toks": ["SELECT", "T2.name", ",", "sum", "(", "T3.amount", ")", "FROM", "Orders", "AS", "T1", "JOIN", "Client", "AS", "T2", "ON", "T1.idClient", "=", "T2.idClient", "JOIN", "Books_Order", "AS", "T3", "ON", "T3.idOrder", "=", "T1.idOrder", "GROUP", "BY", "T1.idClient"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "sum", "(", "t3", ".", "amount", ")", "from", "orders", "as", "t1", "join", "client", "as", "t2", "on", "t1", ".", "idclient", "=", "t2", ".", "idclient", "join", "books_order", "as", "t3", "on", "t3", ".", "idorder", "=", "t1", ".", "idorder", "group", "by", "t1", ".", "idclient"], "question": "Show the client names and their total amounts of books ordered.", "question_toks": ["Show", "the", "client", "names", "and", "their", "total", "amounts", "of", "books", "ordered", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T2.name ,  sum(T3.amount) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient", "query_toks": ["SELECT", "T2.name", ",", "sum", "(", "T3.amount", ")", "FROM", "Orders", "AS", "T1", "JOIN", "Client", "AS", "T2", "ON", "T1.idClient", "=", "T2.idClient", "JOIN", "Books_Order", "AS", "T3", "ON", "T3.idOrder", "=", "T1.idOrder", "GROUP", "BY", "T1.idClient"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "sum", "(", "t3", ".", "amount", ")", "from", "orders", "as", "t1", "join", "client", "as", "t2", "on", "t1", ".", "idclient", "=", "t2", ".", "idclient", "join", "books_order", "as", "t3", "on", "t3", ".", "idorder", "=", "t1", ".", "idorder", "group", "by", "t1", ".", "idclient"], "question": "What are the names of all the clients, and the total amount of books ordered by each?", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "clients", ",", "and", "the", "total", "amount", "of", "books", "ordered", "by", "each", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient ORDER BY sum(T3.amount) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Orders", "AS", "T1", "JOIN", "Client", "AS", "T2", "ON", "T1.idClient", "=", "T2.idClient", "JOIN", "Books_Order", "AS", "T3", "ON", "T3.idOrder", "=", "T1.idOrder", "GROUP", "BY", "T1.idClient", "ORDER", "BY", "sum", "(", "T3.amount", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "orders", "as", "t1", "join", "client", "as", "t2", "on", "t1", ".", "idclient", "=", "t2", ".", "idclient", "join", "books_order", "as", "t3", "on", "t3", ".", "idorder", "=", "t1", ".", "idorder", "group", "by", "t1", ".", "idclient", "order", "by", "sum", "(", "t3", ".", "amount", ")", "desc", "limit", "value"], "question": "Show the client name who has the most total amount of books ordered.", "question_toks": ["Show", "the", "client", "name", "who", "has", "the", "most", "total", "amount", "of", "books", "ordered", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [4, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient ORDER BY sum(T3.amount) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Orders", "AS", "T1", "JOIN", "Client", "AS", "T2", "ON", "T1.idClient", "=", "T2.idClient", "JOIN", "Books_Order", "AS", "T3", "ON", "T3.idOrder", "=", "T1.idOrder", "GROUP", "BY", "T1.idClient", "ORDER", "BY", "sum", "(", "T3.amount", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "orders", "as", "t1", "join", "client", "as", "t2", "on", "t1", ".", "idclient", "=", "t2", ".", "idclient", "join", "books_order", "as", "t3", "on", "t3", ".", "idorder", "=", "t1", ".", "idorder", "group", "by", "t1", ".", "idclient", "order", "by", "sum", "(", "t3", ".", "amount", ")", "desc", "limit", "value"], "question": "What is the name of the client who has ordered the greatest total amount of books?", "question_toks": ["What", "is", "the", "name", "of", "the", "client", "who", "has", "ordered", "the", "greatest", "total", "amount", "of", "books", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [4, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT title FROM book EXCEPT SELECT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn", "query_toks": ["SELECT", "title", "FROM", "book", "EXCEPT", "SELECT", "T1.title", "FROM", "book", "AS", "T1", "JOIN", "books_order", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn"], "query_toks_no_value": ["select", "title", "from", "book", "except", "select", "t1", ".", "title", "from", "book", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn"], "question": "Show all book titles for books that have no orders.", "question_toks": ["Show", "all", "book", "titles", "for", "books", "that", "have", "no", "orders", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT title FROM book EXCEPT SELECT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn", "query_toks": ["SELECT", "title", "FROM", "book", "EXCEPT", "SELECT", "T1.title", "FROM", "book", "AS", "T1", "JOIN", "books_order", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn"], "query_toks_no_value": ["select", "title", "from", "book", "except", "select", "t1", ".", "title", "from", "book", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn"], "question": "What are the titles of books that have never been ordered?", "question_toks": ["What", "are", "the", "titles", "of", "books", "that", "have", "never", "been", "ordered", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT name FROM Client EXCEPT SELECT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient", "query_toks": ["SELECT", "name", "FROM", "Client", "EXCEPT", "SELECT", "T1.name", "FROM", "Client", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.idClient", "=", "T2.idClient"], "query_toks_no_value": ["select", "name", "from", "client", "except", "select", "t1", ".", "name", "from", "client", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "idclient", "=", "t2", ".", "idclient"], "question": "Show all client names for clients who have not made orders.", "question_toks": ["Show", "all", "client", "names", "for", "clients", "who", "have", "not", "made", "orders", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT name FROM Client EXCEPT SELECT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient", "query_toks": ["SELECT", "name", "FROM", "Client", "EXCEPT", "SELECT", "T1.name", "FROM", "Client", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.idClient", "=", "T2.idClient"], "query_toks_no_value": ["select", "name", "from", "client", "except", "select", "t1", ".", "name", "from", "client", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "idclient", "=", "t2", ".", "idclient"], "question": "What are the names of clients who have never made an order?", "question_toks": ["What", "are", "the", "names", "of", "clients", "who", "have", "never", "made", "an", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT max(saleprice) ,  min(saleprice) FROM Book", "query_toks": ["SELECT", "max", "(", "saleprice", ")", ",", "min", "(", "saleprice", ")", "FROM", "Book"], "query_toks_no_value": ["select", "max", "(", "saleprice", ")", ",", "min", "(", "saleprice", ")", "from", "book"], "question": "What is the maximum and the minimum sale price?", "question_toks": ["What", "is", "the", "maximum", "and", "the", "minimum", "sale", "price", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 15, false], null]], [2, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT max(saleprice) ,  min(saleprice) FROM Book", "query_toks": ["SELECT", "max", "(", "saleprice", ")", ",", "min", "(", "saleprice", ")", "FROM", "Book"], "query_toks_no_value": ["select", "max", "(", "saleprice", ")", ",", "min", "(", "saleprice", ")", "from", "book"], "question": "Give the maximum and minimum sale price of books.", "question_toks": ["Give", "the", "maximum", "and", "minimum", "sale", "price", "of", "books", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 15, false], null]], [2, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT avg(purchaseprice) ,  avg(saleprice) FROM Book", "query_toks": ["SELECT", "avg", "(", "purchaseprice", ")", ",", "avg", "(", "saleprice", ")", "FROM", "Book"], "query_toks_no_value": ["select", "avg", "(", "purchaseprice", ")", ",", "avg", "(", "saleprice", ")", "from", "book"], "question": "What is the average purchase price and the average sale price?", "question_toks": ["What", "is", "the", "average", "purchase", "price", "and", "the", "average", "sale", "price", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]], [5, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT avg(purchaseprice) ,  avg(saleprice) FROM Book", "query_toks": ["SELECT", "avg", "(", "purchaseprice", ")", ",", "avg", "(", "saleprice", ")", "FROM", "Book"], "query_toks_no_value": ["select", "avg", "(", "purchaseprice", ")", ",", "avg", "(", "saleprice", ")", "from", "book"], "question": "Give the average purchase price and average sale price for books.", "question_toks": ["Give", "the", "average", "purchase", "price", "and", "average", "sale", "price", "for", "books", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]], [5, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT max(saleprice - purchaseprice) FROM Book", "query_toks": ["SELECT", "max", "(", "saleprice", "-", "purchaseprice", ")", "FROM", "Book"], "query_toks_no_value": ["select", "max", "(", "saleprice", "-", "purchaseprice", ")", "from", "book"], "question": "What is the maximum difference between the sale price and purchase price?", "question_toks": ["What", "is", "the", "maximum", "difference", "between", "the", "sale", "price", "and", "purchase", "price", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [1, [0, 15, false], [0, 14, false]]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT max(saleprice - purchaseprice) FROM Book", "query_toks": ["SELECT", "max", "(", "saleprice", "-", "purchaseprice", ")", "FROM", "Book"], "query_toks_no_value": ["select", "max", "(", "saleprice", "-", "purchaseprice", ")", "from", "book"], "question": "Return the largest difference in sale price and purchase price.", "question_toks": ["Return", "the", "largest", "difference", "in", "sale", "price", "and", "purchase", "price", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [1, [0, 15, false], [0, 14, false]]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT title FROM book WHERE saleprice  >  (SELECT avg(saleprice) FROM book)", "query_toks": ["SELECT", "title", "FROM", "book", "WHERE", "saleprice", ">", "(", "SELECT", "avg", "(", "saleprice", ")", "FROM", "book", ")"], "query_toks_no_value": ["select", "title", "from", "book", "where", "saleprice", ">", "(", "select", "avg", "(", "saleprice", ")", "from", "book", ")"], "question": "List all book titles which have sale prices higher than the average.", "question_toks": ["List", "all", "book", "titles", "which", "have", "sale", "prices", "higher", "than", "the", "average", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 15, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT title FROM book WHERE saleprice  >  (SELECT avg(saleprice) FROM book)", "query_toks": ["SELECT", "title", "FROM", "book", "WHERE", "saleprice", ">", "(", "SELECT", "avg", "(", "saleprice", ")", "FROM", "book", ")"], "query_toks_no_value": ["select", "title", "from", "book", "where", "saleprice", ">", "(", "select", "avg", "(", "saleprice", ")", "from", "book", ")"], "question": "What are the titles of books with sale prices above the average sale price across all books?", "question_toks": ["What", "are", "the", "titles", "of", "books", "with", "sale", "prices", "above", "the", "average", "sale", "price", "across", "all", "books", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 15, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "select title from book order by saleprice asc limit 1", "query_toks": ["select", "title", "from", "book", "order", "by", "saleprice", "asc", "limit", "1"], "query_toks_no_value": ["select", "title", "from", "book", "order", "by", "saleprice", "asc", "limit", "value"], "question": "List all book titles which have the lowest sale price .", "question_toks": ["List", "all", "book", "titles", "which", "have", "the", "lowest", "sale", "price", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "select title from book order by saleprice asc limit 1", "query_toks": ["select", "title", "from", "book", "order", "by", "saleprice", "asc", "limit", "1"], "query_toks_no_value": ["select", "title", "from", "book", "order", "by", "saleprice", "asc", "limit", "value"], "question": "What are the titles of books that have a sale price equal to the lowest sale price across all books ?", "question_toks": ["What", "are", "the", "titles", "of", "books", "that", "have", "a", "sale", "price", "equal", "to", "the", "lowest", "sale", "price", "across", "all", "books", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "select title from book order by purchaseprice  desc limit 1", "query_toks": ["select", "title", "from", "book", "order", "by", "purchaseprice", "desc", "limit", "1"], "query_toks_no_value": ["select", "title", "from", "book", "order", "by", "purchaseprice", "desc", "limit", "value"], "question": "List all book titles which have highest purchase prices .", "question_toks": ["List", "all", "book", "titles", "which", "have", "highest", "purchase", "prices", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 14, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "select title from book order by purchaseprice  desc limit 1", "query_toks": ["select", "title", "from", "book", "order", "by", "purchaseprice", "desc", "limit", "1"], "query_toks_no_value": ["select", "title", "from", "book", "order", "by", "purchaseprice", "desc", "limit", "value"], "question": "What are the titles of books with the highest purchase price across all books ?", "question_toks": ["What", "are", "the", "titles", "of", "books", "with", "the", "highest", "purchase", "price", "across", "all", "books", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 14, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT avg(saleprice) FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\"", "query_toks": ["SELECT", "avg", "(", "saleprice", ")", "FROM", "Book", "AS", "T1", "JOIN", "Author_book", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "JOIN", "Author", "AS", "T3", "ON", "T2.Author", "=", "T3.idAuthor", "WHERE", "T3.name", "=", "``", "George", "Orwell", "''"], "query_toks_no_value": ["select", "avg", "(", "saleprice", ")", "from", "book", "as", "t1", "join", "author_book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "join", "author", "as", "t3", "on", "t2", ".", "author", "=", "t3", ".", "idauthor", "where", "t3", ".", "name", "=", "value"], "question": "What is the average sale price of books written by George Orwell?", "question_toks": ["What", "is", "the", "average", "sale", "price", "of", "books", "written", "by", "George", "Orwell", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 9, false], null]]}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"George Orwell\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT avg(saleprice) FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\"", "query_toks": ["SELECT", "avg", "(", "saleprice", ")", "FROM", "Book", "AS", "T1", "JOIN", "Author_book", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "JOIN", "Author", "AS", "T3", "ON", "T2.Author", "=", "T3.idAuthor", "WHERE", "T3.name", "=", "``", "George", "Orwell", "''"], "query_toks_no_value": ["select", "avg", "(", "saleprice", ")", "from", "book", "as", "t1", "join", "author_book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "join", "author", "as", "t3", "on", "t2", ".", "author", "=", "t3", ".", "idauthor", "where", "t3", ".", "name", "=", "value"], "question": "Give the average sale price of books authored by George Orwell.", "question_toks": ["Give", "the", "average", "sale", "price", "of", "books", "authored", "by", "George", "Orwell", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 9, false], null]]}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"George Orwell\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT saleprice FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\"", "query_toks": ["SELECT", "saleprice", "FROM", "Book", "AS", "T1", "JOIN", "Author_book", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "JOIN", "Author", "AS", "T3", "ON", "T2.Author", "=", "T3.idAuthor", "WHERE", "T3.name", "=", "``", "Plato", "''"], "query_toks_no_value": ["select", "saleprice", "from", "book", "as", "t1", "join", "author_book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "join", "author", "as", "t3", "on", "t2", ".", "author", "=", "t3", ".", "idauthor", "where", "t3", ".", "name", "=", "value"], "question": "What are sale prices of books written by Plato?", "question_toks": ["What", "are", "sale", "prices", "of", "books", "written", "by", "Plato", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Plato\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT saleprice FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\"", "query_toks": ["SELECT", "saleprice", "FROM", "Book", "AS", "T1", "JOIN", "Author_book", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "JOIN", "Author", "AS", "T3", "ON", "T2.Author", "=", "T3.idAuthor", "WHERE", "T3.name", "=", "``", "Plato", "''"], "query_toks_no_value": ["select", "saleprice", "from", "book", "as", "t1", "join", "author_book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "join", "author", "as", "t3", "on", "t2", ".", "author", "=", "t3", ".", "idauthor", "where", "t3", ".", "name", "=", "value"], "question": "Return the sale prices of books authored by Plato.", "question_toks": ["Return", "the", "sale", "prices", "of", "books", "authored", "by", "Plato", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Plato\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\" ORDER BY T1.saleprice LIMIT 1", "query_toks": ["SELECT", "T1.title", "FROM", "Book", "AS", "T1", "JOIN", "Author_book", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "JOIN", "Author", "AS", "T3", "ON", "T2.Author", "=", "T3.idAuthor", "WHERE", "T3.name", "=", "``", "George", "Orwell", "''", "ORDER", "BY", "T1.saleprice", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "book", "as", "t1", "join", "author_book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "join", "author", "as", "t3", "on", "t2", ".", "author", "=", "t3", ".", "idauthor", "where", "t3", ".", "name", "=", "value", "order", "by", "t1", ".", "saleprice", "limit", "value"], "question": "What is the title of the book written by George Orwell that has the lowest sale price?", "question_toks": ["What", "is", "the", "title", "of", "the", "book", "written", "by", "George", "Orwell", "that", "has", "the", "lowest", "sale", "price", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"George Orwell\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\" ORDER BY T1.saleprice LIMIT 1", "query_toks": ["SELECT", "T1.title", "FROM", "Book", "AS", "T1", "JOIN", "Author_book", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "JOIN", "Author", "AS", "T3", "ON", "T2.Author", "=", "T3.idAuthor", "WHERE", "T3.name", "=", "``", "George", "Orwell", "''", "ORDER", "BY", "T1.saleprice", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "book", "as", "t1", "join", "author_book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "join", "author", "as", "t3", "on", "t2", ".", "author", "=", "t3", ".", "idauthor", "where", "t3", ".", "name", "=", "value", "order", "by", "t1", ".", "saleprice", "limit", "value"], "question": "Give the title of book by George Orwell that has the lowest saleprice.", "question_toks": ["Give", "the", "title", "of", "book", "by", "George", "Orwell", "that", "has", "the", "lowest", "saleprice", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"George Orwell\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\" AND T1.saleprice  <  (SELECT avg(saleprice) FROM Book)", "query_toks": ["SELECT", "T1.title", "FROM", "Book", "AS", "T1", "JOIN", "Author_book", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "JOIN", "Author", "AS", "T3", "ON", "T2.Author", "=", "T3.idAuthor", "WHERE", "T3.name", "=", "``", "Plato", "''", "AND", "T1.saleprice", "<", "(", "SELECT", "avg", "(", "saleprice", ")", "FROM", "Book", ")"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "book", "as", "t1", "join", "author_book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "join", "author", "as", "t3", "on", "t2", ".", "author", "=", "t3", ".", "idauthor", "where", "t3", ".", "name", "=", "value", "and", "t1", ".", "saleprice", "<", "(", "select", "avg", "(", "saleprice", ")", "from", "book", ")"], "question": "What is the title of the book written by Plato has price lower than the average sale price of all books?", "question_toks": ["What", "is", "the", "title", "of", "the", "book", "written", "by", "Plato", "has", "price", "lower", "than", "the", "average", "sale", "price", "of", "all", "books", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Plato\"", null], "and", [false, 4, [0, [0, 15, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\" AND T1.saleprice  <  (SELECT avg(saleprice) FROM Book)", "query_toks": ["SELECT", "T1.title", "FROM", "Book", "AS", "T1", "JOIN", "Author_book", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "JOIN", "Author", "AS", "T3", "ON", "T2.Author", "=", "T3.idAuthor", "WHERE", "T3.name", "=", "``", "Plato", "''", "AND", "T1.saleprice", "<", "(", "SELECT", "avg", "(", "saleprice", ")", "FROM", "Book", ")"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "book", "as", "t1", "join", "author_book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "join", "author", "as", "t3", "on", "t2", ".", "author", "=", "t3", ".", "idauthor", "where", "t3", ".", "name", "=", "value", "and", "t1", ".", "saleprice", "<", "(", "select", "avg", "(", "saleprice", ")", "from", "book", ")"], "question": "Give the titles of books authored by Plato that have a sale price lower than the average sale price across all books.", "question_toks": ["Give", "the", "titles", "of", "books", "authored", "by", "Plato", "that", "have", "a", "sale", "price", "lower", "than", "the", "average", "sale", "price", "across", "all", "books", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Plato\"", null], "and", [false, 4, [0, [0, 15, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T3.name FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T1.title  =  \"Pride and Prejudice\"", "query_toks": ["SELECT", "T3.name", "FROM", "Book", "AS", "T1", "JOIN", "Author_book", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "JOIN", "Author", "AS", "T3", "ON", "T2.Author", "=", "T3.idAuthor", "WHERE", "T1.title", "=", "``", "Pride", "and", "Prejudice", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "book", "as", "t1", "join", "author_book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "join", "author", "as", "t3", "on", "t2", ".", "author", "=", "t3", ".", "idauthor", "where", "t1", ".", "title", "=", "value"], "question": "Who is the author of the book \"Pride and Prejudice\"?", "question_toks": ["Who", "is", "the", "author", "of", "the", "book", "``", "Pride", "and", "Prejudice", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Pride and Prejudice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T3.name FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T1.title  =  \"Pride and Prejudice\"", "query_toks": ["SELECT", "T3.name", "FROM", "Book", "AS", "T1", "JOIN", "Author_book", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "JOIN", "Author", "AS", "T3", "ON", "T2.Author", "=", "T3.idAuthor", "WHERE", "T1.title", "=", "``", "Pride", "and", "Prejudice", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "book", "as", "t1", "join", "author_book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "join", "author", "as", "t3", "on", "t2", ".", "author", "=", "t3", ".", "idauthor", "where", "t1", ".", "title", "=", "value"], "question": "Give the name of the author who wrote the book titled Pride and Prejudice.", "question_toks": ["Give", "the", "name", "of", "the", "author", "who", "wrote", "the", "book", "titled", "Pride", "and", "Prejudice", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Pride and Prejudice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name LIKE \"%Plato%\"", "query_toks": ["SELECT", "T1.title", "FROM", "Book", "AS", "T1", "JOIN", "Author_book", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "JOIN", "Author", "AS", "T3", "ON", "T2.Author", "=", "T3.idAuthor", "WHERE", "T3.name", "LIKE", "``", "%", "Plato", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "book", "as", "t1", "join", "author_book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "join", "author", "as", "t3", "on", "t2", ".", "author", "=", "t3", ".", "idauthor", "where", "t3", ".", "name", "like", "value"], "question": "List titles of all books published by an author whose name contains the string 'Plato'?", "question_toks": ["List", "titles", "of", "all", "books", "published", "by", "an", "author", "whose", "name", "contains", "the", "string", "'Plato", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 10, false], null], "\"%Plato%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name LIKE \"%Plato%\"", "query_toks": ["SELECT", "T1.title", "FROM", "Book", "AS", "T1", "JOIN", "Author_book", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "JOIN", "Author", "AS", "T3", "ON", "T2.Author", "=", "T3.idAuthor", "WHERE", "T3.name", "LIKE", "``", "%", "Plato", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "book", "as", "t1", "join", "author_book", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "join", "author", "as", "t3", "on", "t2", ".", "author", "=", "t3", ".", "idauthor", "where", "t3", ".", "name", "like", "value"], "question": "What are the titles of all books written by an author with a name that contains Plato?", "question_toks": ["What", "are", "the", "titles", "of", "all", "books", "written", "by", "an", "author", "with", "a", "name", "that", "contains", "Plato", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 10, false], null], "\"%Plato%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT count(*) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Book", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "WHERE", "T1.title", "=", "``", "Pride", "and", "Prejudice", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "book", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "where", "t1", ".", "title", "=", "value"], "question": "How many orders do we have for \"Pride and Prejudice\"?", "question_toks": ["How", "many", "orders", "do", "we", "have", "for", "``", "Pride", "and", "Prejudice", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 18, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Pride and Prejudice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT count(*) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Book", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "WHERE", "T1.title", "=", "``", "Pride", "and", "Prejudice", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "book", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "where", "t1", ".", "title", "=", "value"], "question": "Return the number of orders received for Pride and Prejudice.", "question_toks": ["Return", "the", "number", "of", "orders", "received", "for", "Pride", "and", "Prejudice", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 18, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Pride and Prejudice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\" INTERSECT SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"The Little Prince\"", "query_toks": ["SELECT", "idOrder", "FROM", "Book", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "WHERE", "T1.title", "=", "``", "Pride", "and", "Prejudice", "''", "INTERSECT", "SELECT", "idOrder", "FROM", "Book", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "WHERE", "T1.title", "=", "``", "The", "Little", "Prince", "''"], "query_toks_no_value": ["select", "idorder", "from", "book", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "where", "t1", ".", "title", "=", "value", "intersect", "select", "idorder", "from", "book", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "where", "t1", ".", "title", "=", "value"], "question": "Show ids for orders including both \"Pride and Prejudice\" and \"The Little Prince\".", "question_toks": ["Show", "ids", "for", "orders", "including", "both", "``", "Pride", "and", "Prejudice", "''", "and", "``", "The", "Little", "Prince", "''", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Pride and Prejudice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"The Little Prince\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\" INTERSECT SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"The Little Prince\"", "query_toks": ["SELECT", "idOrder", "FROM", "Book", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "WHERE", "T1.title", "=", "``", "Pride", "and", "Prejudice", "''", "INTERSECT", "SELECT", "idOrder", "FROM", "Book", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.isbn", "=", "T2.isbn", "WHERE", "T1.title", "=", "``", "The", "Little", "Prince", "''"], "query_toks_no_value": ["select", "idorder", "from", "book", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "where", "t1", ".", "title", "=", "value", "intersect", "select", "idorder", "from", "book", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "isbn", "=", "t2", ".", "isbn", "where", "t1", ".", "title", "=", "value"], "question": "What are the order ids for orders that include both Pride and Prejudice and The Little Prince?", "question_toks": ["What", "are", "the", "order", "ids", "for", "orders", "that", "include", "both", "Pride", "and", "Prejudice", "and", "The", "Little", "Prince", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Pride and Prejudice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"The Little Prince\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"Peter Doe\" INTERSECT SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"James Smith\"", "query_toks": ["SELECT", "T2.isbn", "FROM", "Orders", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.idOrder", "=", "T2.idOrder", "JOIN", "Client", "AS", "T3", "ON", "T1.idClient", "=", "T3.idClient", "WHERE", "T3.name", "=", "``", "Peter", "Doe", "''", "INTERSECT", "SELECT", "T2.isbn", "FROM", "Orders", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.idOrder", "=", "T2.idOrder", "JOIN", "Client", "AS", "T3", "ON", "T1.idClient", "=", "T3.idClient", "WHERE", "T3.name", "=", "``", "James", "Smith", "''"], "query_toks_no_value": ["select", "t2", ".", "isbn", "from", "orders", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "idorder", "=", "t2", ".", "idorder", "join", "client", "as", "t3", "on", "t1", ".", "idclient", "=", "t3", ".", "idclient", "where", "t3", ".", "name", "=", "value", "intersect", "select", "t2", ".", "isbn", "from", "orders", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "idorder", "=", "t2", ".", "idorder", "join", "client", "as", "t3", "on", "t1", ".", "idclient", "=", "t3", ".", "idclient", "where", "t3", ".", "name", "=", "value"], "question": "Show all book isbns which were ordered by both client Peter Doe and client James Smith.", "question_toks": ["Show", "all", "book", "isbns", "which", "were", "ordered", "by", "both", "client", "Peter", "Doe", "and", "client", "James", "Smith", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Peter Doe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"James Smith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"Peter Doe\" INTERSECT SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"James Smith\"", "query_toks": ["SELECT", "T2.isbn", "FROM", "Orders", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.idOrder", "=", "T2.idOrder", "JOIN", "Client", "AS", "T3", "ON", "T1.idClient", "=", "T3.idClient", "WHERE", "T3.name", "=", "``", "Peter", "Doe", "''", "INTERSECT", "SELECT", "T2.isbn", "FROM", "Orders", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.idOrder", "=", "T2.idOrder", "JOIN", "Client", "AS", "T3", "ON", "T1.idClient", "=", "T3.idClient", "WHERE", "T3.name", "=", "``", "James", "Smith", "''"], "query_toks_no_value": ["select", "t2", ".", "isbn", "from", "orders", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "idorder", "=", "t2", ".", "idorder", "join", "client", "as", "t3", "on", "t1", ".", "idclient", "=", "t3", ".", "idclient", "where", "t3", ".", "name", "=", "value", "intersect", "select", "t2", ".", "isbn", "from", "orders", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "idorder", "=", "t2", ".", "idorder", "join", "client", "as", "t3", "on", "t1", ".", "idclient", "=", "t3", ".", "idclient", "where", "t3", ".", "name", "=", "value"], "question": "What are the isbns of books ordered by both clients named Peter Doe and James Smith?", "question_toks": ["What", "are", "the", "isbns", "of", "books", "ordered", "by", "both", "clients", "named", "Peter", "Doe", "and", "James", "Smith", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Peter Doe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"James Smith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"Peter Doe\" EXCEPT SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"James Smith\"", "query_toks": ["SELECT", "T4.title", "FROM", "Orders", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.idOrder", "=", "T2.idOrder", "JOIN", "Client", "AS", "T3", "ON", "T1.idClient", "=", "T3.idClient", "JOIN", "book", "AS", "T4", "ON", "T2.ISBN", "=", "T4.isbn", "WHERE", "T3.name", "=", "``", "Peter", "Doe", "''", "EXCEPT", "SELECT", "T4.title", "FROM", "Orders", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.idOrder", "=", "T2.idOrder", "JOIN", "Client", "AS", "T3", "ON", "T1.idClient", "=", "T3.idClient", "JOIN", "book", "AS", "T4", "ON", "T2.ISBN", "=", "T4.isbn", "WHERE", "T3.name", "=", "``", "James", "Smith", "''"], "query_toks_no_value": ["select", "t4", ".", "title", "from", "orders", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "idorder", "=", "t2", ".", "idorder", "join", "client", "as", "t3", "on", "t1", ".", "idclient", "=", "t3", ".", "idclient", "join", "book", "as", "t4", "on", "t2", ".", "isbn", "=", "t4", ".", "isbn", "where", "t3", ".", "name", "=", "value", "except", "select", "t4", ".", "title", "from", "orders", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "idorder", "=", "t2", ".", "idorder", "join", "client", "as", "t3", "on", "t1", ".", "idclient", "=", "t3", ".", "idclient", "join", "book", "as", "t4", "on", "t2", ".", "isbn", "=", "t4", ".", "isbn", "where", "t3", ".", "name", "=", "value"], "question": "Find the title of books which are ordered by client Peter Doe but not client James Smith.", "question_toks": ["Find", "the", "title", "of", "books", "which", "are", "ordered", "by", "client", "Peter", "Doe", "but", "not", "client", "James", "Smith", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 5], ["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Peter Doe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 5], ["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"James Smith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"Peter Doe\" EXCEPT SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"James Smith\"", "query_toks": ["SELECT", "T4.title", "FROM", "Orders", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.idOrder", "=", "T2.idOrder", "JOIN", "Client", "AS", "T3", "ON", "T1.idClient", "=", "T3.idClient", "JOIN", "book", "AS", "T4", "ON", "T2.ISBN", "=", "T4.isbn", "WHERE", "T3.name", "=", "``", "Peter", "Doe", "''", "EXCEPT", "SELECT", "T4.title", "FROM", "Orders", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.idOrder", "=", "T2.idOrder", "JOIN", "Client", "AS", "T3", "ON", "T1.idClient", "=", "T3.idClient", "JOIN", "book", "AS", "T4", "ON", "T2.ISBN", "=", "T4.isbn", "WHERE", "T3.name", "=", "``", "James", "Smith", "''"], "query_toks_no_value": ["select", "t4", ".", "title", "from", "orders", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "idorder", "=", "t2", ".", "idorder", "join", "client", "as", "t3", "on", "t1", ".", "idclient", "=", "t3", ".", "idclient", "join", "book", "as", "t4", "on", "t2", ".", "isbn", "=", "t4", ".", "isbn", "where", "t3", ".", "name", "=", "value", "except", "select", "t4", ".", "title", "from", "orders", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "idorder", "=", "t2", ".", "idorder", "join", "client", "as", "t3", "on", "t1", ".", "idclient", "=", "t3", ".", "idclient", "join", "book", "as", "t4", "on", "t2", ".", "isbn", "=", "t4", ".", "isbn", "where", "t3", ".", "name", "=", "value"], "question": "What are the titles of books that the client Peter Doe ordered, but the client James Smith did not?", "question_toks": ["What", "are", "the", "titles", "of", "books", "that", "the", "client", "Peter", "Doe", "ordered", ",", "but", "the", "client", "James", "Smith", "did", "not", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 5], ["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Peter Doe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 5], ["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"James Smith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T3.name FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN Book AS T4 ON T4.isbn  =  T2.isbn WHERE T4.title  =  \"Pride and Prejudice\"", "query_toks": ["SELECT", "T3.name", "FROM", "Orders", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.idOrder", "=", "T2.idOrder", "JOIN", "Client", "AS", "T3", "ON", "T1.idClient", "=", "T3.idClient", "JOIN", "Book", "AS", "T4", "ON", "T4.isbn", "=", "T2.isbn", "WHERE", "T4.title", "=", "``", "Pride", "and", "Prejudice", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "orders", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "idorder", "=", "t2", ".", "idorder", "join", "client", "as", "t3", "on", "t1", ".", "idclient", "=", "t3", ".", "idclient", "join", "book", "as", "t4", "on", "t4", ".", "isbn", "=", "t2", ".", "isbn", "where", "t4", ".", "title", "=", "value"], "question": "Show all client names who have orders for \"Pride and Prejudice\".", "question_toks": ["Show", "all", "client", "names", "who", "have", "orders", "for", "``", "Pride", "and", "Prejudice", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 5], ["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Pride and Prejudice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_1", "query": "SELECT T3.name FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN Book AS T4 ON T4.isbn  =  T2.isbn WHERE T4.title  =  \"Pride and Prejudice\"", "query_toks": ["SELECT", "T3.name", "FROM", "Orders", "AS", "T1", "JOIN", "Books_Order", "AS", "T2", "ON", "T1.idOrder", "=", "T2.idOrder", "JOIN", "Client", "AS", "T3", "ON", "T1.idClient", "=", "T3.idClient", "JOIN", "Book", "AS", "T4", "ON", "T4.isbn", "=", "T2.isbn", "WHERE", "T4.title", "=", "``", "Pride", "and", "Prejudice", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "orders", "as", "t1", "join", "books_order", "as", "t2", "on", "t1", ".", "idorder", "=", "t2", ".", "idorder", "join", "client", "as", "t3", "on", "t1", ".", "idclient", "=", "t3", ".", "idclient", "join", "book", "as", "t4", "on", "t4", ".", "isbn", "=", "t2", ".", "isbn", "where", "t4", ".", "title", "=", "value"], "question": "What are the names of clients who have ordered Pride and Prejudice?", "question_toks": ["What", "are", "the", "names", "of", "clients", "who", "have", "ordered", "Pride", "and", "Prejudice", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 5], ["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Pride and Prejudice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Client", "schema": ["IdClient:text", "Name:text", "Address:text", "NumCC:text"]}, {"name": "Orders", "schema": ["IdOrder:text", "IdClient:text", "DateOrder:time", "DateExped:time"]}, {"name": "Author", "schema": ["idAuthor:number", "Name:text"]}, {"name": "Book", "schema": ["ISBN:text", "Title:text", "Author:text", "PurchasePrice:number", "SalePrice:number"]}, {"name": "Author_Book", "schema": ["ISBN:text", "Author:number"]}, {"name": "Books_Order", "schema": ["ISBN:text", "IdOrder:text", "amount:number"]}]}
{"db_id": "book_review", "query": "SELECT count(*) FROM book", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "book"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "book"], "question": "How many books are there?", "question_toks": ["How", "many", "books", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT Title FROM book ORDER BY Title ASC", "query_toks": ["SELECT", "Title", "FROM", "book", "ORDER", "BY", "Title", "ASC"], "query_toks_no_value": ["select", "title", "from", "book", "order", "by", "title", "asc"], "question": "List the titles of books in ascending alphabetical order.", "question_toks": ["List", "the", "titles", "of", "books", "in", "ascending", "alphabetical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 2, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT Title FROM book ORDER BY Pages DESC", "query_toks": ["SELECT", "Title", "FROM", "book", "ORDER", "BY", "Pages", "DESC"], "query_toks_no_value": ["select", "title", "from", "book", "order", "by", "pages", "desc"], "question": "List the titles of books in descending order of pages.", "question_toks": ["List", "the", "titles", "of", "books", "in", "descending", "order", "of", "pages", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT TYPE ,  Release FROM book", "query_toks": ["SELECT", "TYPE", ",", "Release", "FROM", "book"], "query_toks_no_value": ["select", "type", ",", "release", "from", "book"], "question": "What are the types and release dates of books?", "question_toks": ["What", "are", "the", "types", "and", "release", "dates", "of", "books", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT max(Chapters) ,  min(Chapters) FROM book", "query_toks": ["SELECT", "max", "(", "Chapters", ")", ",", "min", "(", "Chapters", ")", "FROM", "book"], "query_toks_no_value": ["select", "max", "(", "chapters", ")", ",", "min", "(", "chapters", ")", "from", "book"], "question": "What are the maximum and minimum number of chapters for each book?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "number", "of", "chapters", "for", "each", "book", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 5, false], null]], [2, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT Title FROM book WHERE TYPE != \"Poet\"", "query_toks": ["SELECT", "Title", "FROM", "book", "WHERE", "TYPE", "!", "=", "``", "Poet", "''"], "query_toks_no_value": ["select", "title", "from", "book", "where", "type", "!", "=", "value"], "question": "What are the titles of books that are not \"Poet\"?", "question_toks": ["What", "are", "the", "titles", "of", "books", "that", "are", "not", "``", "Poet", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 3, false], null], "\"Poet\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT avg(Rating) FROM review", "query_toks": ["SELECT", "avg", "(", "Rating", ")", "FROM", "review"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", "from", "review"], "question": "What is the average rating in reviews?", "question_toks": ["What", "is", "the", "average", "rating", "in", "reviews", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT T1.Title ,  T2.Rating FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID", "query_toks": ["SELECT", "T1.Title", ",", "T2.Rating", "FROM", "book", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.Book_ID", "=", "T2.Book_ID"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t2", ".", "rating", "from", "book", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "book_id", "=", "t2", ".", "book_id"], "question": "What are the titles and ratings of books?", "question_toks": ["What", "are", "the", "titles", "and", "ratings", "of", "books", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT T2.Rating FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T1.Chapters DESC LIMIT 1", "query_toks": ["SELECT", "T2.Rating", "FROM", "book", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.Book_ID", "=", "T2.Book_ID", "ORDER", "BY", "T1.Chapters", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "rating", "from", "book", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "book_id", "=", "t2", ".", "book_id", "order", "by", "t1", ".", "chapters", "desc", "limit", "value"], "question": "What is the rating of the book with the largest number of chapters?", "question_toks": ["What", "is", "the", "rating", "of", "the", "book", "with", "the", "largest", "number", "of", "chapters", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT T2.Rank FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T1.Pages ASC LIMIT 1", "query_toks": ["SELECT", "T2.Rank", "FROM", "book", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.Book_ID", "=", "T2.Book_ID", "ORDER", "BY", "T1.Pages", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "rank", "from", "book", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "book_id", "=", "t2", ".", "book_id", "order", "by", "t1", ".", "pages", "asc", "limit", "value"], "question": "What is the rank of the book with the smallest number of pages?", "question_toks": ["What", "is", "the", "rank", "of", "the", "book", "with", "the", "smallest", "number", "of", "pages", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT T1.Title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Rank LIMIT 1", "query_toks": ["SELECT", "T1.Title", "FROM", "book", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.Book_ID", "=", "T2.Book_ID", "ORDER", "BY", "T2.Rank", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "book", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "book_id", "=", "t2", ".", "book_id", "order", "by", "t2", ".", "rank", "limit", "value"], "question": "What is the title of the book with the highest rank in the review?", "question_toks": ["What", "is", "the", "title", "of", "the", "book", "with", "the", "highest", "rank", "in", "the", "review", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT avg(T2.Readers_in_Million) FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T1.Type  =  \"Novel\"", "query_toks": ["SELECT", "avg", "(", "T2.Readers_in_Million", ")", "FROM", "book", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.Book_ID", "=", "T2.Book_ID", "WHERE", "T1.Type", "=", "``", "Novel", "''"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "readers_in_million", ")", "from", "book", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "book_id", "=", "t2", ".", "book_id", "where", "t1", ".", "type", "=", "value"], "question": "What is the average number of readers for books of type \"Novel\"?", "question_toks": ["What", "is", "the", "average", "number", "of", "readers", "for", "books", "of", "type", "``", "Novel", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[5, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Novel\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT TYPE ,  COUNT(*) FROM book GROUP BY TYPE", "query_toks": ["SELECT", "TYPE", ",", "COUNT", "(", "*", ")", "FROM", "book", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "count", "(", "*", ")", "from", "book", "group", "by", "type"], "question": "For each book type return the type and the number of books of that type.", "question_toks": ["For", "each", "book", "type", "return", "the", "type", "and", "the", "number", "of", "books", "of", "that", "type", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT TYPE FROM book GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "TYPE", "FROM", "book", "GROUP", "BY", "TYPE", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "type", "from", "book", "group", "by", "type", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most common type of books?", "question_toks": ["What", "is", "the", "most", "common", "type", "of", "books", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT TYPE FROM book GROUP BY TYPE HAVING COUNT(*)  >=  3", "query_toks": ["SELECT", "TYPE", "FROM", "book", "GROUP", "BY", "TYPE", "HAVING", "COUNT", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "type", "from", "book", "group", "by", "type", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the types of books that have at least three books belonging to?", "question_toks": ["What", "are", "the", "types", "of", "books", "that", "have", "at", "least", "three", "books", "belonging", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT T1.Title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Rating ASC", "query_toks": ["SELECT", "T1.Title", "FROM", "book", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.Book_ID", "=", "T2.Book_ID", "ORDER", "BY", "T2.Rating", "ASC"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "book", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "book_id", "=", "t2", ".", "book_id", "order", "by", "t2", ".", "rating", "asc"], "question": "List the titles of books in ascending order of the ratings in review?", "question_toks": ["List", "the", "titles", "of", "books", "in", "ascending", "order", "of", "the", "ratings", "in", "review", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT T1.Title ,  T1.audio FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Readers_in_Million DESC", "query_toks": ["SELECT", "T1.Title", ",", "T1.audio", "FROM", "book", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.Book_ID", "=", "T2.Book_ID", "ORDER", "BY", "T2.Readers_in_Million", "DESC"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "audio", "from", "book", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "book_id", "=", "t2", ".", "book_id", "order", "by", "t2", ".", "readers_in_million", "desc"], "question": "List the title and audio length for all the books in descending order of the number of readers.", "question_toks": ["List", "the", "title", "and", "audio", "length", "for", "all", "the", "books", "in", "descending", "order", "of", "the", "number", "of", "readers", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT count(*) FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review)", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "book", "WHERE", "Book_ID", "NOT", "IN", "(", "SELECT", "Book_ID", "FROM", "review", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "book", "where", "book_id", "not", "in", "(", "select", "book_id", "from", "review", ")"], "question": "How many books do not have reviews?", "question_toks": ["How", "many", "books", "do", "not", "have", "reviews", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT TYPE FROM book WHERE Chapters  >  75 INTERSECT SELECT TYPE FROM book WHERE Chapters  <  50", "query_toks": ["SELECT", "TYPE", "FROM", "book", "WHERE", "Chapters", ">", "75", "INTERSECT", "SELECT", "TYPE", "FROM", "book", "WHERE", "Chapters", "<", "50"], "query_toks_no_value": ["select", "type", "from", "book", "where", "chapters", ">", "value", "intersect", "select", "type", "from", "book", "where", "chapters", "<", "value"], "question": "Show the types of books that have both books with more than 75 chapters and books with less than 50 chapters.", "question_toks": ["Show", "the", "types", "of", "books", "that", "have", "both", "books", "with", "more", "than", "75", "chapters", "and", "books", "with", "less", "than", "50", "chapters", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 75.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT count(DISTINCT TYPE) FROM book", "query_toks": ["SELECT", "count", "(", "DISTINCT", "TYPE", ")", "FROM", "book"], "query_toks_no_value": ["select", "count", "(", "distinct", "type", ")", "from", "book"], "question": "How many distinct types of book are there?", "question_toks": ["How", "many", "distinct", "types", "of", "book", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 3, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "book_review", "query": "SELECT TYPE ,  title FROM book EXCEPT SELECT T1.type ,  T1.title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID;", "query_toks": ["SELECT", "TYPE", ",", "title", "FROM", "book", "EXCEPT", "SELECT", "T1.type", ",", "T1.title", "FROM", "book", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.Book_ID", "=", "T2.Book_ID", ";"], "query_toks_no_value": ["select", "type", ",", "title", "from", "book", "except", "select", "t1", ".", "type", ",", "t1", ".", "title", "from", "book", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "book_id", "=", "t2", ".", "book_id"], "question": "What are the type and title of the books that are not rated?", "question_toks": ["What", "are", "the", "type", "and", "title", "of", "the", "books", "that", "are", "not", "rated", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "book", "schema": ["Book_ID:number", "Title:text", "Type:text", "Pages:number", "Chapters:number", "Audio:text", "Release:text"]}, {"name": "review", "schema": ["Review_ID:number", "Book_ID:number", "Rating:number", "Readers_in_Million:number", "Rank:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT count(*) FROM customer", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "customer"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "customer"], "question": "How many customers are there?", "question_toks": ["How", "many", "customers", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT count(*) FROM customer", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "customer"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "customer"], "question": "Count the number of customers.", "question_toks": ["Count", "the", "number", "of", "customers", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC", "query_toks": ["SELECT", "Name", "FROM", "customer", "ORDER", "BY", "Level_of_Membership", "ASC"], "query_toks_no_value": ["select", "name", "from", "customer", "order", "by", "level_of_membership", "asc"], "question": "List the names of customers in ascending order of level of membership.", "question_toks": ["List", "the", "names", "of", "customers", "in", "ascending", "order", "of", "level", "of", "membership", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC", "query_toks": ["SELECT", "Name", "FROM", "customer", "ORDER", "BY", "Level_of_Membership", "ASC"], "query_toks_no_value": ["select", "name", "from", "customer", "order", "by", "level_of_membership", "asc"], "question": "Sort all the customers by the level of membership in ascending order, and return the customer names.", "question_toks": ["Sort", "all", "the", "customers", "by", "the", "level", "of", "membership", "in", "ascending", "order", ",", "and", "return", "the", "customer", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT Nationality ,  Card_Credit FROM customer", "query_toks": ["SELECT", "Nationality", ",", "Card_Credit", "FROM", "customer"], "query_toks_no_value": ["select", "nationality", ",", "card_credit", "from", "customer"], "question": "What are the nationalities and card credits of customers?", "question_toks": ["What", "are", "the", "nationalities", "and", "card", "credits", "of", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT Nationality ,  Card_Credit FROM customer", "query_toks": ["SELECT", "Nationality", ",", "Card_Credit", "FROM", "customer"], "query_toks_no_value": ["select", "nationality", ",", "card_credit", "from", "customer"], "question": "Find the nationality and card credit of each customer.", "question_toks": ["Find", "the", "nationality", "and", "card", "credit", "of", "each", "customer", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT Name FROM customer WHERE Nationality  =  \"England\" OR Nationality  =  \"Australia\"", "query_toks": ["SELECT", "Name", "FROM", "customer", "WHERE", "Nationality", "=", "``", "England", "''", "OR", "Nationality", "=", "``", "Australia", "''"], "query_toks_no_value": ["select", "name", "from", "customer", "where", "nationality", "=", "value", "or", "nationality", "=", "value"], "question": "Show the names of customers with nationality \"England\" or \"Australia\".", "question_toks": ["Show", "the", "names", "of", "customers", "with", "nationality", "``", "England", "''", "or", "``", "Australia", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"England\"", null], "or", [false, 2, [0, [0, 3, false], null], "\"Australia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT Name FROM customer WHERE Nationality  =  \"England\" OR Nationality  =  \"Australia\"", "query_toks": ["SELECT", "Name", "FROM", "customer", "WHERE", "Nationality", "=", "``", "England", "''", "OR", "Nationality", "=", "``", "Australia", "''"], "query_toks_no_value": ["select", "name", "from", "customer", "where", "nationality", "=", "value", "or", "nationality", "=", "value"], "question": "Which customers have nationality \"England\" or \"Australia\"? Give me their names.", "question_toks": ["Which", "customers", "have", "nationality", "``", "England", "''", "or", "``", "Australia", "''", "?", "Give", "me", "their", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"England\"", null], "or", [false, 2, [0, [0, 3, false], null], "\"Australia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT avg(Card_Credit) FROM customer WHERE Level_of_Membership  >  1", "query_toks": ["SELECT", "avg", "(", "Card_Credit", ")", "FROM", "customer", "WHERE", "Level_of_Membership", ">", "1"], "query_toks_no_value": ["select", "avg", "(", "card_credit", ")", "from", "customer", "where", "level_of_membership", ">", "value"], "question": "What is the average card credit of customers with membership level higher than 1?", "question_toks": ["What", "is", "the", "average", "card", "credit", "of", "customers", "with", "membership", "level", "higher", "than", "1", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT avg(Card_Credit) FROM customer WHERE Level_of_Membership  >  1", "query_toks": ["SELECT", "avg", "(", "Card_Credit", ")", "FROM", "customer", "WHERE", "Level_of_Membership", ">", "1"], "query_toks_no_value": ["select", "avg", "(", "card_credit", ")", "from", "customer", "where", "level_of_membership", ">", "value"], "question": "Find the average card credit customers whose membership level is above 1.", "question_toks": ["Find", "the", "average", "card", "credit", "customers", "whose", "membership", "level", "is", "above", "1", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT Card_Credit FROM customer ORDER BY Level_of_Membership DESC LIMIT 1", "query_toks": ["SELECT", "Card_Credit", "FROM", "customer", "ORDER", "BY", "Level_of_Membership", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "card_credit", "from", "customer", "order", "by", "level_of_membership", "desc", "limit", "value"], "question": "What is the card credit of the customer with the highest membership level?", "question_toks": ["What", "is", "the", "card", "credit", "of", "the", "customer", "with", "the", "highest", "membership", "level", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT Card_Credit FROM customer ORDER BY Level_of_Membership DESC LIMIT 1", "query_toks": ["SELECT", "Card_Credit", "FROM", "customer", "ORDER", "BY", "Level_of_Membership", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "card_credit", "from", "customer", "order", "by", "level_of_membership", "desc", "limit", "value"], "question": "Find the customer with the highest membership level and return his or her card credit.", "question_toks": ["Find", "the", "customer", "with", "the", "highest", "membership", "level", "and", "return", "his", "or", "her", "card", "credit", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT Nationality ,  COUNT(*) FROM customer GROUP BY Nationality", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "customer", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "customer", "group", "by", "nationality"], "question": "Show different nationalities of customers, along with the number of customers of each nationality.", "question_toks": ["Show", "different", "nationalities", "of", "customers", ",", "along", "with", "the", "number", "of", "customers", "of", "each", "nationality", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT Nationality ,  COUNT(*) FROM customer GROUP BY Nationality", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "customer", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "customer", "group", "by", "nationality"], "question": "How many customers are associated with each nationality? List the nationality and the number of customers.", "question_toks": ["How", "many", "customers", "are", "associated", "with", "each", "nationality", "?", "List", "the", "nationality", "and", "the", "number", "of", "customers", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT Nationality FROM customer GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Nationality", "FROM", "customer", "GROUP", "BY", "Nationality", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "nationality", "from", "customer", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the most common nationality of customers.", "question_toks": ["Show", "the", "most", "common", "nationality", "of", "customers", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT Nationality FROM customer GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Nationality", "FROM", "customer", "GROUP", "BY", "Nationality", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "nationality", "from", "customer", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which nationality does the most customers have?", "question_toks": ["Which", "nationality", "does", "the", "most", "customers", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT Nationality FROM customer WHERE Card_Credit  <  50 INTERSECT SELECT Nationality FROM customer WHERE Card_Credit  >  75", "query_toks": ["SELECT", "Nationality", "FROM", "customer", "WHERE", "Card_Credit", "<", "50", "INTERSECT", "SELECT", "Nationality", "FROM", "customer", "WHERE", "Card_Credit", ">", "75"], "query_toks_no_value": ["select", "nationality", "from", "customer", "where", "card_credit", "<", "value", "intersect", "select", "nationality", "from", "customer", "where", "card_credit", ">", "value"], "question": "Show the nations that have both customers with card credit smaller than 50 and customers with card credit bigger than 75.", "question_toks": ["Show", "the", "nations", "that", "have", "both", "customers", "with", "card", "credit", "smaller", "than", "50", "and", "customers", "with", "card", "credit", "bigger", "than", "75", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 75.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT Nationality FROM customer WHERE Card_Credit  <  50 INTERSECT SELECT Nationality FROM customer WHERE Card_Credit  >  75", "query_toks": ["SELECT", "Nationality", "FROM", "customer", "WHERE", "Card_Credit", "<", "50", "INTERSECT", "SELECT", "Nationality", "FROM", "customer", "WHERE", "Card_Credit", ">", "75"], "query_toks_no_value": ["select", "nationality", "from", "customer", "where", "card_credit", "<", "value", "intersect", "select", "nationality", "from", "customer", "where", "card_credit", ">", "value"], "question": "Which nations have both customers with card credit above 50 and customers with card credit below 75.", "question_toks": ["Which", "nations", "have", "both", "customers", "with", "card", "credit", "above", "50", "and", "customers", "with", "card", "credit", "below", "75", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 75.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Dish_Name", "FROM", "customer", "AS", "T1", "JOIN", "customer_order", "AS", "T2", "ON", "T1.Customer_ID", "=", "T2.Customer_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "dish_name", "from", "customer", "as", "t1", "join", "customer_order", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "Show the names of customers and names of dishes they order.", "question_toks": ["Show", "the", "names", "of", "customers", "and", "names", "of", "dishes", "they", "order", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Dish_Name", "FROM", "customer", "AS", "T1", "JOIN", "customer_order", "AS", "T2", "ON", "T1.Customer_ID", "=", "T2.Customer_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "dish_name", "from", "customer", "as", "t1", "join", "customer_order", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "For each order, return the customer name and the dish name.", "question_toks": ["For", "each", "order", ",", "return", "the", "customer", "name", "and", "the", "dish", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID ORDER BY T2.Quantity DESC", "query_toks": ["SELECT", "T1.Name", ",", "T2.Dish_Name", "FROM", "customer", "AS", "T1", "JOIN", "customer_order", "AS", "T2", "ON", "T1.Customer_ID", "=", "T2.Customer_ID", "ORDER", "BY", "T2.Quantity", "DESC"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "dish_name", "from", "customer", "as", "t1", "join", "customer_order", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "order", "by", "t2", ".", "quantity", "desc"], "question": "Show the names of customers and names of dishes they order, in descending order of the quantity of dish.", "question_toks": ["Show", "the", "names", "of", "customers", "and", "names", "of", "dishes", "they", "order", ",", "in", "descending", "order", "of", "the", "quantity", "of", "dish", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID ORDER BY T2.Quantity DESC", "query_toks": ["SELECT", "T1.Name", ",", "T2.Dish_Name", "FROM", "customer", "AS", "T1", "JOIN", "customer_order", "AS", "T2", "ON", "T1.Customer_ID", "=", "T2.Customer_ID", "ORDER", "BY", "T2.Quantity", "DESC"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "dish_name", "from", "customer", "as", "t1", "join", "customer_order", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "order", "by", "t2", ".", "quantity", "desc"], "question": "For each order, find the customer name and the dish name. Sort the result in descending order of the quantity of dish.", "question_toks": ["For", "each", "order", ",", "find", "the", "customer", "name", "and", "the", "dish", "name", ".", "Sort", "the", "result", "in", "descending", "order", "of", "the", "quantity", "of", "dish", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT T1.Name ,  sum(T2.Quantity) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name", "query_toks": ["SELECT", "T1.Name", ",", "sum", "(", "T2.Quantity", ")", "FROM", "customer", "AS", "T1", "JOIN", "customer_order", "AS", "T2", "ON", "T1.Customer_ID", "=", "T2.Customer_ID", "GROUP", "BY", "T1.Name"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "sum", "(", "t2", ".", "quantity", ")", "from", "customer", "as", "t1", "join", "customer_order", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "name"], "question": "Show each customer name and the total quantities of dishes ordered by that customer.", "question_toks": ["Show", "each", "customer", "name", "and", "the", "total", "quantities", "of", "dishes", "ordered", "by", "that", "customer", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 13, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "select t1.name ,  sum(t2.quantity) from customer as t1 join customer_order as t2 on t1.customer_id  =  t2.customer_id group by t1.name", "query_toks": ["select", "t1.name", ",", "sum", "(", "t2.quantity", ")", "from", "customer", "as", "t1", "join", "customer_order", "as", "t2", "on", "t1.customer_id", "=", "t2.customer_id", "group", "by", "t1.name"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "sum", "(", "t2", ".", "quantity", ")", "from", "customer", "as", "t1", "join", "customer_order", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "name"], "question": "What is the total quantities of dishes ordered by each customer ? List the customer name and the total quantity .", "question_toks": ["What", "is", "the", "total", "quantities", "of", "dishes", "ordered", "by", "each", "customer", "?", "List", "the", "customer", "name", "and", "the", "total", "quantity", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 13, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name HAVING sum(T2.Quantity)  >  1", "query_toks": ["SELECT", "T1.Name", "FROM", "customer", "AS", "T1", "JOIN", "customer_order", "AS", "T2", "ON", "T1.Customer_ID", "=", "T2.Customer_ID", "GROUP", "BY", "T1.Name", "HAVING", "sum", "(", "T2.Quantity", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "customer", "as", "t1", "join", "customer_order", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "name", "having", "sum", "(", "t2", ".", "quantity", ")", ">", "value"], "question": "Show the customers with total quantity of order bigger than 1.", "question_toks": ["Show", "the", "customers", "with", "total", "quantity", "of", "order", "bigger", "than", "1", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [4, 13, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name HAVING sum(T2.Quantity)  >  1", "query_toks": ["SELECT", "T1.Name", "FROM", "customer", "AS", "T1", "JOIN", "customer_order", "AS", "T2", "ON", "T1.Customer_ID", "=", "T2.Customer_ID", "GROUP", "BY", "T1.Name", "HAVING", "sum", "(", "T2.Quantity", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "customer", "as", "t1", "join", "customer_order", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "name", "having", "sum", "(", "t2", ".", "quantity", ")", ">", "value"], "question": "Which customers have total order quantity greater than 1? Give me the customer names.", "question_toks": ["Which", "customers", "have", "total", "order", "quantity", "greater", "than", "1", "?", "Give", "me", "the", "customer", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [4, 13, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT DISTINCT Manager FROM branch", "query_toks": ["SELECT", "DISTINCT", "Manager", "FROM", "branch"], "query_toks_no_value": ["select", "distinct", "manager", "from", "branch"], "question": "Show distinct managers of branches.", "question_toks": ["Show", "distinct", "managers", "of", "branches", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT DISTINCT Manager FROM branch", "query_toks": ["SELECT", "DISTINCT", "Manager", "FROM", "branch"], "query_toks_no_value": ["select", "distinct", "manager", "from", "branch"], "question": "Who are the distinct managers of branches?", "question_toks": ["Who", "are", "the", "distinct", "managers", "of", "branches", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT name FROM customer WHERE Customer_ID NOT IN (SELECT Customer_ID FROM customer_order)", "query_toks": ["SELECT", "name", "FROM", "customer", "WHERE", "Customer_ID", "NOT", "IN", "(", "SELECT", "Customer_ID", "FROM", "customer_order", ")"], "query_toks_no_value": ["select", "name", "from", "customer", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "customer_order", ")"], "question": "List the names of customers that do not have any order.", "question_toks": ["List", "the", "names", "of", "customers", "that", "do", "not", "have", "any", "order", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "restaurant_bills", "query": "SELECT name FROM customer WHERE Customer_ID NOT IN (SELECT Customer_ID FROM customer_order)", "query_toks": ["SELECT", "name", "FROM", "customer", "WHERE", "Customer_ID", "NOT", "IN", "(", "SELECT", "Customer_ID", "FROM", "customer_order", ")"], "query_toks_no_value": ["select", "name", "from", "customer", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "customer_order", ")"], "question": "Which customers do not have any order? Give me the customer names.", "question_toks": ["Which", "customers", "do", "not", "have", "any", "order", "?", "Give", "me", "the", "customer", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "customer", "schema": ["Customer_ID:number", "Name:text", "Nationality:text", "Card_Credit:number", "Level_of_Membership:number"]}, {"name": "branch", "schema": ["Branch_ID:number", "Manager:text", "Years_opened:number", "Location_of_office:text"]}, {"name": "customer_order", "schema": ["Customer_ID:number", "Branch_ID:number", "Dish_Name:text", "Quantity:number"]}]}
{"db_id": "club_leader", "query": "SELECT count(*) FROM member", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "member"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "member"], "question": "How many members are there?", "question_toks": ["How", "many", "members", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "SELECT Name FROM member ORDER BY Age ASC", "query_toks": ["SELECT", "Name", "FROM", "member", "ORDER", "BY", "Age", "ASC"], "query_toks_no_value": ["select", "name", "from", "member", "order", "by", "age", "asc"], "question": "List the names of members in ascending order of age.", "question_toks": ["List", "the", "names", "of", "members", "in", "ascending", "order", "of", "age", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "SELECT Name ,  Nationality FROM member", "query_toks": ["SELECT", "Name", ",", "Nationality", "FROM", "member"], "query_toks_no_value": ["select", "name", ",", "nationality", "from", "member"], "question": "What are the names and nationalities of the members?", "question_toks": ["What", "are", "the", "names", "and", "nationalities", "of", "the", "members", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "select name from member where nationality != \"england\"", "query_toks": ["select", "name", "from", "member", "where", "nationality", "!=", "\"england\""], "query_toks_no_value": ["select", "name", "from", "member", "where", "nationality", "!", "=", "value"], "question": "List the names of members whose nationality is not `` England '' .", "question_toks": ["List", "the", "names", "of", "members", "whose", "nationality", "is", "not", "``", "England", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 3, false], null], "\"england\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "SELECT Name FROM member WHERE Age  =  19 OR Age  =  20", "query_toks": ["SELECT", "Name", "FROM", "member", "WHERE", "Age", "=", "19", "OR", "Age", "=", "20"], "query_toks_no_value": ["select", "name", "from", "member", "where", "age", "=", "value", "or", "age", "=", "value"], "question": "Show the names of members whose age is either 19 or 20.", "question_toks": ["Show", "the", "names", "of", "members", "whose", "age", "is", "either", "19", "or", "20", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], 19.0, null], "or", [false, 2, [0, [0, 4, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "SELECT Name FROM member ORDER BY Age DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "member", "ORDER", "BY", "Age", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "member", "order", "by", "age", "desc", "limit", "value"], "question": "What is the name of the oldest member?", "question_toks": ["What", "is", "the", "name", "of", "the", "oldest", "member", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "SELECT Nationality ,  COUNT(*) FROM member GROUP BY Nationality", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "member", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "member", "group", "by", "nationality"], "question": "Show different nationalities along with the number of members of each nationality.", "question_toks": ["Show", "different", "nationalities", "along", "with", "the", "number", "of", "members", "of", "each", "nationality", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "SELECT Nationality ,  COUNT(*) FROM member GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "member", "GROUP", "BY", "Nationality", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "member", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Please show the most common nationality of members.", "question_toks": ["Please", "show", "the", "most", "common", "nationality", "of", "members", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "SELECT Nationality FROM member GROUP BY Nationality HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "Nationality", "FROM", "member", "GROUP", "BY", "Nationality", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "nationality", "from", "member", "group", "by", "nationality", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the nations that have at least two members.", "question_toks": ["Show", "the", "nations", "that", "have", "at", "least", "two", "members", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "SELECT T3.Name ,  T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Club_Name", "FROM", "club_leader", "AS", "T1", "JOIN", "club", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "JOIN", "member", "AS", "T3", "ON", "T1.Member_ID", "=", "T3.Member_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "club_name", "from", "club_leader", "as", "t1", "join", "club", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "join", "member", "as", "t3", "on", "t1", ".", "member_id", "=", "t3", ".", "member_id"], "question": "Show the names of club leaders and the names of clubs they joined.", "question_toks": ["Show", "the", "names", "of", "club", "leaders", "and", "the", "names", "of", "clubs", "they", "joined", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "SELECT T3.Name ,  T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID WHERE T2.Overall_Ranking  <  100", "query_toks": ["SELECT", "T3.Name", ",", "T2.Club_Name", "FROM", "club_leader", "AS", "T1", "JOIN", "club", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "JOIN", "member", "AS", "T3", "ON", "T1.Member_ID", "=", "T3.Member_ID", "WHERE", "T2.Overall_Ranking", "<", "100"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "club_name", "from", "club_leader", "as", "t1", "join", "club", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "join", "member", "as", "t3", "on", "t1", ".", "member_id", "=", "t3", ".", "member_id", "where", "t2", ".", "overall_ranking", "<", "value"], "question": "Show the names of club leaders of clubs with overall ranking higher than 100.", "question_toks": ["Show", "the", "names", "of", "club", "leaders", "of", "clubs", "with", "overall", "ranking", "higher", "than", "100", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 4, [0, [0, 6, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "SELECT T3.Name ,  T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID WHERE T1.Year_Join  <  2018", "query_toks": ["SELECT", "T3.Name", ",", "T2.Club_Name", "FROM", "club_leader", "AS", "T1", "JOIN", "club", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "JOIN", "member", "AS", "T3", "ON", "T1.Member_ID", "=", "T3.Member_ID", "WHERE", "T1.Year_Join", "<", "2018"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "club_name", "from", "club_leader", "as", "t1", "join", "club", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "join", "member", "as", "t3", "on", "t1", ".", "member_id", "=", "t3", ".", "member_id", "where", "t1", ".", "year_join", "<", "value"], "question": "Show the names of club leaders that joined their club before 2018.", "question_toks": ["Show", "the", "names", "of", "club", "leaders", "that", "joined", "their", "club", "before", "2018", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 4, [0, [0, 11, false], null], 2018.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "SELECT T3.Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID WHERE T2.Club_Name  =  \"Houston\"", "query_toks": ["SELECT", "T3.Name", "FROM", "club_leader", "AS", "T1", "JOIN", "club", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "JOIN", "member", "AS", "T3", "ON", "T1.Member_ID", "=", "T3.Member_ID", "WHERE", "T2.Club_Name", "=", "``", "Houston", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "club_leader", "as", "t1", "join", "club", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "join", "member", "as", "t3", "on", "t1", ".", "member_id", "=", "t3", ".", "member_id", "where", "t2", ".", "club_name", "=", "value"], "question": "Show the name of the leader of the club named \"Houston\".", "question_toks": ["Show", "the", "name", "of", "the", "leader", "of", "the", "club", "named", "``", "Houston", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Houston\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM club_leader)", "query_toks": ["SELECT", "Name", "FROM", "member", "WHERE", "Member_ID", "NOT", "IN", "(", "SELECT", "Member_ID", "FROM", "club_leader", ")"], "query_toks_no_value": ["select", "name", "from", "member", "where", "member_id", "not", "in", "(", "select", "member_id", "from", "club_leader", ")"], "question": "List the names of members that are not club leaders.", "question_toks": ["List", "the", "names", "of", "members", "that", "are", "not", "club", "leaders", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "SELECT Nationality FROM member WHERE Age  >  22 INTERSECT SELECT Nationality FROM member WHERE Age  <  19", "query_toks": ["SELECT", "Nationality", "FROM", "member", "WHERE", "Age", ">", "22", "INTERSECT", "SELECT", "Nationality", "FROM", "member", "WHERE", "Age", "<", "19"], "query_toks_no_value": ["select", "nationality", "from", "member", "where", "age", ">", "value", "intersect", "select", "nationality", "from", "member", "where", "age", "<", "value"], "question": "Show the nations that have both members older than 22 and members younger than 19.", "question_toks": ["Show", "the", "nations", "that", "have", "both", "members", "older", "than", "22", "and", "members", "younger", "than", "19", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 22.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], 19.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "SELECT avg(T2.age) FROM club_leader AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id", "query_toks": ["SELECT", "avg", "(", "T2.age", ")", "FROM", "club_leader", "AS", "T1", "JOIN", "member", "AS", "T2", "ON", "T1.member_id", "=", "T2.member_id"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "age", ")", "from", "club_leader", "as", "t1", "join", "member", "as", "t2", "on", "t1", ".", "member_id", "=", "t2", ".", "member_id"], "question": "What is the average age of all the club leaders?", "question_toks": ["What", "is", "the", "average", "age", "of", "all", "the", "club", "leaders", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "club_leader", "query": "SELECT club_name FROM club WHERE club_name LIKE '%state%'", "query_toks": ["SELECT", "club_name", "FROM", "club", "WHERE", "club_name", "LIKE", "'", "%", "state", "%", "'"], "query_toks_no_value": ["select", "club_name", "from", "club", "where", "club_name", "like", "value"], "question": "Which club name contains the string 'state'?", "question_toks": ["Which", "club", "name", "contains", "the", "string", "'state", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 9, [0, [0, 8, false], null], "\"%state%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "member", "schema": ["Member_ID:number", "Name:text", "Nationality:text", "Age:number"]}, {"name": "club", "schema": ["Club_ID:number", "Overall_Ranking:number", "Team_Leader:text", "Club_Name:text"]}, {"name": "club_leader", "schema": ["Club_ID:number", "Member_ID:number", "Year_Join:text"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Collection_Subset_Name FROM Collection_Subsets;", "query_toks": ["SELECT", "Collection_Subset_Name", "FROM", "Collection_Subsets", ";"], "query_toks_no_value": ["select", "collection_subset_name", "from", "collection_subsets"], "question": "List all collections' subset. List the subsets' names.", "question_toks": ["List", "all", "collections", "'", "subset", ".", "List", "the", "subsets", "'", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Collection_Subset_Name FROM Collection_Subsets;", "query_toks": ["SELECT", "Collection_Subset_Name", "FROM", "Collection_Subsets", ";"], "query_toks_no_value": ["select", "collection_subset_name", "from", "collection_subsets"], "question": "What are the collection susbset names?", "question_toks": ["What", "are", "the", "collection", "susbset", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Collecrtion_Subset_Details FROM Collection_Subsets WHERE Collection_Subset_Name = \"Top collection\";", "query_toks": ["SELECT", "Collecrtion_Subset_Details", "FROM", "Collection_Subsets", "WHERE", "Collection_Subset_Name", "=", "``", "Top", "collection", "''", ";"], "query_toks_no_value": ["select", "collecrtion_subset_details", "from", "collection_subsets", "where", "collection_subset_name", "=", "value"], "question": "What is detail of collection subset with name 'Top collection'?", "question_toks": ["What", "is", "detail", "of", "collection", "subset", "with", "name", "'Top", "collection", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Top collection\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Collecrtion_Subset_Details FROM Collection_Subsets WHERE Collection_Subset_Name = \"Top collection\";", "query_toks": ["SELECT", "Collecrtion_Subset_Details", "FROM", "Collection_Subsets", "WHERE", "Collection_Subset_Name", "=", "``", "Top", "collection", "''", ";"], "query_toks_no_value": ["select", "collecrtion_subset_details", "from", "collection_subsets", "where", "collection_subset_name", "=", "value"], "question": "What collection details are there on the subset named 'Top collection'?", "question_toks": ["What", "collection", "details", "are", "there", "on", "the", "subset", "named", "'Top", "collection", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Top collection\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Document_Subset_Name FROM Document_Subsets;", "query_toks": ["SELECT", "Document_Subset_Name", "FROM", "Document_Subsets", ";"], "query_toks_no_value": ["select", "document_subset_name", "from", "document_subsets"], "question": "List all documents's subset. List the subset's name.", "question_toks": ["List", "all", "documents", "'s", "subset", ".", "List", "the", "subset", "'s", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Document_Subset_Name FROM Document_Subsets;", "query_toks": ["SELECT", "Document_Subset_Name", "FROM", "Document_Subsets", ";"], "query_toks_no_value": ["select", "document_subset_name", "from", "document_subsets"], "question": "What are the document subset names?", "question_toks": ["What", "are", "the", "document", "subset", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = \"Best for 2000\";", "query_toks": ["SELECT", "Document_Subset_Details", "FROM", "Document_Subsets", "WHERE", "Document_Subset_Name", "=", "``", "Best", "for", "2000", "''", ";"], "query_toks_no_value": ["select", "document_subset_details", "from", "document_subsets", "where", "document_subset_name", "=", "value"], "question": "What is the detail of document subset with name 'Best for 2000'?", "question_toks": ["What", "is", "the", "detail", "of", "document", "subset", "with", "name", "'Best", "for", "2000", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Best for 2000\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = \"Best for 2000\";", "query_toks": ["SELECT", "Document_Subset_Details", "FROM", "Document_Subsets", "WHERE", "Document_Subset_Name", "=", "``", "Best", "for", "2000", "''", ";"], "query_toks_no_value": ["select", "document_subset_details", "from", "document_subsets", "where", "document_subset_name", "=", "value"], "question": "What are the details on the document subsets that are named 'Best for 2000'?", "question_toks": ["What", "are", "the", "details", "on", "the", "document", "subsets", "that", "are", "named", "'Best", "for", "2000", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Best for 2000\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Document_Object_ID FROM Document_Objects;", "query_toks": ["SELECT", "Document_Object_ID", "FROM", "Document_Objects", ";"], "query_toks_no_value": ["select", "document_object_id", "from", "document_objects"], "question": "List document id of all documents.", "question_toks": ["List", "document", "id", "of", "all", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Document_Object_ID FROM Document_Objects;", "query_toks": ["SELECT", "Document_Object_ID", "FROM", "Document_Objects", ";"], "query_toks_no_value": ["select", "document_object_id", "from", "document_objects"], "question": "What is the object id of the document objects?", "question_toks": ["What", "is", "the", "object", "id", "of", "the", "document", "objects", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Parent_Document_Object_ID FROM Document_Objects WHERE OWNER  =  'Marlin'", "query_toks": ["SELECT", "Parent_Document_Object_ID", "FROM", "Document_Objects", "WHERE", "OWNER", "=", "'Marlin", "'"], "query_toks_no_value": ["select", "parent_document_object_id", "from", "document_objects", "where", "owner", "=", "value"], "question": "What is the parent document of document owned by Marlin? List the document id.", "question_toks": ["What", "is", "the", "parent", "document", "of", "document", "owned", "by", "Marlin", "?", "List", "the", "document", "id", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Marlin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Parent_Document_Object_ID FROM Document_Objects WHERE OWNER  =  'Marlin'", "query_toks": ["SELECT", "Parent_Document_Object_ID", "FROM", "Document_Objects", "WHERE", "OWNER", "=", "'Marlin", "'"], "query_toks_no_value": ["select", "parent_document_object_id", "from", "document_objects", "where", "owner", "=", "value"], "question": "What are the document object ids of the objects owned by Marlin?", "question_toks": ["What", "are", "the", "document", "object", "ids", "of", "the", "objects", "owned", "by", "Marlin", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Marlin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT OWNER FROM Document_Objects WHERE Description  =  'Braeden Collection'", "query_toks": ["SELECT", "OWNER", "FROM", "Document_Objects", "WHERE", "Description", "=", "'Braeden", "Collection", "'"], "query_toks_no_value": ["select", "owner", "from", "document_objects", "where", "description", "=", "value"], "question": "What is the owner of document with the Description 'Braeden Collection'?", "question_toks": ["What", "is", "the", "owner", "of", "document", "with", "the", "Description", "'Braeden", "Collection", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Braeden Collection\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT OWNER FROM Document_Objects WHERE Description  =  'Braeden Collection'", "query_toks": ["SELECT", "OWNER", "FROM", "Document_Objects", "WHERE", "Description", "=", "'Braeden", "Collection", "'"], "query_toks_no_value": ["select", "owner", "from", "document_objects", "where", "description", "=", "value"], "question": "What are the owners of the document objects described as the 'Braeden Collection'?", "question_toks": ["What", "are", "the", "owners", "of", "the", "document", "objects", "described", "as", "the", "'Braeden", "Collection", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Braeden Collection\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T2.Owner FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID WHERE T1.Owner  =  'Marlin'", "query_toks": ["SELECT", "T2.Owner", "FROM", "Document_Objects", "AS", "T1", "JOIN", "Document_Objects", "AS", "T2", "ON", "T1.Parent_Document_Object_ID", "=", "T2.Document_Object_ID", "WHERE", "T1.Owner", "=", "'Marlin", "'"], "query_toks_no_value": ["select", "t2", ".", "owner", "from", "document_objects", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1", ".", "parent_document_object_id", "=", "t2", ".", "document_object_id", "where", "t1", ".", "owner", "=", "value"], "question": "What is the owner of the parent document of document owned by 'Marlin'?", "question_toks": ["What", "is", "the", "owner", "of", "the", "parent", "document", "of", "document", "owned", "by", "'Marlin", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Marlin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T2.Owner FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID WHERE T1.Owner  =  'Marlin'", "query_toks": ["SELECT", "T2.Owner", "FROM", "Document_Objects", "AS", "T1", "JOIN", "Document_Objects", "AS", "T2", "ON", "T1.Parent_Document_Object_ID", "=", "T2.Document_Object_ID", "WHERE", "T1.Owner", "=", "'Marlin", "'"], "query_toks_no_value": ["select", "t2", ".", "owner", "from", "document_objects", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1", ".", "parent_document_object_id", "=", "t2", ".", "document_object_id", "where", "t1", ".", "owner", "=", "value"], "question": "Who is the owner of the parent document of every documents where 'Marlin' is the owner?", "question_toks": ["Who", "is", "the", "owner", "of", "the", "parent", "document", "of", "every", "documents", "where", "'Marlin", "'", "is", "the", "owner", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Marlin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T2.Description FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID", "query_toks": ["SELECT", "DISTINCT", "T2.Description", "FROM", "Document_Objects", "AS", "T1", "JOIN", "Document_Objects", "AS", "T2", "ON", "T1.Parent_Document_Object_ID", "=", "T2.Document_Object_ID"], "query_toks_no_value": ["select", "distinct", "t2", ".", "description", "from", "document_objects", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1", ".", "parent_document_object_id", "=", "t2", ".", "document_object_id"], "question": "What are the different descriptions of all the parent documents?", "question_toks": ["What", "are", "the", "different", "descriptions", "of", "all", "the", "parent", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T2.Description FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID", "query_toks": ["SELECT", "DISTINCT", "T2.Description", "FROM", "Document_Objects", "AS", "T1", "JOIN", "Document_Objects", "AS", "T2", "ON", "T1.Parent_Document_Object_ID", "=", "T2.Document_Object_ID"], "query_toks_no_value": ["select", "distinct", "t2", ".", "description", "from", "document_objects", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1", ".", "parent_document_object_id", "=", "t2", ".", "document_object_id"], "question": "What is the unique description of every parent document?", "question_toks": ["What", "is", "the", "unique", "description", "of", "every", "parent", "document", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT count(*) FROM Document_Objects WHERE OWNER = \"Marlin\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Document_Objects", "WHERE", "OWNER", "=", "``", "Marlin", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "document_objects", "where", "owner", "=", "value"], "question": "How many documents owned by Marlin?", "question_toks": ["How", "many", "documents", "owned", "by", "Marlin", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Marlin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT count(*) FROM Document_Objects WHERE OWNER = \"Marlin\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Document_Objects", "WHERE", "OWNER", "=", "``", "Marlin", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "document_objects", "where", "owner", "=", "value"], "question": "What is the count of documents owned by Marlin?", "question_toks": ["What", "is", "the", "count", "of", "documents", "owned", "by", "Marlin", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Marlin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Document_Object_ID FROM Document_Objects EXCEPT SELECT Parent_Document_Object_ID FROM Document_Objects", "query_toks": ["SELECT", "Document_Object_ID", "FROM", "Document_Objects", "EXCEPT", "SELECT", "Parent_Document_Object_ID", "FROM", "Document_Objects"], "query_toks_no_value": ["select", "document_object_id", "from", "document_objects", "except", "select", "parent_document_object_id", "from", "document_objects"], "question": "List all documents ids that are not the parent of other documents.", "question_toks": ["List", "all", "documents", "ids", "that", "are", "not", "the", "parent", "of", "other", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Document_Object_ID FROM Document_Objects EXCEPT SELECT Parent_Document_Object_ID FROM Document_Objects", "query_toks": ["SELECT", "Document_Object_ID", "FROM", "Document_Objects", "EXCEPT", "SELECT", "Parent_Document_Object_ID", "FROM", "Document_Objects"], "query_toks_no_value": ["select", "document_object_id", "from", "document_objects", "except", "select", "parent_document_object_id", "from", "document_objects"], "question": "What are the ids of the documents that are not parent documents?", "question_toks": ["What", "are", "the", "ids", "of", "the", "documents", "that", "are", "not", "parent", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID;", "query_toks": ["SELECT", "T2.Document_Object_ID", ",", "count", "(", "*", ")", "FROM", "Document_Objects", "AS", "T1", "JOIN", "Document_Objects", "AS", "T2", "ON", "T1.Parent_Document_Object_ID", "=", "T2.Document_Object_ID", "GROUP", "BY", "T2.Document_Object_ID", ";"], "query_toks_no_value": ["select", "t2", ".", "document_object_id", ",", "count", "(", "*", ")", "from", "document_objects", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1", ".", "parent_document_object_id", "=", "t2", ".", "document_object_id", "group", "by", "t2", ".", "document_object_id"], "question": "How many child documents does each parent document has? List the document id and the number.", "question_toks": ["How", "many", "child", "documents", "does", "each", "parent", "document", "has", "?", "List", "the", "document", "id", "and", "the", "number", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID;", "query_toks": ["SELECT", "T2.Document_Object_ID", ",", "count", "(", "*", ")", "FROM", "Document_Objects", "AS", "T1", "JOIN", "Document_Objects", "AS", "T2", "ON", "T1.Parent_Document_Object_ID", "=", "T2.Document_Object_ID", "GROUP", "BY", "T2.Document_Object_ID", ";"], "query_toks_no_value": ["select", "t2", ".", "document_object_id", ",", "count", "(", "*", ")", "from", "document_objects", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1", ".", "parent_document_object_id", "=", "t2", ".", "document_object_id", "group", "by", "t2", ".", "document_object_id"], "question": "What is the number of child documents for each parent document, and what are the ids of the parent documents?", "question_toks": ["What", "is", "the", "number", "of", "child", "documents", "for", "each", "parent", "document", ",", "and", "what", "are", "the", "ids", "of", "the", "parent", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Collection_Name FROM Collections;", "query_toks": ["SELECT", "Collection_Name", "FROM", "Collections", ";"], "query_toks_no_value": ["select", "collection_name", "from", "collections"], "question": "List the name of all collections.", "question_toks": ["List", "the", "name", "of", "all", "collections", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Collection_Name FROM Collections;", "query_toks": ["SELECT", "Collection_Name", "FROM", "Collections", ";"], "query_toks_no_value": ["select", "collection_name", "from", "collections"], "question": "what are the collection names?", "question_toks": ["what", "are", "the", "collection", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Collection_Description FROM Collections WHERE Collection_Name = \"Best\";", "query_toks": ["SELECT", "Collection_Description", "FROM", "Collections", "WHERE", "Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "collection_description", "from", "collections", "where", "collection_name", "=", "value"], "question": "What is the description of collection named Best?", "question_toks": ["What", "is", "the", "description", "of", "collection", "named", "Best", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Collection_Description FROM Collections WHERE Collection_Name = \"Best\";", "query_toks": ["SELECT", "Collection_Description", "FROM", "Collections", "WHERE", "Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "collection_description", "from", "collections", "where", "collection_name", "=", "value"], "question": "What are the collection descriptions that are named as 'Best'?", "question_toks": ["What", "are", "the", "collection", "descriptions", "that", "are", "named", "as", "'Best", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Nice\";", "query_toks": ["SELECT", "T2.Collection_Name", "FROM", "Collections", "AS", "T1", "JOIN", "Collections", "AS", "T2", "ON", "T1.Parent_Collection_ID", "=", "T2.Collection_ID", "WHERE", "T1.Collection_Name", "=", "``", "Nice", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "collection_name", "from", "collections", "as", "t1", "join", "collections", "as", "t2", "on", "t1", ".", "parent_collection_id", "=", "t2", ".", "collection_id", "where", "t1", ".", "collection_name", "=", "value"], "question": "What is the name of the parent collection of the collection named Nice?", "question_toks": ["What", "is", "the", "name", "of", "the", "parent", "collection", "of", "the", "collection", "named", "Nice", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Nice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Nice\";", "query_toks": ["SELECT", "T2.Collection_Name", "FROM", "Collections", "AS", "T1", "JOIN", "Collections", "AS", "T2", "ON", "T1.Parent_Collection_ID", "=", "T2.Collection_ID", "WHERE", "T1.Collection_Name", "=", "``", "Nice", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "collection_name", "from", "collections", "as", "t1", "join", "collections", "as", "t2", "on", "t1", ".", "parent_collection_id", "=", "t2", ".", "collection_id", "where", "t1", ".", "collection_name", "=", "value"], "question": "What are the names of all parent collections of the collection named Nice?", "question_toks": ["What", "are", "the", "names", "of", "all", "parent", "collections", "of", "the", "collection", "named", "Nice", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Nice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Collection_Name FROM Collections EXCEPT SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID;", "query_toks": ["SELECT", "Collection_Name", "FROM", "Collections", "EXCEPT", "SELECT", "T2.Collection_Name", "FROM", "Collections", "AS", "T1", "JOIN", "Collections", "AS", "T2", "ON", "T1.Parent_Collection_ID", "=", "T2.Collection_ID", ";"], "query_toks_no_value": ["select", "collection_name", "from", "collections", "except", "select", "t2", ".", "collection_name", "from", "collections", "as", "t1", "join", "collections", "as", "t2", "on", "t1", ".", "parent_collection_id", "=", "t2", ".", "collection_id"], "question": "Which collection is not the parent of other collection? List the collection's name.", "question_toks": ["Which", "collection", "is", "not", "the", "parent", "of", "other", "collection", "?", "List", "the", "collection", "'s", "name", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Collection_Name FROM Collections EXCEPT SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID;", "query_toks": ["SELECT", "Collection_Name", "FROM", "Collections", "EXCEPT", "SELECT", "T2.Collection_Name", "FROM", "Collections", "AS", "T1", "JOIN", "Collections", "AS", "T2", "ON", "T1.Parent_Collection_ID", "=", "T2.Collection_ID", ";"], "query_toks_no_value": ["select", "collection_name", "from", "collections", "except", "select", "t2", ".", "collection_name", "from", "collections", "as", "t1", "join", "collections", "as", "t2", "on", "t1", ".", "parent_collection_id", "=", "t2", ".", "collection_id"], "question": "What are the names of the collections that are not the parent of the other collections?", "question_toks": ["What", "are", "the", "names", "of", "the", "collections", "that", "are", "not", "the", "parent", "of", "the", "other", "collections", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T2.Document_Object_ID FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID HAVING count(*)  >  1;", "query_toks": ["SELECT", "T2.Document_Object_ID", "FROM", "Document_Objects", "AS", "T1", "JOIN", "Document_Objects", "AS", "T2", "ON", "T1.Parent_Document_Object_ID", "=", "T2.Document_Object_ID", "GROUP", "BY", "T2.Document_Object_ID", "HAVING", "count", "(", "*", ")", ">", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "document_object_id", "from", "document_objects", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1", ".", "parent_document_object_id", "=", "t2", ".", "document_object_id", "group", "by", "t2", ".", "document_object_id", "having", "count", "(", "*", ")", ">", "value"], "question": "List document that have more than one child. List the document id.", "question_toks": ["List", "document", "that", "have", "more", "than", "one", "child", ".", "List", "the", "document", "id", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T2.Document_Object_ID FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID HAVING count(*)  >  1;", "query_toks": ["SELECT", "T2.Document_Object_ID", "FROM", "Document_Objects", "AS", "T1", "JOIN", "Document_Objects", "AS", "T2", "ON", "T1.Parent_Document_Object_ID", "=", "T2.Document_Object_ID", "GROUP", "BY", "T2.Document_Object_ID", "HAVING", "count", "(", "*", ")", ">", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "document_object_id", "from", "document_objects", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1", ".", "parent_document_object_id", "=", "t2", ".", "document_object_id", "group", "by", "t2", ".", "document_object_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the ids of the documents that have more than one child?", "question_toks": ["What", "are", "the", "ids", "of", "the", "documents", "that", "have", "more", "than", "one", "child", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT count(*) FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = \"Best\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Collections", "AS", "T1", "JOIN", "Collections", "AS", "T2", "ON", "T1.Parent_Collection_ID", "=", "T2.Collection_ID", "WHERE", "T2.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "collections", "as", "t1", "join", "collections", "as", "t2", "on", "t1", ".", "parent_collection_id", "=", "t2", ".", "collection_id", "where", "t2", ".", "collection_name", "=", "value"], "question": "How many child collection does the collection named Best has?", "question_toks": ["How", "many", "child", "collection", "does", "the", "collection", "named", "Best", "has", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 12, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT count(*) FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = \"Best\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Collections", "AS", "T1", "JOIN", "Collections", "AS", "T2", "ON", "T1.Parent_Collection_ID", "=", "T2.Collection_ID", "WHERE", "T2.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "collections", "as", "t1", "join", "collections", "as", "t2", "on", "t1", ".", "parent_collection_id", "=", "t2", ".", "collection_id", "where", "t2", ".", "collection_name", "=", "value"], "question": "What is the number of child collections belonging to the collection named Best?", "question_toks": ["What", "is", "the", "number", "of", "child", "collections", "belonging", "to", "the", "collection", "named", "Best", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 12, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "select t1.document_object_id from document_subset_members as t1 join document_objects as t2 on t1.document_object_id  =  t2.document_object_id where t2.owner  =  'ransom'", "query_toks": ["select", "t1.document_object_id", "from", "document_subset_members", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1.document_object_id", "=", "t2.document_object_id", "where", "t2.owner", "=", "\"ransom\""], "query_toks_no_value": ["select", "t1", ".", "document_object_id", "from", "document_subset_members", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1", ".", "document_object_id", "=", "t2", ".", "document_object_id", "where", "t2", ".", "owner", "=", "value"], "question": "List all document which is related to document owned by Ransom . List the document id .", "question_toks": ["List", "all", "document", "which", "is", "related", "to", "document", "owned", "by", "Ransom", ".", "List", "the", "document", "id", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"ransom\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "select t1.document_object_id from document_subset_members as t1 join document_objects as t2 on t1.document_object_id  =  t2.document_object_id where t2.owner  =  'ransom'", "query_toks": ["select", "t1.document_object_id", "from", "document_subset_members", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1.document_object_id", "=", "t2.document_object_id", "where", "t2.owner", "=", "\"ransom\""], "query_toks_no_value": ["select", "t1", ".", "document_object_id", "from", "document_subset_members", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1", ".", "document_object_id", "=", "t2", ".", "document_object_id", "where", "t2", ".", "owner", "=", "value"], "question": "What are the document object ids of the related to the document owned by Ransom ?", "question_toks": ["What", "are", "the", "document", "object", "ids", "of", "the", "related", "to", "the", "document", "owned", "by", "Ransom", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"ransom\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T2.Collection_Subset_ID ,  T1.Collection_Subset_Name ,  count(*) FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID GROUP BY T2.Collection_Subset_ID;", "query_toks": ["SELECT", "T2.Collection_Subset_ID", ",", "T1.Collection_Subset_Name", ",", "count", "(", "*", ")", "FROM", "Collection_Subsets", "AS", "T1", "JOIN", "Collection_Subset_Members", "AS", "T2", "ON", "T1.Collection_Subset_ID", "=", "T2.Collection_Subset_ID", "GROUP", "BY", "T2.Collection_Subset_ID", ";"], "query_toks_no_value": ["select", "t2", ".", "collection_subset_id", ",", "t1", ".", "collection_subset_name", ",", "count", "(", "*", ")", "from", "collection_subsets", "as", "t1", "join", "collection_subset_members", "as", "t2", "on", "t1", ".", "collection_subset_id", "=", "t2", ".", "collection_subset_id", "group", "by", "t2", ".", "collection_subset_id"], "question": "List collection subset id, name and number of collections in each subset.", "question_toks": ["List", "collection", "subset", "id", ",", "name", "and", "number", "of", "collections", "in", "each", "subset", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T2.Collection_Subset_ID ,  T1.Collection_Subset_Name ,  count(*) FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID GROUP BY T2.Collection_Subset_ID;", "query_toks": ["SELECT", "T2.Collection_Subset_ID", ",", "T1.Collection_Subset_Name", ",", "count", "(", "*", ")", "FROM", "Collection_Subsets", "AS", "T1", "JOIN", "Collection_Subset_Members", "AS", "T2", "ON", "T1.Collection_Subset_ID", "=", "T2.Collection_Subset_ID", "GROUP", "BY", "T2.Collection_Subset_ID", ";"], "query_toks_no_value": ["select", "t2", ".", "collection_subset_id", ",", "t1", ".", "collection_subset_name", ",", "count", "(", "*", ")", "from", "collection_subsets", "as", "t1", "join", "collection_subset_members", "as", "t2", "on", "t1", ".", "collection_subset_id", "=", "t2", ".", "collection_subset_id", "group", "by", "t2", ".", "collection_subset_id"], "question": "What are the collection subset ids, names, and number of collections for each subset?", "question_toks": ["What", "are", "the", "collection", "subset", "ids", ",", "names", ",", "and", "number", "of", "collections", "for", "each", "subset", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T2.Document_Object_ID", ",", "count", "(", "*", ")", "FROM", "Document_Objects", "AS", "T1", "JOIN", "Document_Objects", "AS", "T2", "ON", "T1.Parent_Document_Object_ID", "=", "T2.Document_Object_ID", "GROUP", "BY", "T2.Document_Object_ID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "document_object_id", ",", "count", "(", "*", ")", "from", "document_objects", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1", ".", "parent_document_object_id", "=", "t2", ".", "document_object_id", "group", "by", "t2", ".", "document_object_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which document has most of child? List the document id and the number of child.", "question_toks": ["Which", "document", "has", "most", "of", "child", "?", "List", "the", "document", "id", "and", "the", "number", "of", "child", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T2.Document_Object_ID", ",", "count", "(", "*", ")", "FROM", "Document_Objects", "AS", "T1", "JOIN", "Document_Objects", "AS", "T2", "ON", "T1.Parent_Document_Object_ID", "=", "T2.Document_Object_ID", "GROUP", "BY", "T2.Document_Object_ID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "document_object_id", ",", "count", "(", "*", ")", "from", "document_objects", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1", ".", "parent_document_object_id", "=", "t2", ".", "document_object_id", "group", "by", "t2", ".", "document_object_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "For each document object id, how many children do they have?", "question_toks": ["For", "each", "document", "object", "id", ",", "how", "many", "children", "do", "they", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Document_Object_ID , count(*) FROM Document_Subset_Members GROUP BY Document_Object_ID ORDER BY count(*) ASC LIMIT 1;", "query_toks": ["SELECT", "Document_Object_ID", ",", "count", "(", "*", ")", "FROM", "Document_Subset_Members", "GROUP", "BY", "Document_Object_ID", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "document_object_id", ",", "count", "(", "*", ")", "from", "document_subset_members", "group", "by", "document_object_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Which document has least number of related documents? List the document id and the number of related documents.", "question_toks": ["Which", "document", "has", "least", "number", "of", "related", "documents", "?", "List", "the", "document", "id", "and", "the", "number", "of", "related", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "select document_object_id , count(*) from document_subset_members group by document_object_id order by count(*) asc limit 1;", "query_toks": ["select", "document_object_id", ",", "count", "(", "*", ")", "from", "document_subset_members", "group", "by", "document_object_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"], "query_toks_no_value": ["select", "document_object_id", ",", "count", "(", "*", ")", "from", "document_subset_members", "group", "by", "document_object_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What is the document object id with the least number of documents ?", "question_toks": ["What", "is", "the", "document", "object", "id", "with", "the", "least", "number", "of", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "select document_object_id , count(*) from document_subset_members group by document_object_id having count(*) between 2 and 4;", "query_toks": ["select", "document_object_id", ",", "count", "(", "*", ")", "from", "document_subset_members", "group", "by", "document_object_id", "having", "count", "(", "*", ")", "between", "2", "and", "4", ";"], "query_toks_no_value": ["select", "document_object_id", ",", "count", "(", "*", ")", "from", "document_subset_members", "group", "by", "document_object_id", "having", "count", "(", "*", ")", "between", "value", "and", "value"], "question": "Which document has between 2 and 4 number of documents ? List the document id and the number of related documents .", "question_toks": ["Which", "document", "has", "between", "2", "and", "4", "number", "of", "documents", "?", "List", "the", "document", "id", "and", "the", "number", "of", "related", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [[false, 1, [0, [3, 0, false], null], 2.0, 4.0]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT Document_Object_ID , count(*) FROM Document_Subset_Members GROUP BY Document_Object_ID HAVING count(*) BETWEEN 2 AND 4;", "query_toks": ["SELECT", "Document_Object_ID", ",", "count", "(", "*", ")", "FROM", "Document_Subset_Members", "GROUP", "BY", "Document_Object_ID", "HAVING", "count", "(", "*", ")", "BETWEEN", "2", "AND", "4", ";"], "query_toks_no_value": ["select", "document_object_id", ",", "count", "(", "*", ")", "from", "document_subset_members", "group", "by", "document_object_id", "having", "count", "(", "*", ")", "between", "value", "and", "value"], "question": "What are the ids of the dcouments that have between 2 and 4 related documents and how many related items are there?", "question_toks": ["What", "are", "the", "ids", "of", "the", "dcouments", "that", "have", "between", "2", "and", "4", "related", "documents", "and", "how", "many", "related", "items", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [[false, 1, [0, [3, 0, false], null], 2.0, 4.0]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT OWNER FROM Document_Subset_Members AS T1 JOIN Document_Objects AS T2 ON T1.Related_Document_Object_ID  =  T2.Document_Object_ID WHERE T2.Owner  =  'Braeden';", "query_toks": ["SELECT", "DISTINCT", "OWNER", "FROM", "Document_Subset_Members", "AS", "T1", "JOIN", "Document_Objects", "AS", "T2", "ON", "T1.Related_Document_Object_ID", "=", "T2.Document_Object_ID", "WHERE", "T2.Owner", "=", "'Braeden", "'", ";"], "query_toks_no_value": ["select", "distinct", "owner", "from", "document_subset_members", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1", ".", "related_document_object_id", "=", "t2", ".", "document_object_id", "where", "t2", ".", "owner", "=", "value"], "question": "List all owner of documents that is related to documents owned by Braeden.", "question_toks": ["List", "all", "owner", "of", "documents", "that", "is", "related", "to", "documents", "owned", "by", "Braeden", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Braeden\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT OWNER FROM Document_Subset_Members AS T1 JOIN Document_Objects AS T2 ON T1.Related_Document_Object_ID  =  T2.Document_Object_ID WHERE T2.Owner  =  'Braeden';", "query_toks": ["SELECT", "DISTINCT", "OWNER", "FROM", "Document_Subset_Members", "AS", "T1", "JOIN", "Document_Objects", "AS", "T2", "ON", "T1.Related_Document_Object_ID", "=", "T2.Document_Object_ID", "WHERE", "T2.Owner", "=", "'Braeden", "'", ";"], "query_toks_no_value": ["select", "distinct", "owner", "from", "document_subset_members", "as", "t1", "join", "document_objects", "as", "t2", "on", "t1", ".", "related_document_object_id", "=", "t2", ".", "document_object_id", "where", "t2", ".", "owner", "=", "value"], "question": "What are the different owners of documents that are related to ones owned by Braeden?", "question_toks": ["What", "are", "the", "different", "owners", "of", "documents", "that", "are", "related", "to", "ones", "owned", "by", "Braeden", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Braeden\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T1.Document_Subset_Name FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Document_Objects AS T3 ON T2.Document_Object_ID  =  T3.Document_Object_ID WHERE T3.owner  =  'Braeden'", "query_toks": ["SELECT", "DISTINCT", "T1.Document_Subset_Name", "FROM", "Document_Subsets", "AS", "T1", "JOIN", "Document_Subset_Members", "AS", "T2", "ON", "T1.Document_Subset_ID", "=", "T2.Document_Subset_ID", "JOIN", "Document_Objects", "AS", "T3", "ON", "T2.Document_Object_ID", "=", "T3.Document_Object_ID", "WHERE", "T3.owner", "=", "'Braeden", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "document_subset_name", "from", "document_subsets", "as", "t1", "join", "document_subset_members", "as", "t2", "on", "t1", ".", "document_subset_id", "=", "t2", ".", "document_subset_id", "join", "document_objects", "as", "t3", "on", "t2", ".", "document_object_id", "=", "t3", ".", "document_object_id", "where", "t3", ".", "owner", "=", "value"], "question": "Which unique subset does document owned by Braeden belong to? List the subset name.", "question_toks": ["Which", "unique", "subset", "does", "document", "owned", "by", "Braeden", "belong", "to", "?", "List", "the", "subset", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Braeden\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T1.Document_Subset_Name FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Document_Objects AS T3 ON T2.Document_Object_ID  =  T3.Document_Object_ID WHERE T3.owner  =  'Braeden'", "query_toks": ["SELECT", "DISTINCT", "T1.Document_Subset_Name", "FROM", "Document_Subsets", "AS", "T1", "JOIN", "Document_Subset_Members", "AS", "T2", "ON", "T1.Document_Subset_ID", "=", "T2.Document_Subset_ID", "JOIN", "Document_Objects", "AS", "T3", "ON", "T2.Document_Object_ID", "=", "T3.Document_Object_ID", "WHERE", "T3.owner", "=", "'Braeden", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "document_subset_name", "from", "document_subsets", "as", "t1", "join", "document_subset_members", "as", "t2", "on", "t1", ".", "document_subset_id", "=", "t2", ".", "document_subset_id", "join", "document_objects", "as", "t3", "on", "t2", ".", "document_object_id", "=", "t3", ".", "document_object_id", "where", "t3", ".", "owner", "=", "value"], "question": "What are the different subset names of all documents owned by Braeden?", "question_toks": ["What", "are", "the", "different", "subset", "names", "of", "all", "documents", "owned", "by", "Braeden", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Braeden\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T1.Document_Subset_ID ,  T2.Document_Subset_Name , count(DISTINCT T1.Document_Object_ID) FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID GROUP BY T1.Document_Subset_ID;", "query_toks": ["SELECT", "T1.Document_Subset_ID", ",", "T2.Document_Subset_Name", ",", "count", "(", "DISTINCT", "T1.Document_Object_ID", ")", "FROM", "Document_Subset_Members", "AS", "T1", "JOIN", "Document_Subsets", "AS", "T2", "ON", "T1.Document_Subset_ID", "=", "T2.Document_Subset_ID", "GROUP", "BY", "T1.Document_Subset_ID", ";"], "query_toks_no_value": ["select", "t1", ".", "document_subset_id", ",", "t2", ".", "document_subset_name", ",", "count", "(", "distinct", "t1", ".", "document_object_id", ")", "from", "document_subset_members", "as", "t1", "join", "document_subsets", "as", "t2", "on", "t1", ".", "document_subset_id", "=", "t2", ".", "document_subset_id", "group", "by", "t1", ".", "document_subset_id"], "question": "List subset id, name and number of different documents in each subset.", "question_toks": ["List", "subset", "id", ",", "name", "and", "number", "of", "different", "documents", "in", "each", "subset", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 18, true], null]]]], "where": [], "groupBy": [[0, 20, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T1.Document_Subset_ID ,  T2.Document_Subset_Name , count(DISTINCT T1.Document_Object_ID) FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID GROUP BY T1.Document_Subset_ID;", "query_toks": ["SELECT", "T1.Document_Subset_ID", ",", "T2.Document_Subset_Name", ",", "count", "(", "DISTINCT", "T1.Document_Object_ID", ")", "FROM", "Document_Subset_Members", "AS", "T1", "JOIN", "Document_Subsets", "AS", "T2", "ON", "T1.Document_Subset_ID", "=", "T2.Document_Subset_ID", "GROUP", "BY", "T1.Document_Subset_ID", ";"], "query_toks_no_value": ["select", "t1", ".", "document_subset_id", ",", "t2", ".", "document_subset_name", ",", "count", "(", "distinct", "t1", ".", "document_object_id", ")", "from", "document_subset_members", "as", "t1", "join", "document_subsets", "as", "t2", "on", "t1", ".", "document_subset_id", "=", "t2", ".", "document_subset_id", "group", "by", "t1", ".", "document_subset_id"], "question": "What is the subset id, name, and number of different documents for each subset?", "question_toks": ["What", "is", "the", "subset", "id", ",", "name", ",", "and", "number", "of", "different", "documents", "for", "each", "subset", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 18, true], null]]]], "where": [], "groupBy": [[0, 20, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "select t1.document_subset_id ,  t2.document_subset_name , count(distinct t1.document_object_id) from document_subset_members as t1 join document_subsets as t2 on t1.document_subset_id =  t2.document_subset_id group by t1.document_subset_id order by count(*) desc limit 1;", "query_toks": ["select", "t1.document_subset_id", ",", "t2.document_subset_name", ",", "count", "(", "distinct", "t1.document_object_id", ")", "from", "document_subset_members", "as", "t1", "join", "document_subsets", "as", "t2", "on", "t1.document_subset_id", "=", "t2.document_subset_id", "group", "by", "t1.document_subset_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "document_subset_id", ",", "t2", ".", "document_subset_name", ",", "count", "(", "distinct", "t1", ".", "document_object_id", ")", "from", "document_subset_members", "as", "t1", "join", "document_subsets", "as", "t2", "on", "t1", ".", "document_subset_id", "=", "t2", ".", "document_subset_id", "group", "by", "t1", ".", "document_subset_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which document subset has most of number of distinct documents ? List subset id , name and number of documents .", "question_toks": ["Which", "document", "subset", "has", "most", "of", "number", "of", "distinct", "documents", "?", "List", "subset", "id", ",", "name", "and", "number", "of", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 18, true], null]]]], "where": [], "groupBy": [[0, 20, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "select t1.document_subset_id ,  t2.document_subset_name , count(distinct t1.document_object_id) from document_subset_members as t1 join document_subsets as t2 on t1.document_subset_id =  t2.document_subset_id group by t1.document_subset_id order by count(*) desc limit 1;", "query_toks": ["select", "t1.document_subset_id", ",", "t2.document_subset_name", ",", "count", "(", "distinct", "t1.document_object_id", ")", "from", "document_subset_members", "as", "t1", "join", "document_subsets", "as", "t2", "on", "t1.document_subset_id", "=", "t2.document_subset_id", "group", "by", "t1.document_subset_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "document_subset_id", ",", "t2", ".", "document_subset_name", ",", "count", "(", "distinct", "t1", ".", "document_object_id", ")", "from", "document_subset_members", "as", "t1", "join", "document_subsets", "as", "t2", "on", "t1", ".", "document_subset_id", "=", "t2", ".", "document_subset_id", "group", "by", "t1", ".", "document_subset_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "For the document subset with the most number of different documents , what are the ids and names of the subset , as well as the number of documents ?", "question_toks": ["For", "the", "document", "subset", "with", "the", "most", "number", "of", "different", "documents", ",", "what", "are", "the", "ids", "and", "names", "of", "the", "subset", ",", "as", "well", "as", "the", "number", "of", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 18, true], null]]]], "where": [], "groupBy": [[0, 20, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID WHERE T2.Document_Subset_Name = \"Best for 2000\";", "query_toks": ["SELECT", "DISTINCT", "T1.Document_Object_ID", "FROM", "Document_Subset_Members", "AS", "T1", "JOIN", "Document_Subsets", "AS", "T2", "ON", "T1.Document_Subset_ID", "=", "T2.Document_Subset_ID", "WHERE", "T2.Document_Subset_Name", "=", "``", "Best", "for", "2000", "''", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "document_object_id", "from", "document_subset_members", "as", "t1", "join", "document_subsets", "as", "t2", "on", "t1", ".", "document_subset_id", "=", "t2", ".", "document_subset_id", "where", "t2", ".", "document_subset_name", "=", "value"], "question": "For document subset named 'Best for 2000', List all document id that in this subset.", "question_toks": ["For", "document", "subset", "named", "'Best", "for", "2000", "'", ",", "List", "all", "document", "id", "that", "in", "this", "subset", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Best for 2000\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID WHERE T2.Document_Subset_Name = \"Best for 2000\";", "query_toks": ["SELECT", "DISTINCT", "T1.Document_Object_ID", "FROM", "Document_Subset_Members", "AS", "T1", "JOIN", "Document_Subsets", "AS", "T2", "ON", "T1.Document_Subset_ID", "=", "T2.Document_Subset_ID", "WHERE", "T2.Document_Subset_Name", "=", "``", "Best", "for", "2000", "''", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "document_object_id", "from", "document_subset_members", "as", "t1", "join", "document_subsets", "as", "t2", "on", "t1", ".", "document_subset_id", "=", "t2", ".", "document_subset_id", "where", "t2", ".", "document_subset_name", "=", "value"], "question": "For the document subset named 'Best for 2000', what are the document ids in that subset?", "question_toks": ["For", "the", "document", "subset", "named", "'Best", "for", "2000", "'", ",", "what", "are", "the", "document", "ids", "in", "that", "subset", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Best for 2000\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T3.Document_Subset_Name ,  T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subset_Members  AS T2 ON T1.Related_Document_Object_ID = T2.Document_Object_ID JOIN Document_Subsets AS T3 ON T2.Document_Subset_ID =  T3.Document_Subset_ID", "query_toks": ["SELECT", "DISTINCT", "T3.Document_Subset_Name", ",", "T1.Document_Object_ID", "FROM", "Document_Subset_Members", "AS", "T1", "JOIN", "Document_Subset_Members", "AS", "T2", "ON", "T1.Related_Document_Object_ID", "=", "T2.Document_Object_ID", "JOIN", "Document_Subsets", "AS", "T3", "ON", "T2.Document_Subset_ID", "=", "T3.Document_Subset_ID"], "query_toks_no_value": ["select", "distinct", "t3", ".", "document_subset_name", ",", "t1", ".", "document_object_id", "from", "document_subset_members", "as", "t1", "join", "document_subset_members", "as", "t2", "on", "t1", ".", "related_document_object_id", "=", "t2", ".", "document_object_id", "join", "document_subsets", "as", "t3", "on", "t2", ".", "document_subset_id", "=", "t3", ".", "document_subset_id"], "question": "List all document subsets of documents that related to each document id. List the name of document subset and the document id.", "question_toks": ["List", "all", "document", "subsets", "of", "documents", "that", "related", "to", "each", "document", "id", ".", "List", "the", "name", "of", "document", "subset", "and", "the", "document", "id", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 18, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "select distinct t3.document_subset_name ,  t1.document_object_id from document_subset_members as t1 join document_subset_members  as t2 on t1.related_document_object_id = t2.document_object_id join document_subsets as t3 on t2.document_subset_id =  t3.document_subset_id", "query_toks": ["select", "distinct", "t3.document_subset_name", ",", "t1.document_object_id", "from", "document_subset_members", "as", "t1", "join", "document_subset_members", "as", "t2", "on", "t1.related_document_object_id", "=", "t2.document_object_id", "join", "document_subsets", "as", "t3", "on", "t2.document_subset_id", "=", "t3.document_subset_id"], "query_toks_no_value": ["select", "distinct", "t3", ".", "document_subset_name", ",", "t1", ".", "document_object_id", "from", "document_subset_members", "as", "t1", "join", "document_subset_members", "as", "t2", "on", "t1", ".", "related_document_object_id", "=", "t2", ".", "document_object_id", "join", "document_subsets", "as", "t3", "on", "t2", ".", "document_subset_id", "=", "t3", ".", "document_subset_id"], "question": "What are the different subsets of documents related to each document id , list the name of the document subset and id of the actual document ?", "question_toks": ["What", "are", "the", "different", "subsets", "of", "documents", "related", "to", "each", "document", "id", ",", "list", "the", "name", "of", "the", "document", "subset", "and", "id", "of", "the", "actual", "document", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 18, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "select t1.collection_name from collections as t1 join documents_in_collections as t2 on t1.collection_id = t2.collection_id join document_objects as t3 on t2.document_object_id  =  t3.document_object_id where t3.owner  =  'ransom'", "query_toks": ["select", "t1.collection_name", "from", "collections", "as", "t1", "join", "documents_in_collections", "as", "t2", "on", "t1.collection_id", "=", "t2.collection_id", "join", "document_objects", "as", "t3", "on", "t2.document_object_id", "=", "t3.document_object_id", "where", "t3.owner", "=", "\"ransom\""], "query_toks_no_value": ["select", "t1", ".", "collection_name", "from", "collections", "as", "t1", "join", "documents_in_collections", "as", "t2", "on", "t1", ".", "collection_id", "=", "t2", ".", "collection_id", "join", "document_objects", "as", "t3", "on", "t2", ".", "document_object_id", "=", "t3", ".", "document_object_id", "where", "t3", ".", "owner", "=", "value"], "question": "List the Collection Name that document owned by 'Ransom ' belong to .", "question_toks": ["List", "the", "Collection", "Name", "that", "document", "owned", "by", "'Ransom", "'", "belong", "to", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"ransom\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T1.Collection_Name FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID JOIN Document_Objects AS T3 ON T2.Document_object_id  =  T3.Document_object_id WHERE T3.owner  =  'Ransom'", "query_toks": ["SELECT", "T1.Collection_Name", "FROM", "Collections", "AS", "T1", "JOIN", "Documents_in_Collections", "AS", "T2", "ON", "T1.Collection_ID", "=", "T2.Collection_ID", "JOIN", "Document_Objects", "AS", "T3", "ON", "T2.Document_object_id", "=", "T3.Document_object_id", "WHERE", "T3.owner", "=", "'Ransom", "'"], "query_toks_no_value": ["select", "t1", ".", "collection_name", "from", "collections", "as", "t1", "join", "documents_in_collections", "as", "t2", "on", "t1", ".", "collection_id", "=", "t2", ".", "collection_id", "join", "document_objects", "as", "t3", "on", "t2", ".", "document_object_id", "=", "t3", ".", "document_object_id", "where", "t3", ".", "owner", "=", "value"], "question": "What is the collection name of a document owned by 'Ransom'?", "question_toks": ["What", "is", "the", "collection", "name", "of", "a", "document", "owned", "by", "'Ransom", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Ransom\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT count(*) ,  T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID GROUP BY T2.Document_Object_ID", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T2.Document_Object_ID", "FROM", "Collections", "AS", "T1", "JOIN", "Documents_in_Collections", "AS", "T2", "ON", "T1.Collection_ID", "=", "T2.Collection_ID", "GROUP", "BY", "T2.Document_Object_ID"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "document_object_id", "from", "collections", "as", "t1", "join", "documents_in_collections", "as", "t2", "on", "t1", ".", "collection_id", "=", "t2", ".", "collection_id", "group", "by", "t2", ".", "document_object_id"], "question": "How many collections does each document belong to? List the count and the document id.", "question_toks": ["How", "many", "collections", "does", "each", "document", "belong", "to", "?", "List", "the", "count", "and", "the", "document", "id", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 17, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [[0, 16, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT count(*) ,  T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID GROUP BY T2.Document_Object_ID", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T2.Document_Object_ID", "FROM", "Collections", "AS", "T1", "JOIN", "Documents_in_Collections", "AS", "T2", "ON", "T1.Collection_ID", "=", "T2.Collection_ID", "GROUP", "BY", "T2.Document_Object_ID"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "document_object_id", "from", "collections", "as", "t1", "join", "documents_in_collections", "as", "t2", "on", "t1", ".", "collection_id", "=", "t2", ".", "collection_id", "group", "by", "t2", ".", "document_object_id"], "question": "For each document object id, how many collections does it belong to?", "question_toks": ["For", "each", "document", "object", "id", ",", "how", "many", "collections", "does", "it", "belong", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 17, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [[0, 16, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Collections", "AS", "T1", "JOIN", "Documents_in_Collections", "AS", "T2", "ON", "T1.Collection_ID", "=", "T2.Collection_ID", "WHERE", "T1.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "collections", "as", "t1", "join", "documents_in_collections", "as", "t2", "on", "t1", ".", "collection_id", "=", "t2", ".", "collection_id", "where", "t1", ".", "collection_name", "=", "value"], "question": "How many documents does collection named 'Best' has?", "question_toks": ["How", "many", "documents", "does", "collection", "named", "'Best", "'", "has", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 17, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Collections", "AS", "T1", "JOIN", "Documents_in_Collections", "AS", "T2", "ON", "T1.Collection_ID", "=", "T2.Collection_ID", "WHERE", "T1.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "collections", "as", "t1", "join", "documents_in_collections", "as", "t2", "on", "t1", ".", "collection_id", "=", "t2", ".", "collection_id", "where", "t1", ".", "collection_name", "=", "value"], "question": "What is the number of documents in the collection named 'Best'?", "question_toks": ["What", "is", "the", "number", "of", "documents", "in", "the", "collection", "named", "'Best", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 17, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";", "query_toks": ["SELECT", "T2.Document_Object_ID", "FROM", "Collections", "AS", "T1", "JOIN", "Documents_in_Collections", "AS", "T2", "ON", "T1.Collection_ID", "=", "T2.Collection_ID", "WHERE", "T1.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "document_object_id", "from", "collections", "as", "t1", "join", "documents_in_collections", "as", "t2", "on", "t1", ".", "collection_id", "=", "t2", ".", "collection_id", "where", "t1", ".", "collection_name", "=", "value"], "question": "List the document id of all documents in collection named Best.", "question_toks": ["List", "the", "document", "id", "of", "all", "documents", "in", "collection", "named", "Best", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";", "query_toks": ["SELECT", "T2.Document_Object_ID", "FROM", "Collections", "AS", "T1", "JOIN", "Documents_in_Collections", "AS", "T2", "ON", "T1.Collection_ID", "=", "T2.Collection_ID", "WHERE", "T1.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "document_object_id", "from", "collections", "as", "t1", "join", "documents_in_collections", "as", "t2", "on", "t1", ".", "collection_id", "=", "t2", ".", "collection_id", "where", "t1", ".", "collection_name", "=", "value"], "question": "What is the number of document object ids in the collection named Best?", "question_toks": ["What", "is", "the", "number", "of", "document", "object", "ids", "in", "the", "collection", "named", "Best", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T1.Collection_Name ,  T1.Collection_ID ,  count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" GROUP BY T1.Collection_ID ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T1.Collection_Name", ",", "T1.Collection_ID", ",", "count", "(", "*", ")", "FROM", "Collections", "AS", "T1", "JOIN", "Documents_in_Collections", "AS", "T2", "ON", "T1.Collection_ID", "=", "T2.Collection_ID", "WHERE", "T1.Collection_Name", "=", "``", "Best", "''", "GROUP", "BY", "T1.Collection_ID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "collection_name", ",", "t1", ".", "collection_id", ",", "count", "(", "*", ")", "from", "collections", "as", "t1", "join", "documents_in_collections", "as", "t2", "on", "t1", ".", "collection_id", "=", "t2", ".", "collection_id", "where", "t1", ".", "collection_name", "=", "value", "group", "by", "t1", ".", "collection_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which collection have most number of documents? List collection name, id and number of documents.", "question_toks": ["Which", "collection", "have", "most", "number", "of", "documents", "?", "List", "collection", "name", ",", "id", "and", "number", "of", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [[0, 12, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT T1.Collection_Name ,  T1.Collection_ID ,  count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" GROUP BY T1.Collection_ID ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T1.Collection_Name", ",", "T1.Collection_ID", ",", "count", "(", "*", ")", "FROM", "Collections", "AS", "T1", "JOIN", "Documents_in_Collections", "AS", "T2", "ON", "T1.Collection_ID", "=", "T2.Collection_ID", "WHERE", "T1.Collection_Name", "=", "``", "Best", "''", "GROUP", "BY", "T1.Collection_ID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "collection_name", ",", "t1", ".", "collection_id", ",", "count", "(", "*", ")", "from", "collections", "as", "t1", "join", "documents_in_collections", "as", "t2", "on", "t1", ".", "collection_id", "=", "t2", ".", "collection_id", "where", "t1", ".", "collection_name", "=", "value", "group", "by", "t1", ".", "collection_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "For ever collection named 'Best', what is the name and id of the one with the most documents, and how many documents does it have?", "question_toks": ["For", "ever", "collection", "named", "'Best", "'", ",", "what", "is", "the", "name", "and", "id", "of", "the", "one", "with", "the", "most", "documents", ",", "and", "how", "many", "documents", "does", "it", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [[0, 12, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" AND T4.Collection_Name = \"Best\";", "query_toks": ["SELECT", "DISTINCT", "T1.Document_Object_ID", "FROM", "Document_Subset_Members", "AS", "T1", "JOIN", "Document_Subsets", "AS", "T2", "ON", "T1.Document_Subset_ID", "=", "T2.Document_Subset_ID", "JOIN", "Documents_in_Collections", "AS", "T3", "ON", "T1.Document_Object_ID", "=", "T3.Document_Object_ID", "JOIN", "Collections", "AS", "T4", "ON", "T3.Collection_ID", "=", "T4.Collection_ID", "WHERE", "T2.Document_Subset_Name", "=", "``", "Best", "for", "2000", "''", "AND", "T4.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "document_object_id", "from", "document_subset_members", "as", "t1", "join", "document_subsets", "as", "t2", "on", "t1", ".", "document_subset_id", "=", "t2", ".", "document_subset_id", "join", "documents_in_collections", "as", "t3", "on", "t1", ".", "document_object_id", "=", "t3", ".", "document_object_id", "join", "collections", "as", "t4", "on", "t3", ".", "collection_id", "=", "t4", ".", "collection_id", "where", "t2", ".", "document_subset_name", "=", "value", "and", "t4", ".", "collection_name", "=", "value"], "question": "List id of documents that in document subset Best for 2000 and collection named Best.", "question_toks": ["List", "id", "of", "documents", "that", "in", "document", "subset", "Best", "for", "2000", "and", "collection", "named", "Best", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 12, false], null]]}, "select": [true, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Best for 2000\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" AND T4.Collection_Name = \"Best\";", "query_toks": ["SELECT", "DISTINCT", "T1.Document_Object_ID", "FROM", "Document_Subset_Members", "AS", "T1", "JOIN", "Document_Subsets", "AS", "T2", "ON", "T1.Document_Subset_ID", "=", "T2.Document_Subset_ID", "JOIN", "Documents_in_Collections", "AS", "T3", "ON", "T1.Document_Object_ID", "=", "T3.Document_Object_ID", "JOIN", "Collections", "AS", "T4", "ON", "T3.Collection_ID", "=", "T4.Collection_ID", "WHERE", "T2.Document_Subset_Name", "=", "``", "Best", "for", "2000", "''", "AND", "T4.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "document_object_id", "from", "document_subset_members", "as", "t1", "join", "document_subsets", "as", "t2", "on", "t1", ".", "document_subset_id", "=", "t2", ".", "document_subset_id", "join", "documents_in_collections", "as", "t3", "on", "t1", ".", "document_object_id", "=", "t3", ".", "document_object_id", "join", "collections", "as", "t4", "on", "t3", ".", "collection_id", "=", "t4", ".", "collection_id", "where", "t2", ".", "document_subset_name", "=", "value", "and", "t4", ".", "collection_name", "=", "value"], "question": "What are the different document object ids in the subset named 'Best for 2000' and in the collection named 'Best'?", "question_toks": ["What", "are", "the", "different", "document", "object", "ids", "in", "the", "subset", "named", "'Best", "for", "2000", "'", "and", "in", "the", "collection", "named", "'Best", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 12, false], null]]}, "select": [true, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Best for 2000\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" EXCEPT SELECT DISTINCT T3.Document_Object_ID FROM Document_Subset_Members AS T3 JOIN Document_Subsets AS T4 ON T3.Document_Subset_ID =  T4.Document_Subset_ID WHERE T4.Document_Subset_Name = \"Best for 2000\"", "query_toks": ["SELECT", "DISTINCT", "T2.Document_Object_ID", "FROM", "Collections", "AS", "T1", "JOIN", "Documents_in_Collections", "AS", "T2", "ON", "T1.Collection_ID", "=", "T2.Collection_ID", "WHERE", "T1.Collection_Name", "=", "``", "Best", "''", "EXCEPT", "SELECT", "DISTINCT", "T3.Document_Object_ID", "FROM", "Document_Subset_Members", "AS", "T3", "JOIN", "Document_Subsets", "AS", "T4", "ON", "T3.Document_Subset_ID", "=", "T4.Document_Subset_ID", "WHERE", "T4.Document_Subset_Name", "=", "``", "Best", "for", "2000", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "document_object_id", "from", "collections", "as", "t1", "join", "documents_in_collections", "as", "t2", "on", "t1", ".", "collection_id", "=", "t2", ".", "collection_id", "where", "t1", ".", "collection_name", "=", "value", "except", "select", "distinct", "t3", ".", "document_object_id", "from", "document_subset_members", "as", "t3", "join", "document_subsets", "as", "t4", "on", "t3", ".", "document_subset_id", "=", "t4", ".", "document_subset_id", "where", "t4", ".", "document_subset_name", "=", "value"], "question": "List id of documents that in collection named Best but not in document subset Best for 2000.", "question_toks": ["List", "id", "of", "documents", "that", "in", "collection", "named", "Best", "but", "not", "in", "document", "subset", "Best", "for", "2000", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 17, false], null]]}, "select": [true, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Best for 2000\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" EXCEPT SELECT DISTINCT T3.Document_Object_ID FROM Document_Subset_Members AS T3 JOIN Document_Subsets AS T4 ON T3.Document_Subset_ID =  T4.Document_Subset_ID WHERE T4.Document_Subset_Name = \"Best for 2000\"", "query_toks": ["SELECT", "DISTINCT", "T2.Document_Object_ID", "FROM", "Collections", "AS", "T1", "JOIN", "Documents_in_Collections", "AS", "T2", "ON", "T1.Collection_ID", "=", "T2.Collection_ID", "WHERE", "T1.Collection_Name", "=", "``", "Best", "''", "EXCEPT", "SELECT", "DISTINCT", "T3.Document_Object_ID", "FROM", "Document_Subset_Members", "AS", "T3", "JOIN", "Document_Subsets", "AS", "T4", "ON", "T3.Document_Subset_ID", "=", "T4.Document_Subset_ID", "WHERE", "T4.Document_Subset_Name", "=", "``", "Best", "for", "2000", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "document_object_id", "from", "collections", "as", "t1", "join", "documents_in_collections", "as", "t2", "on", "t1", ".", "collection_id", "=", "t2", ".", "collection_id", "where", "t1", ".", "collection_name", "=", "value", "except", "select", "distinct", "t3", ".", "document_object_id", "from", "document_subset_members", "as", "t3", "join", "document_subsets", "as", "t4", "on", "t3", ".", "document_subset_id", "=", "t4", ".", "document_subset_id", "where", "t4", ".", "document_subset_name", "=", "value"], "question": "What are the different document object ids that are in the collection named Best but not in the subset named 'Best for 2000'?", "question_toks": ["What", "are", "the", "different", "document", "object", "ids", "that", "are", "in", "the", "collection", "named", "Best", "but", "not", "in", "the", "subset", "named", "'Best", "for", "2000", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 17, false], null]]}, "select": [true, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Best for 2000\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" OR T4.Collection_Name = \"Best\";", "query_toks": ["SELECT", "DISTINCT", "T1.Document_Object_ID", "FROM", "Document_Subset_Members", "AS", "T1", "JOIN", "Document_Subsets", "AS", "T2", "ON", "T1.Document_Subset_ID", "=", "T2.Document_Subset_ID", "JOIN", "Documents_in_Collections", "AS", "T3", "ON", "T1.Document_Object_ID", "=", "T3.Document_Object_ID", "JOIN", "Collections", "AS", "T4", "ON", "T3.Collection_ID", "=", "T4.Collection_ID", "WHERE", "T2.Document_Subset_Name", "=", "``", "Best", "for", "2000", "''", "OR", "T4.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "document_object_id", "from", "document_subset_members", "as", "t1", "join", "document_subsets", "as", "t2", "on", "t1", ".", "document_subset_id", "=", "t2", ".", "document_subset_id", "join", "documents_in_collections", "as", "t3", "on", "t1", ".", "document_object_id", "=", "t3", ".", "document_object_id", "join", "collections", "as", "t4", "on", "t3", ".", "collection_id", "=", "t4", ".", "collection_id", "where", "t2", ".", "document_subset_name", "=", "value", "or", "t4", ".", "collection_name", "=", "value"], "question": "List id of documents that in document subset Best for 2000 or in collection named Best.", "question_toks": ["List", "id", "of", "documents", "that", "in", "document", "subset", "Best", "for", "2000", "or", "in", "collection", "named", "Best", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 12, false], null]]}, "select": [true, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Best for 2000\"", null], "or", [false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" OR T4.Collection_Name = \"Best\";", "query_toks": ["SELECT", "DISTINCT", "T1.Document_Object_ID", "FROM", "Document_Subset_Members", "AS", "T1", "JOIN", "Document_Subsets", "AS", "T2", "ON", "T1.Document_Subset_ID", "=", "T2.Document_Subset_ID", "JOIN", "Documents_in_Collections", "AS", "T3", "ON", "T1.Document_Object_ID", "=", "T3.Document_Object_ID", "JOIN", "Collections", "AS", "T4", "ON", "T3.Collection_ID", "=", "T4.Collection_ID", "WHERE", "T2.Document_Subset_Name", "=", "``", "Best", "for", "2000", "''", "OR", "T4.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "document_object_id", "from", "document_subset_members", "as", "t1", "join", "document_subsets", "as", "t2", "on", "t1", ".", "document_subset_id", "=", "t2", ".", "document_subset_id", "join", "documents_in_collections", "as", "t3", "on", "t1", ".", "document_object_id", "=", "t3", ".", "document_object_id", "join", "collections", "as", "t4", "on", "t3", ".", "collection_id", "=", "t4", ".", "collection_id", "where", "t2", ".", "document_subset_name", "=", "value", "or", "t4", ".", "collection_name", "=", "value"], "question": "What are the different document ids that are in the subset named 'Best for 2000' or in the collection named 'Best'?", "question_toks": ["What", "are", "the", "different", "document", "ids", "that", "are", "in", "the", "subset", "named", "'Best", "for", "2000", "'", "or", "in", "the", "collection", "named", "'Best", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 12, false], null]]}, "select": [true, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Best for 2000\"", null], "or", [false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T4.Collection_Name FROM Collection_Subset_Members AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Related_Collection_ID = T2.Collection_ID JOIN Collections AS T3 ON T1.Collection_ID = T3.Collection_ID JOIN Collections AS T4 ON T2.Collection_ID = T4.Collection_ID WHERE T3.Collection_Name = \"Best\";", "query_toks": ["SELECT", "DISTINCT", "T4.Collection_Name", "FROM", "Collection_Subset_Members", "AS", "T1", "JOIN", "Collection_Subset_Members", "AS", "T2", "ON", "T1.Related_Collection_ID", "=", "T2.Collection_ID", "JOIN", "Collections", "AS", "T3", "ON", "T1.Collection_ID", "=", "T3.Collection_ID", "JOIN", "Collections", "AS", "T4", "ON", "T2.Collection_ID", "=", "T4.Collection_ID", "WHERE", "T3.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "distinct", "t4", ".", "collection_name", "from", "collection_subset_members", "as", "t1", "join", "collection_subset_members", "as", "t2", "on", "t1", ".", "related_collection_id", "=", "t2", ".", "collection_id", "join", "collections", "as", "t3", "on", "t1", ".", "collection_id", "=", "t3", ".", "collection_id", "join", "collections", "as", "t4", "on", "t2", ".", "collection_id", "=", "t4", ".", "collection_id", "where", "t3", ".", "collection_name", "=", "value"], "question": "List all name of collections that are related to collection named Best.", "question_toks": ["List", "all", "name", "of", "collections", "that", "are", "related", "to", "collection", "named", "Best", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 6], ["table_unit", 3], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 22, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 21, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 21, false], null], [0, 12, false], null]]}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T4.Collection_Name FROM Collection_Subset_Members AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Related_Collection_ID = T2.Collection_ID JOIN Collections AS T3 ON T1.Collection_ID = T3.Collection_ID JOIN Collections AS T4 ON T2.Collection_ID = T4.Collection_ID WHERE T3.Collection_Name = \"Best\";", "query_toks": ["SELECT", "DISTINCT", "T4.Collection_Name", "FROM", "Collection_Subset_Members", "AS", "T1", "JOIN", "Collection_Subset_Members", "AS", "T2", "ON", "T1.Related_Collection_ID", "=", "T2.Collection_ID", "JOIN", "Collections", "AS", "T3", "ON", "T1.Collection_ID", "=", "T3.Collection_ID", "JOIN", "Collections", "AS", "T4", "ON", "T2.Collection_ID", "=", "T4.Collection_ID", "WHERE", "T3.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "distinct", "t4", ".", "collection_name", "from", "collection_subset_members", "as", "t1", "join", "collection_subset_members", "as", "t2", "on", "t1", ".", "related_collection_id", "=", "t2", ".", "collection_id", "join", "collections", "as", "t3", "on", "t1", ".", "collection_id", "=", "t3", ".", "collection_id", "join", "collections", "as", "t4", "on", "t2", ".", "collection_id", "=", "t4", ".", "collection_id", "where", "t3", ".", "collection_name", "=", "value"], "question": "What are the names of the collections that are related to the collection named Best?", "question_toks": ["What", "are", "the", "names", "of", "the", "collections", "that", "are", "related", "to", "the", "collection", "named", "Best", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 6], ["table_unit", 3], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 22, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 21, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 21, false], null], [0, 12, false], null]]}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT count(DISTINCT T1.Related_Collection_ID) FROM Collection_Subset_Members AS T1 JOIN Collections AS T2 ON T1.Collection_ID  =  T2.Collection_ID WHERE T2.Collection_Name = \"Best\";", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T1.Related_Collection_ID", ")", "FROM", "Collection_Subset_Members", "AS", "T1", "JOIN", "Collections", "AS", "T2", "ON", "T1.Collection_ID", "=", "T2.Collection_ID", "WHERE", "T2.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "related_collection_id", ")", "from", "collection_subset_members", "as", "t1", "join", "collections", "as", "t2", "on", "t1", ".", "collection_id", "=", "t2", ".", "collection_id", "where", "t2", ".", "collection_name", "=", "value"], "question": "How many collections that are related to collection named Best?", "question_toks": ["How", "many", "collections", "that", "are", "related", "to", "collection", "named", "Best", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 12, false], null]]}, "select": [false, [[3, [0, [0, 22, true], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT count(DISTINCT T1.Related_Collection_ID) FROM Collection_Subset_Members AS T1 JOIN Collections AS T2 ON T1.Collection_ID  =  T2.Collection_ID WHERE T2.Collection_Name = \"Best\";", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T1.Related_Collection_ID", ")", "FROM", "Collection_Subset_Members", "AS", "T1", "JOIN", "Collections", "AS", "T2", "ON", "T1.Collection_ID", "=", "T2.Collection_ID", "WHERE", "T2.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "related_collection_id", ")", "from", "collection_subset_members", "as", "t1", "join", "collections", "as", "t2", "on", "t1", ".", "collection_id", "=", "t2", ".", "collection_id", "where", "t2", ".", "collection_name", "=", "value"], "question": "How many different collections are related to the one named 'Best'?", "question_toks": ["How", "many", "different", "collections", "are", "related", "to", "the", "one", "named", "'Best", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 12, false], null]]}, "select": [false, [[3, [0, [0, 22, true], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T1.Collection_Subset_Name FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID JOIN Collections AS T3 ON T2.Collection_ID =  T3.Collection_ID WHERE T3.Collection_Name = \"Best\";", "query_toks": ["SELECT", "DISTINCT", "T1.Collection_Subset_Name", "FROM", "Collection_Subsets", "AS", "T1", "JOIN", "Collection_Subset_Members", "AS", "T2", "ON", "T1.Collection_Subset_ID", "=", "T2.Collection_Subset_ID", "JOIN", "Collections", "AS", "T3", "ON", "T2.Collection_ID", "=", "T3.Collection_ID", "WHERE", "T3.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "collection_subset_name", "from", "collection_subsets", "as", "t1", "join", "collection_subset_members", "as", "t2", "on", "t1", ".", "collection_subset_id", "=", "t2", ".", "collection_subset_id", "join", "collections", "as", "t3", "on", "t2", ".", "collection_id", "=", "t3", ".", "collection_id", "where", "t3", ".", "collection_name", "=", "value"], "question": "Which collection subset does collection name Best in? List collection subset name.", "question_toks": ["Which", "collection", "subset", "does", "collection", "name", "Best", "in", "?", "List", "collection", "subset", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 6], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 23, false], null], "and", [false, 2, [0, [0, 21, false], null], [0, 12, false], null]]}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "cre_Doc_and_collections", "query": "SELECT DISTINCT T1.Collection_Subset_Name FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID JOIN Collections AS T3 ON T2.Collection_ID =  T3.Collection_ID WHERE T3.Collection_Name = \"Best\";", "query_toks": ["SELECT", "DISTINCT", "T1.Collection_Subset_Name", "FROM", "Collection_Subsets", "AS", "T1", "JOIN", "Collection_Subset_Members", "AS", "T2", "ON", "T1.Collection_Subset_ID", "=", "T2.Collection_Subset_ID", "JOIN", "Collections", "AS", "T3", "ON", "T2.Collection_ID", "=", "T3.Collection_ID", "WHERE", "T3.Collection_Name", "=", "``", "Best", "''", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "collection_subset_name", "from", "collection_subsets", "as", "t1", "join", "collection_subset_members", "as", "t2", "on", "t1", ".", "collection_subset_id", "=", "t2", ".", "collection_subset_id", "join", "collections", "as", "t3", "on", "t2", ".", "collection_id", "=", "t3", ".", "collection_id", "where", "t3", ".", "collection_name", "=", "value"], "question": "What are the collection subsets that the collection named 'Best' in?", "question_toks": ["What", "are", "the", "collection", "subsets", "that", "the", "collection", "named", "'Best", "'", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 6], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 23, false], null], "and", [false, 2, [0, [0, 21, false], null], [0, 12, false], null]]}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Best\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Document_Subsets", "schema": ["Document_Subset_ID:number", "Document_Subset_Name:text", "Document_Subset_Details:text"]}, {"name": "Collection_Subsets", "schema": ["Collection_Subset_ID:number", "Collection_Subset_Name:text", "Collecrtion_Subset_Details:text"]}, {"name": "Document_Objects", "schema": ["Document_Object_ID:number", "Parent_Document_Object_ID:number", "Owner:text", "Description:text", "Other_Details:text"]}, {"name": "Collections", "schema": ["Collection_ID:number", "Parent_Collection_ID:number", "Collection_Name:text", "Collection_Description:text"]}, {"name": "Documents_in_Collections", "schema": ["Document_Object_ID:number", "Collection_ID:number"]}, {"name": "Document_Subset_Members", "schema": ["Document_Object_ID:number", "Related_Document_Object_ID:number", "Document_Subset_ID:number"]}, {"name": "Collection_Subset_Members", "schema": ["Collection_ID:number", "Related_Collection_ID:number", "Collection_Subset_ID:number"]}]}
{"db_id": "sing_contest", "query": "SELECT count(*) FROM songs WHERE name LIKE \"%Love%\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "songs", "WHERE", "name", "LIKE", "``", "%", "Love", "%", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "songs", "where", "name", "like", "value"], "question": "How many songs contain \"Love\" in their names?", "question_toks": ["How", "many", "songs", "contain", "``", "Love", "''", "in", "their", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 7, false], null], "\"%Love%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT name FROM songs ORDER BY name", "query_toks": ["SELECT", "name", "FROM", "songs", "ORDER", "BY", "name"], "query_toks_no_value": ["select", "name", "from", "songs", "order", "by", "name"], "question": "List the name of the songs in ascending, lexicographical order.", "question_toks": ["List", "the", "name", "of", "the", "songs", "in", "ascending", ",", "lexicographical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 7, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "select name , language from songs", "query_toks": ["select", "name", ",", "language", "from", "songs"], "query_toks_no_value": ["select", "name", ",", "language", "from", "songs"], "question": "List the names and languages of the songs .", "question_toks": ["List", "the", "names", "and", "languages", "of", "the", "songs", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT max(voice_sound_quality) ,  min(voice_sound_quality) FROM performance_score", "query_toks": ["SELECT", "max", "(", "voice_sound_quality", ")", ",", "min", "(", "voice_sound_quality", ")", "FROM", "performance_score"], "query_toks_no_value": ["select", "max", "(", "voice_sound_quality", ")", ",", "min", "(", "voice_sound_quality", ")", "from", "performance_score"], "question": "What are the maximum and minimum voice sound quality score of the performances?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "voice", "sound", "quality", "score", "of", "the", "performances", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 11, false], null]], [2, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT T1.voice_sound_quality ,  T1.rhythm_tempo ,  T1.stage_presence FROM performance_score AS T1 JOIN participants AS T2 ON T1.participant_id  =  T2.id WHERE T2.name  =  'Freeway'", "query_toks": ["SELECT", "T1.voice_sound_quality", ",", "T1.rhythm_tempo", ",", "T1.stage_presence", "FROM", "performance_score", "AS", "T1", "JOIN", "participants", "AS", "T2", "ON", "T1.participant_id", "=", "T2.id", "WHERE", "T2.name", "=", "'Freeway", "'"], "query_toks_no_value": ["select", "t1", ".", "voice_sound_quality", ",", "t1", ".", "rhythm_tempo", ",", "t1", ".", "stage_presence", "from", "performance_score", "as", "t1", "join", "participants", "as", "t2", "on", "t1", ".", "participant_id", "=", "t2", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "What are the voice sound quality score, rhythm tempo score and stage presence score performed by the participant named 'Freeway'?", "question_toks": ["What", "are", "the", "voice", "sound", "quality", "score", ",", "rhythm", "tempo", "score", "and", "stage", "presence", "score", "performed", "by", "the", "participant", "named", "'Freeway", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Freeway\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT id ,  LANGUAGE ,  original_artist FROM songs WHERE name != 'Love'", "query_toks": ["SELECT", "id", ",", "LANGUAGE", ",", "original_artist", "FROM", "songs", "WHERE", "name", "!", "=", "'Love", "'"], "query_toks_no_value": ["select", "id", ",", "language", ",", "original_artist", "from", "songs", "where", "name", "!", "=", "value"], "question": "What are the id, language and original artist of the songs whose name is not 'Love'?", "question_toks": ["What", "are", "the", "id", ",", "language", "and", "original", "artist", "of", "the", "songs", "whose", "name", "is", "not", "'Love", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 7, [0, [0, 7, false], null], "\"Love\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT name ,  original_artist FROM songs WHERE english_translation  =  'All the streets of love'", "query_toks": ["SELECT", "name", ",", "original_artist", "FROM", "songs", "WHERE", "english_translation", "=", "'All", "the", "streets", "of", "love", "'"], "query_toks_no_value": ["select", "name", ",", "original_artist", "from", "songs", "where", "english_translation", "=", "value"], "question": "What are the names and original artists of the song whose English translation is 'All the streets of love'?", "question_toks": ["What", "are", "the", "names", "and", "original", "artists", "of", "the", "song", "whose", "English", "translation", "is", "'All", "the", "streets", "of", "love", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"All the streets of love\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT DISTINCT T2.stage_presence FROM songs AS T1 JOIN performance_score AS T2 ON T1.id  =  T2.songs_id WHERE T1.language  =  'English'", "query_toks": ["SELECT", "DISTINCT", "T2.stage_presence", "FROM", "songs", "AS", "T1", "JOIN", "performance_score", "AS", "T2", "ON", "T1.id", "=", "T2.songs_id", "WHERE", "T1.language", "=", "'English", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "stage_presence", "from", "songs", "as", "t1", "join", "performance_score", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "songs_id", "where", "t1", ".", "language", "=", "value"], "question": "What are the distinct stage presence scores for all the songs that are in language 'English' ?", "question_toks": ["What", "are", "the", "distinct", "stage", "presence", "scores", "for", "all", "the", "songs", "that", "are", "in", "language", "'English", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT T1.id ,  T1.Name FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.id", ",", "T1.Name", "FROM", "participants", "AS", "T1", "JOIN", "performance_score", "AS", "T2", "ON", "T2.participant_id", "=", "T1.id", "GROUP", "BY", "T1.id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "participants", "as", "t1", "join", "performance_score", "as", "t2", "on", "t2", ".", "participant_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the ids and names of the participants who have performed at least two songs?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "the", "participants", "who", "have", "performed", "at", "least", "two", "songs", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT T1.id ,  T1.Name ,  T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id GROUP BY T1.id ORDER BY count(*)", "query_toks": ["SELECT", "T1.id", ",", "T1.Name", ",", "T1.popularity", "FROM", "participants", "AS", "T1", "JOIN", "performance_score", "AS", "T2", "ON", "T2.participant_id", "=", "T1.id", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", ",", "t1", ".", "popularity", "from", "participants", "as", "t1", "join", "performance_score", "as", "t2", "on", "t2", ".", "participant_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")"], "question": "What are the ids, names and popularity of the participants, order by the number of songs they perform?", "question_toks": ["What", "are", "the", "ids", ",", "names", "and", "popularity", "of", "the", "participants", ",", "order", "by", "the", "number", "of", "songs", "they", "perform", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT T1.id ,  T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id WHERE T2.voice_sound_quality  =  5 OR T2.rhythm_tempo  =  5", "query_toks": ["SELECT", "T1.id", ",", "T1.name", "FROM", "participants", "AS", "T1", "JOIN", "performance_score", "AS", "T2", "ON", "T2.participant_id", "=", "T1.id", "WHERE", "T2.voice_sound_quality", "=", "5", "OR", "T2.rhythm_tempo", "=", "5"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "participants", "as", "t1", "join", "performance_score", "as", "t2", "on", "t2", ".", "participant_id", "=", "t1", ".", "id", "where", "t2", ".", "voice_sound_quality", "=", "value", "or", "t2", ".", "rhythm_tempo", "=", "value"], "question": "What are the id and name of the participants who received score 5 for their sound quality or rhythm tempo?", "question_toks": ["What", "are", "the", "id", "and", "name", "of", "the", "participants", "who", "received", "score", "5", "for", "their", "sound", "quality", "or", "rhythm", "tempo", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], 5.0, null], "or", [false, 2, [0, [0, 12, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT T1.voice_sound_quality FROM performance_score AS T1 JOIN songs AS T2 ON T1.songs_id  =  T2.id WHERE T2.name  =  ' The Balkan Girls ' AND T2.language  =  'English'", "query_toks": ["SELECT", "T1.voice_sound_quality", "FROM", "performance_score", "AS", "T1", "JOIN", "songs", "AS", "T2", "ON", "T1.songs_id", "=", "T2.id", "WHERE", "T2.name", "=", "'", "The", "Balkan", "Girls", "'", "AND", "T2.language", "=", "'English", "'"], "query_toks_no_value": ["select", "t1", ".", "voice_sound_quality", "from", "performance_score", "as", "t1", "join", "songs", "as", "t2", "on", "t1", ".", "songs_id", "=", "t2", ".", "id", "where", "t2", ".", "name", "=", "value", "and", "t2", ".", "language", "=", "value"], "question": "What are the voice sound quality scores received for the song named ' The Balkan Girls ' in English language ?", "question_toks": ["What", "are", "the", "voice", "sound", "quality", "scores", "received", "for", "the", "song", "named", "'", "The", "Balkan", "Girls", "'", "in", "English", "language", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\" The Balkan Girls \"", null], "and", [false, 2, [0, [0, 5, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT T1.id ,  T1.name FROM songs AS T1 JOIN performance_score AS T2 ON T1.id  =  T2.songs_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.id", ",", "T1.name", "FROM", "songs", "AS", "T1", "JOIN", "performance_score", "AS", "T2", "ON", "T1.id", "=", "T2.songs_id", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "songs", "as", "t1", "join", "performance_score", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "songs_id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the id and name of the song sung by the most participants?", "question_toks": ["What", "are", "the", "id", "and", "name", "of", "the", "song", "sung", "by", "the", "most", "participants", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT count(*) FROM performance_score WHERE stage_presence  <  7 OR stage_presence  >  9", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "performance_score", "WHERE", "stage_presence", "<", "7", "OR", "stage_presence", ">", "9"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "performance_score", "where", "stage_presence", "<", "value", "or", "stage_presence", ">", "value"], "question": "How many performances have a stage presence score less than 7 or higher than 9?", "question_toks": ["How", "many", "performances", "have", "a", "stage", "presence", "score", "less", "than", "7", "or", "higher", "than", "9", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 7.0, null], "or", [false, 3, [0, [0, 13, false], null], 9.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT count(*) FROM songs WHERE id NOT IN ( SELECT songs_id FROM performance_score );", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "songs", "WHERE", "id", "NOT", "IN", "(", "SELECT", "songs_id", "FROM", "performance_score", ")", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "songs", "where", "id", "not", "in", "(", "select", "songs_id", "from", "performance_score", ")"], "question": "How many songs listed are not performed?", "question_toks": ["How", "many", "songs", "listed", "are", "not", "performed", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT avg(T2.rhythm_tempo) ,  T1.language FROM songs AS T1 JOIN performance_score AS T2 ON T2.songs_id  =  T1.id GROUP BY T1.language", "query_toks": ["SELECT", "avg", "(", "T2.rhythm_tempo", ")", ",", "T1.language", "FROM", "songs", "AS", "T1", "JOIN", "performance_score", "AS", "T2", "ON", "T2.songs_id", "=", "T1.id", "GROUP", "BY", "T1.language"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "rhythm_tempo", ")", ",", "t1", ".", "language", "from", "songs", "as", "t1", "join", "performance_score", "as", "t2", "on", "t2", ".", "songs_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "language"], "question": "What are the average rhythm scores for the songs in each different language?", "question_toks": ["What", "are", "the", "average", "rhythm", "scores", "for", "the", "songs", "in", "each", "different", "language", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 4, false], null]]}, "select": [false, [[5, [0, [0, 12, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT DISTINCT T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id JOIN songs AS T3 ON T3.id  =  T2.songs_id WHERE T3.language  =  'English'", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "participants", "AS", "T1", "JOIN", "performance_score", "AS", "T2", "ON", "T2.participant_id", "=", "T1.id", "JOIN", "songs", "AS", "T3", "ON", "T3.id", "=", "T2.songs_id", "WHERE", "T3.language", "=", "'English", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "participants", "as", "t1", "join", "performance_score", "as", "t2", "on", "t2", ".", "participant_id", "=", "t1", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "id", "=", "t2", ".", "songs_id", "where", "t3", ".", "language", "=", "value"], "question": "What are the distinct names of the participants who have sung a song in 'English'?", "question_toks": ["What", "are", "the", "distinct", "names", "of", "the", "participants", "who", "have", "sung", "a", "song", "in", "'English", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 4, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT T1.name ,  T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id JOIN songs AS T3 ON T3.id  =  T2.songs_id WHERE T3.language  =  'Croatian' INTERSECT SELECT T1.name ,  T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id JOIN songs AS T3 ON T3.id  =  T2.songs_id WHERE T3.language  =  'English'", "query_toks": ["SELECT", "T1.name", ",", "T1.popularity", "FROM", "participants", "AS", "T1", "JOIN", "performance_score", "AS", "T2", "ON", "T2.participant_id", "=", "T1.id", "JOIN", "songs", "AS", "T3", "ON", "T3.id", "=", "T2.songs_id", "WHERE", "T3.language", "=", "'Croatian", "'", "INTERSECT", "SELECT", "T1.name", ",", "T1.popularity", "FROM", "participants", "AS", "T1", "JOIN", "performance_score", "AS", "T2", "ON", "T2.participant_id", "=", "T1.id", "JOIN", "songs", "AS", "T3", "ON", "T3.id", "=", "T2.songs_id", "WHERE", "T3.language", "=", "'English", "'"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "popularity", "from", "participants", "as", "t1", "join", "performance_score", "as", "t2", "on", "t2", ".", "participant_id", "=", "t1", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "id", "=", "t2", ".", "songs_id", "where", "t3", ".", "language", "=", "value", "intersect", "select", "t1", ".", "name", ",", "t1", ".", "popularity", "from", "participants", "as", "t1", "join", "performance_score", "as", "t2", "on", "t2", ".", "participant_id", "=", "t1", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "id", "=", "t2", ".", "songs_id", "where", "t3", ".", "language", "=", "value"], "question": "What are the name and popularity of participants who have sung a song both in 'Croatian' language and in 'English' language?", "question_toks": ["What", "are", "the", "name", "and", "popularity", "of", "participants", "who", "have", "sung", "a", "song", "both", "in", "'Croatian", "'", "language", "and", "in", "'English", "'", "language", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 4, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Croatian\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 4, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "SELECT name FROM songs WHERE name LIKE \"%Is%\"", "query_toks": ["SELECT", "name", "FROM", "songs", "WHERE", "name", "LIKE", "``", "%", "Is", "%", "''"], "query_toks_no_value": ["select", "name", "from", "songs", "where", "name", "like", "value"], "question": "Which song names have the substring \"Is\"?", "question_toks": ["Which", "song", "names", "have", "the", "substring", "``", "Is", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 9, [0, [0, 7, false], null], "\"%Is%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "sing_contest", "query": "select t2.original_artist from performance_score as t1 join songs as t2 on t2.id  =  t1.songs_id where t1.rhythm_tempo  >  5 order by t1.voice_sound_quality desc", "query_toks": ["select", "t2.original_artist", "from", "performance_score", "as", "t1", "join", "songs", "as", "t2", "on", "t2.id", "=", "t1.songs_id", "where", "t1.rhythm_tempo", ">", "5", "order", "by", "t1.voice_sound_quality", "desc"], "query_toks_no_value": ["select", "t2", ".", "original_artist", "from", "performance_score", "as", "t1", "join", "songs", "as", "t2", "on", "t2", ".", "id", "=", "t1", ".", "songs_id", "where", "t1", ".", "rhythm_tempo", ">", "value", "order", "by", "t1", ".", "voice_sound_quality", "desc"], "question": "Find the original artists who sing songs with rhythm tempo above 5 , and list results in descending order of voice sound quality .", "question_toks": ["Find", "the", "original", "artists", "who", "sing", "songs", "with", "rhythm", "tempo", "above", "5", ",", "and", "list", "results", "in", "descending", "order", "of", "voice", "sound", "quality", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "participants", "schema": ["id:number", "name:text", "popularity:number"]}, {"name": "songs", "schema": ["id:number", "language:text", "original_artist:text", "name:text", "english_translation:text"]}, {"name": "performance_score", "schema": ["participant_id:number", "songs_id:number", "voice_sound_quality:number", "rhythm_tempo:number", "stage_presence:number"]}]}
{"db_id": "address_1", "query": "SELECT count(*) FROM City", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "City"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "city"], "question": "How many cities do we have?", "question_toks": ["How", "many", "cities", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT count(*) FROM City", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "City"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "city"], "question": "Count the number of cities.", "question_toks": ["Count", "the", "number", "of", "cities", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "select distinct state from city", "query_toks": ["select", "distinct", "state", "from", "city"], "query_toks_no_value": ["select", "distinct", "state", "from", "city"], "question": "List all different states .", "question_toks": ["List", "all", "different", "states", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT DISTINCT state FROM City", "query_toks": ["SELECT", "DISTINCT", "state", "FROM", "City"], "query_toks_no_value": ["select", "distinct", "state", "from", "city"], "question": "What are all the distinct states?", "question_toks": ["What", "are", "all", "the", "distinct", "states", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT count(DISTINCT country) FROM City", "query_toks": ["SELECT", "count", "(", "DISTINCT", "country", ")", "FROM", "City"], "query_toks_no_value": ["select", "count", "(", "distinct", "country", ")", "from", "city"], "question": "How many countries do we have?", "question_toks": ["How", "many", "countries", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 15, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT count(DISTINCT country) FROM City", "query_toks": ["SELECT", "count", "(", "DISTINCT", "country", ")", "FROM", "City"], "query_toks_no_value": ["select", "count", "(", "distinct", "country", ")", "from", "city"], "question": "Count the number of coutries.", "question_toks": ["Count", "the", "number", "of", "coutries", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 15, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT city_name ,  city_code ,  state ,  country FROM City", "query_toks": ["SELECT", "city_name", ",", "city_code", ",", "state", ",", "country", "FROM", "City"], "query_toks_no_value": ["select", "city_name", ",", "city_code", ",", "state", ",", "country", "from", "city"], "question": "Show names, codes, states, countries for all cities.", "question_toks": ["Show", "names", ",", "codes", ",", "states", ",", "countries", "for", "all", "cities", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT city_name ,  city_code ,  state ,  country FROM City", "query_toks": ["SELECT", "city_name", ",", "city_code", ",", "state", ",", "country", "FROM", "City"], "query_toks_no_value": ["select", "city_name", ",", "city_code", ",", "state", ",", "country", "from", "city"], "question": "What are the names, codes, states, and countries for all cities?", "question_toks": ["What", "are", "the", "names", ",", "codes", ",", "states", ",", "and", "countries", "for", "all", "cities", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT latitude ,  longitude FROM City WHERE city_name  =  \"Baltimore\"", "query_toks": ["SELECT", "latitude", ",", "longitude", "FROM", "City", "WHERE", "city_name", "=", "``", "Baltimore", "''"], "query_toks_no_value": ["select", "latitude", ",", "longitude", "from", "city", "where", "city_name", "=", "value"], "question": "What is the latitude and longitude for Baltimore?", "question_toks": ["What", "is", "the", "latitude", "and", "longitude", "for", "Baltimore", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Baltimore\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT latitude ,  longitude FROM City WHERE city_name  =  \"Baltimore\"", "query_toks": ["SELECT", "latitude", ",", "longitude", "FROM", "City", "WHERE", "city_name", "=", "``", "Baltimore", "''"], "query_toks_no_value": ["select", "latitude", ",", "longitude", "from", "city", "where", "city_name", "=", "value"], "question": "What latitude and longitude correspond to Baltimore?", "question_toks": ["What", "latitude", "and", "longitude", "correspond", "to", "Baltimore", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Baltimore\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT city_name FROM City WHERE state  =  \"PA\"", "query_toks": ["SELECT", "city_name", "FROM", "City", "WHERE", "state", "=", "``", "PA", "''"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "state", "=", "value"], "question": "Show names for all cities in state PA.", "question_toks": ["Show", "names", "for", "all", "cities", "in", "state", "PA", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"PA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT city_name FROM City WHERE state  =  \"PA\"", "query_toks": ["SELECT", "city_name", "FROM", "City", "WHERE", "state", "=", "``", "PA", "''"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "state", "=", "value"], "question": "What are the names of all cities in PA?", "question_toks": ["What", "are", "the", "names", "of", "all", "cities", "in", "PA", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"PA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT count(*) FROM City WHERE country  =  \"CANADA\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "City", "WHERE", "country", "=", "``", "CANADA", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "city", "where", "country", "=", "value"], "question": "How many cities are in Canada?", "question_toks": ["How", "many", "cities", "are", "in", "Canada", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"CANADA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT count(*) FROM City WHERE country  =  \"CANADA\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "City", "WHERE", "country", "=", "``", "CANADA", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "city", "where", "country", "=", "value"], "question": "Count the number of cities in Canada.", "question_toks": ["Count", "the", "number", "of", "cities", "in", "Canada", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"CANADA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT city_name FROM City WHERE country  =  \"USA\" ORDER BY latitude", "query_toks": ["SELECT", "city_name", "FROM", "City", "WHERE", "country", "=", "``", "USA", "''", "ORDER", "BY", "latitude"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "country", "=", "value", "order", "by", "latitude"], "question": "Show names for all USA city ordered by latitude.", "question_toks": ["Show", "names", "for", "all", "USA", "city", "ordered", "by", "latitude", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 16, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT city_name FROM City WHERE country  =  \"USA\" ORDER BY latitude", "query_toks": ["SELECT", "city_name", "FROM", "City", "WHERE", "country", "=", "``", "USA", "''", "ORDER", "BY", "latitude"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "country", "=", "value", "order", "by", "latitude"], "question": "What are all the city names for cities in the USA, ordered by latitude?", "question_toks": ["What", "are", "all", "the", "city", "names", "for", "cities", "in", "the", "USA", ",", "ordered", "by", "latitude", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 16, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT state ,  count(*) FROM City GROUP BY state", "query_toks": ["SELECT", "state", ",", "count", "(", "*", ")", "FROM", "City", "GROUP", "BY", "state"], "query_toks_no_value": ["select", "state", ",", "count", "(", "*", ")", "from", "city", "group", "by", "state"], "question": "Show all states and number of cities in each state.", "question_toks": ["Show", "all", "states", "and", "number", "of", "cities", "in", "each", "state", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT state ,  count(*) FROM City GROUP BY state", "query_toks": ["SELECT", "state", ",", "count", "(", "*", ")", "FROM", "City", "GROUP", "BY", "state"], "query_toks_no_value": ["select", "state", ",", "count", "(", "*", ")", "from", "city", "group", "by", "state"], "question": "How many cities are in each state?", "question_toks": ["How", "many", "cities", "are", "in", "each", "state", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "select country ,  count(*) from city group by country", "query_toks": ["select", "country", ",", "count", "(", "*", ")", "from", "city", "group", "by", "country"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "city", "group", "by", "country"], "question": "Show all countries and number of cities in each .", "question_toks": ["Show", "all", "countries", "and", "number", "of", "cities", "in", "each", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT country ,  count(*) FROM City GROUP BY country", "query_toks": ["SELECT", "country", ",", "count", "(", "*", ")", "FROM", "City", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "city", "group", "by", "country"], "question": "How many cities are there in each country?", "question_toks": ["How", "many", "cities", "are", "there", "in", "each", "country", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT state FROM City GROUP BY state HAVING count(*)  >=  2", "query_toks": ["SELECT", "state", "FROM", "City", "GROUP", "BY", "state", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "state", "from", "city", "group", "by", "state", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "List all states with at least two cities.", "question_toks": ["List", "all", "states", "with", "at", "least", "two", "cities", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT state FROM City GROUP BY state HAVING count(*)  >=  2", "query_toks": ["SELECT", "state", "FROM", "City", "GROUP", "BY", "state", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "state", "from", "city", "group", "by", "state", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which states have at least two cities?", "question_toks": ["Which", "states", "have", "at", "least", "two", "cities", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT state FROM City GROUP BY state ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "state", "FROM", "City", "GROUP", "BY", "state", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "state", "from", "city", "group", "by", "state", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which state has most number of cities?", "question_toks": ["Which", "state", "has", "most", "number", "of", "cities", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT state FROM City GROUP BY state ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "state", "FROM", "City", "GROUP", "BY", "state", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "state", "from", "city", "group", "by", "state", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give the state that has the most cities.", "question_toks": ["Give", "the", "state", "that", "has", "the", "most", "cities", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT country FROM City GROUP BY country ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "country", "FROM", "City", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "city", "group", "by", "country", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Which country has fewest number of cities?", "question_toks": ["Which", "country", "has", "fewest", "number", "of", "cities", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT country FROM City GROUP BY country ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "country", "FROM", "City", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "city", "group", "by", "country", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Give the country with the fewest number of cities.", "question_toks": ["Give", "the", "country", "with", "the", "fewest", "number", "of", "cities", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T2.Fname ,  T2.Lname FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"MD\"", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Lname", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "WHERE", "T1.state", "=", "``", "MD", "''"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "where", "t1", ".", "state", "=", "value"], "question": "Show the first name and the last name for students living in state MD.", "question_toks": ["Show", "the", "first", "name", "and", "the", "last", "name", "for", "students", "living", "in", "state", "MD", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"MD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T2.Fname ,  T2.Lname FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"MD\"", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Lname", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "WHERE", "T1.state", "=", "``", "MD", "''"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "where", "t1", ".", "state", "=", "value"], "question": "What are the full names of students living in MD?", "question_toks": ["What", "are", "the", "full", "names", "of", "students", "living", "in", "MD", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"MD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.country  =  \"CHINA\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "WHERE", "T1.country", "=", "``", "CHINA", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "where", "t1", ".", "country", "=", "value"], "question": "How many students live in China?", "question_toks": ["How", "many", "students", "live", "in", "China", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"CHINA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.country  =  \"CHINA\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "WHERE", "T1.country", "=", "``", "CHINA", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "where", "t1", ".", "country", "=", "value"], "question": "Count the number of students living in China.", "question_toks": ["Count", "the", "number", "of", "students", "living", "in", "China", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"CHINA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T2.Fname ,  T2.Major FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.city_name  =  \"Baltimore\"", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Major", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "WHERE", "T1.city_name", "=", "``", "Baltimore", "''"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "major", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "where", "t1", ".", "city_name", "=", "value"], "question": "Return the first name and major of students are living in Baltimore?", "question_toks": ["Return", "the", "first", "name", "and", "major", "of", "students", "are", "living", "in", "Baltimore", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Baltimore\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T2.Fname ,  T2.Major FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.city_name  =  \"Baltimore\"", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Major", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "WHERE", "T1.city_name", "=", "``", "Baltimore", "''"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "major", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "where", "t1", ".", "city_name", "=", "value"], "question": "What are the first names and majors of students living in Baltimore?", "question_toks": ["What", "are", "the", "first", "names", "and", "majors", "of", "students", "living", "in", "Baltimore", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Baltimore\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T1.country ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country", "query_toks": ["SELECT", "T1.country", ",", "count", "(", "*", ")", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "GROUP", "BY", "T1.country"], "query_toks_no_value": ["select", "t1", ".", "country", ",", "count", "(", "*", ")", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "group", "by", "t1", ".", "country"], "question": "Show the number of students living in each country.", "question_toks": ["Show", "the", "number", "of", "students", "living", "in", "each", "country", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T1.country ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country", "query_toks": ["SELECT", "T1.country", ",", "count", "(", "*", ")", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "GROUP", "BY", "T1.country"], "query_toks_no_value": ["select", "t1", ".", "country", ",", "count", "(", "*", ")", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "group", "by", "t1", ".", "country"], "question": "How many students live in each country?", "question_toks": ["How", "many", "students", "live", "in", "each", "country", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T1.city_name ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code", "query_toks": ["SELECT", "T1.city_name", ",", "count", "(", "*", ")", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "GROUP", "BY", "T1.city_code"], "query_toks_no_value": ["select", "t1", ".", "city_name", ",", "count", "(", "*", ")", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "group", "by", "t1", ".", "city_code"], "question": "Find the number of students living in each city.", "question_toks": ["Find", "the", "number", "of", "students", "living", "in", "each", "city", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T1.city_name ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code", "query_toks": ["SELECT", "T1.city_name", ",", "count", "(", "*", ")", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "GROUP", "BY", "T1.city_code"], "query_toks_no_value": ["select", "t1", ".", "city_name", ",", "count", "(", "*", ")", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "group", "by", "t1", ".", "city_code"], "question": "How many students live in each city?", "question_toks": ["How", "many", "students", "live", "in", "each", "city", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.state", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "GROUP", "BY", "T1.state", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "state", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "group", "by", "t1", ".", "state", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which state has most number of students?", "question_toks": ["Which", "state", "has", "most", "number", "of", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.state", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "GROUP", "BY", "T1.state", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "state", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "group", "by", "t1", ".", "state", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give the state that has the most students.", "question_toks": ["Give", "the", "state", "that", "has", "the", "most", "students", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T1.country FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.country", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "GROUP", "BY", "T1.country", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "country", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "group", "by", "t1", ".", "country", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "Which country has least number of students?", "question_toks": ["Which", "country", "has", "least", "number", "of", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T1.country FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.country", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "GROUP", "BY", "T1.country", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "country", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "group", "by", "t1", ".", "country", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "Give the country with the fewest students.", "question_toks": ["Give", "the", "country", "with", "the", "fewest", "students", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T1.city_name FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code HAVING count(*)  >=  3", "query_toks": ["SELECT", "T1.city_name", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "GROUP", "BY", "T1.city_code", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "t1", ".", "city_name", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "group", "by", "t1", ".", "city_code", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show names for all cities where at least three students live.", "question_toks": ["Show", "names", "for", "all", "cities", "where", "at", "least", "three", "students", "live", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T1.city_name FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code HAVING count(*)  >=  3", "query_toks": ["SELECT", "T1.city_name", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "GROUP", "BY", "T1.city_code", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "t1", ".", "city_name", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "group", "by", "t1", ".", "city_code", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of cities with at least three students?", "question_toks": ["What", "are", "the", "names", "of", "cities", "with", "at", "least", "three", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state HAVING count(*)  >  5", "query_toks": ["SELECT", "T1.state", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "GROUP", "BY", "T1.state", "HAVING", "count", "(", "*", ")", ">", "5"], "query_toks_no_value": ["select", "t1", ".", "state", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "group", "by", "t1", ".", "state", "having", "count", "(", "*", ")", ">", "value"], "question": "Show all states where more than 5 students live.", "question_toks": ["Show", "all", "states", "where", "more", "than", "5", "students", "live", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [[false, 3, [0, [3, 0, false], null], 5.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state HAVING count(*)  >  5", "query_toks": ["SELECT", "T1.state", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "GROUP", "BY", "T1.state", "HAVING", "count", "(", "*", ")", ">", "5"], "query_toks_no_value": ["select", "t1", ".", "state", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "group", "by", "t1", ".", "state", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the states with more than 5 students?", "question_toks": ["What", "are", "the", "states", "with", "more", "than", "5", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [[false, 3, [0, [3, 0, false], null], 5.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE country  =  \"USA\"", "query_toks": ["SELECT", "StuID", "FROM", "Student", "EXCEPT", "SELECT", "StuID", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "WHERE", "country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "stuid", "from", "student", "except", "select", "stuid", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "where", "country", "=", "value"], "question": "Show ids for all students who don't live in USA.", "question_toks": ["Show", "ids", "for", "all", "students", "who", "do", "n't", "live", "in", "USA", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE country  =  \"USA\"", "query_toks": ["SELECT", "StuID", "FROM", "Student", "EXCEPT", "SELECT", "StuID", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "WHERE", "country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "stuid", "from", "student", "except", "select", "stuid", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "where", "country", "=", "value"], "question": "What the the student ids for students not living in the USA?", "question_toks": ["What", "the", "the", "student", "ids", "for", "students", "not", "living", "in", "the", "USA", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"PA\"  AND T2.sex  =  'F'", "query_toks": ["SELECT", "StuID", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "WHERE", "T1.state", "=", "``", "PA", "''", "AND", "T2.sex", "=", "'F", "'"], "query_toks_no_value": ["select", "stuid", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "where", "t1", ".", "state", "=", "value", "and", "t2", ".", "sex", "=", "value"], "question": "Show ids for all female (sex is F) students living in state PA.", "question_toks": ["Show", "ids", "for", "all", "female", "(", "sex", "is", "F", ")", "students", "living", "in", "state", "PA", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"PA\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"PA\"  AND T2.sex  =  'F'", "query_toks": ["SELECT", "StuID", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "WHERE", "T1.state", "=", "``", "PA", "''", "AND", "T2.sex", "=", "'F", "'"], "query_toks_no_value": ["select", "stuid", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "where", "t1", ".", "state", "=", "value", "and", "t2", ".", "sex", "=", "value"], "question": "What are the student ids for female students in the state of PA?", "question_toks": ["What", "are", "the", "student", "ids", "for", "female", "students", "in", "the", "state", "of", "PA", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"PA\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T2.sex  =  'M' AND T1.country != \"USA\"", "query_toks": ["SELECT", "StuID", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "WHERE", "T2.sex", "=", "'M", "'", "AND", "T1.country", "!", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "stuid", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "where", "t2", ".", "sex", "=", "value", "and", "t1", ".", "country", "!", "=", "value"], "question": "Show ids for all male students living outside of USA.", "question_toks": ["Show", "ids", "for", "all", "male", "students", "living", "outside", "of", "USA", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"M\"", null], "and", [false, 7, [0, [0, 15, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T2.sex  =  'M' AND T1.country != \"USA\"", "query_toks": ["SELECT", "StuID", "FROM", "City", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "WHERE", "T2.sex", "=", "'M", "'", "AND", "T1.country", "!", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "stuid", "from", "city", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "where", "t2", ".", "sex", "=", "value", "and", "t1", ".", "country", "!", "=", "value"], "question": "What are the ids for male students not in the USA?", "question_toks": ["What", "are", "the", "ids", "for", "male", "students", "not", "in", "the", "USA", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"M\"", null], "and", [false, 7, [0, [0, 15, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT distance FROM Direct_distance WHERE city1_code  =  \"BAL\" AND city2_code  =  \"CHI\"", "query_toks": ["SELECT", "distance", "FROM", "Direct_distance", "WHERE", "city1_code", "=", "``", "BAL", "''", "AND", "city2_code", "=", "``", "CHI", "''"], "query_toks_no_value": ["select", "distance", "from", "direct_distance", "where", "city1_code", "=", "value", "and", "city2_code", "=", "value"], "question": "What is the distance between BAL and CHI?", "question_toks": ["What", "is", "the", "distance", "between", "BAL", "and", "CHI", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"BAL\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"CHI\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT distance FROM Direct_distance WHERE city1_code  =  \"BAL\" AND city2_code  =  \"CHI\"", "query_toks": ["SELECT", "distance", "FROM", "Direct_distance", "WHERE", "city1_code", "=", "``", "BAL", "''", "AND", "city2_code", "=", "``", "CHI", "''"], "query_toks_no_value": ["select", "distance", "from", "direct_distance", "where", "city1_code", "=", "value", "and", "city2_code", "=", "value"], "question": "Give the distance between BAL and CHI?", "question_toks": ["Give", "the", "distance", "between", "BAL", "and", "CHI", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"BAL\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"CHI\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT distance FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" AND T3.city_name  =  \"Newark\"", "query_toks": ["SELECT", "distance", "FROM", "Direct_distance", "AS", "T1", "JOIN", "City", "AS", "T2", "ON", "T1.city1_code", "=", "T2.city_code", "JOIN", "City", "AS", "T3", "ON", "T1.city2_code", "=", "T3.city_code", "WHERE", "T2.city_name", "=", "``", "Boston", "''", "AND", "T3.city_name", "=", "``", "Newark", "''"], "query_toks_no_value": ["select", "distance", "from", "direct_distance", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "city1_code", "=", "t2", ".", "city_code", "join", "city", "as", "t3", "on", "t1", ".", "city2_code", "=", "t3", ".", "city_code", "where", "t2", ".", "city_name", "=", "value", "and", "t3", ".", "city_name", "=", "value"], "question": "Show me the distance between Boston and Newark.", "question_toks": ["Show", "me", "the", "distance", "between", "Boston", "and", "Newark", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Boston\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"Newark\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT distance FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" AND T3.city_name  =  \"Newark\"", "query_toks": ["SELECT", "distance", "FROM", "Direct_distance", "AS", "T1", "JOIN", "City", "AS", "T2", "ON", "T1.city1_code", "=", "T2.city_code", "JOIN", "City", "AS", "T3", "ON", "T1.city2_code", "=", "T3.city_code", "WHERE", "T2.city_name", "=", "``", "Boston", "''", "AND", "T3.city_name", "=", "``", "Newark", "''"], "query_toks_no_value": ["select", "distance", "from", "direct_distance", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "city1_code", "=", "t2", ".", "city_code", "join", "city", "as", "t3", "on", "t1", ".", "city2_code", "=", "t3", ".", "city_code", "where", "t2", ".", "city_name", "=", "value", "and", "t3", ".", "city_name", "=", "value"], "question": "What is the distance between Boston and Newark?", "question_toks": ["What", "is", "the", "distance", "between", "Boston", "and", "Newark", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Boston\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"Newark\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT avg(distance) ,  min(distance) ,  max(distance) FROM Direct_distance", "query_toks": ["SELECT", "avg", "(", "distance", ")", ",", "min", "(", "distance", ")", ",", "max", "(", "distance", ")", "FROM", "Direct_distance"], "query_toks_no_value": ["select", "avg", "(", "distance", ")", ",", "min", "(", "distance", ")", ",", "max", "(", "distance", ")", "from", "direct_distance"], "question": "What is the average, minimum, maximum distance between two cities?", "question_toks": ["What", "is", "the", "average", ",", "minimum", ",", "maximum", "distance", "between", "two", "cities", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 11, false], null]], [2, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT avg(distance) ,  min(distance) ,  max(distance) FROM Direct_distance", "query_toks": ["SELECT", "avg", "(", "distance", ")", ",", "min", "(", "distance", ")", ",", "max", "(", "distance", ")", "FROM", "Direct_distance"], "query_toks_no_value": ["select", "avg", "(", "distance", ")", ",", "min", "(", "distance", ")", ",", "max", "(", "distance", ")", "from", "direct_distance"], "question": "Give the average, minimum, and maximum distances between two cities.", "question_toks": ["Give", "the", "average", ",", "minimum", ",", "and", "maximum", "distances", "between", "two", "cities", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 11, false], null]], [2, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT city1_code ,  city2_code FROM Direct_distance ORDER BY distance DESC LIMIT 1", "query_toks": ["SELECT", "city1_code", ",", "city2_code", "FROM", "Direct_distance", "ORDER", "BY", "distance", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "city1_code", ",", "city2_code", "from", "direct_distance", "order", "by", "distance", "desc", "limit", "value"], "question": "Show me the city code of two cities with maximum distance.", "question_toks": ["Show", "me", "the", "city", "code", "of", "two", "cities", "with", "maximum", "distance", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT city1_code ,  city2_code FROM Direct_distance ORDER BY distance DESC LIMIT 1", "query_toks": ["SELECT", "city1_code", ",", "city2_code", "FROM", "Direct_distance", "ORDER", "BY", "distance", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "city1_code", ",", "city2_code", "from", "direct_distance", "order", "by", "distance", "desc", "limit", "value"], "question": "What are the city codes of the cities with the maximum distance?", "question_toks": ["What", "are", "the", "city", "codes", "of", "the", "cities", "with", "the", "maximum", "distance", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  >  (SELECT avg(distance) FROM Direct_distance)", "query_toks": ["SELECT", "city1_code", ",", "city2_code", "FROM", "Direct_distance", "WHERE", "distance", ">", "(", "SELECT", "avg", "(", "distance", ")", "FROM", "Direct_distance", ")"], "query_toks_no_value": ["select", "city1_code", ",", "city2_code", "from", "direct_distance", "where", "distance", ">", "(", "select", "avg", "(", "distance", ")", "from", "direct_distance", ")"], "question": "Show me the city code of two cities with a distance greater than the average.", "question_toks": ["Show", "me", "the", "city", "code", "of", "two", "cities", "with", "a", "distance", "greater", "than", "the", "average", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  >  (SELECT avg(distance) FROM Direct_distance)", "query_toks": ["SELECT", "city1_code", ",", "city2_code", "FROM", "Direct_distance", "WHERE", "distance", ">", "(", "SELECT", "avg", "(", "distance", ")", "FROM", "Direct_distance", ")"], "query_toks_no_value": ["select", "city1_code", ",", "city2_code", "from", "direct_distance", "where", "distance", ">", "(", "select", "avg", "(", "distance", ")", "from", "direct_distance", ")"], "question": "What are the city codes of cities with distance greater than average?", "question_toks": ["What", "are", "the", "city", "codes", "of", "cities", "with", "distance", "greater", "than", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  <  1000", "query_toks": ["SELECT", "city1_code", ",", "city2_code", "FROM", "Direct_distance", "WHERE", "distance", "<", "1000"], "query_toks_no_value": ["select", "city1_code", ",", "city2_code", "from", "direct_distance", "where", "distance", "<", "value"], "question": "Show me the city code of two cities with a distance less than 1000.", "question_toks": ["Show", "me", "the", "city", "code", "of", "two", "cities", "with", "a", "distance", "less", "than", "1000", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 4, [0, [0, 11, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  <  1000", "query_toks": ["SELECT", "city1_code", ",", "city2_code", "FROM", "Direct_distance", "WHERE", "distance", "<", "1000"], "query_toks_no_value": ["select", "city1_code", ",", "city2_code", "from", "direct_distance", "where", "distance", "<", "value"], "question": "What are the city codes corresponding to cities with distances less than 1000?", "question_toks": ["What", "are", "the", "city", "codes", "corresponding", "to", "cities", "with", "distances", "less", "than", "1000", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 4, [0, [0, 11, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT sum(distance) FROM Direct_distance WHERE city1_code  =  \"BAL\"", "query_toks": ["SELECT", "sum", "(", "distance", ")", "FROM", "Direct_distance", "WHERE", "city1_code", "=", "``", "BAL", "''"], "query_toks_no_value": ["select", "sum", "(", "distance", ")", "from", "direct_distance", "where", "city1_code", "=", "value"], "question": "What is the total distance between city BAL and all other cities.", "question_toks": ["What", "is", "the", "total", "distance", "between", "city", "BAL", "and", "all", "other", "cities", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[4, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"BAL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT sum(distance) FROM Direct_distance WHERE city1_code  =  \"BAL\"", "query_toks": ["SELECT", "sum", "(", "distance", ")", "FROM", "Direct_distance", "WHERE", "city1_code", "=", "``", "BAL", "''"], "query_toks_no_value": ["select", "sum", "(", "distance", ")", "from", "direct_distance", "where", "city1_code", "=", "value"], "question": "What is the sum of distances between BAL and other cities?", "question_toks": ["What", "is", "the", "sum", "of", "distances", "between", "BAL", "and", "other", "cities", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[4, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"BAL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code WHERE T2.city_name  =  \"Boston\"", "query_toks": ["SELECT", "avg", "(", "distance", ")", "FROM", "Direct_distance", "AS", "T1", "JOIN", "City", "AS", "T2", "ON", "T1.city1_code", "=", "T2.city_code", "WHERE", "T2.city_name", "=", "``", "Boston", "''"], "query_toks_no_value": ["select", "avg", "(", "distance", ")", "from", "direct_distance", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "city1_code", "=", "t2", ".", "city_code", "where", "t2", ".", "city_name", "=", "value"], "question": "What is the average distance between Boston and all other cities.", "question_toks": ["What", "is", "the", "average", "distance", "between", "Boston", "and", "all", "other", "cities", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 12, false], null]]}, "select": [false, [[5, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Boston\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code WHERE T2.city_name  =  \"Boston\"", "query_toks": ["SELECT", "avg", "(", "distance", ")", "FROM", "Direct_distance", "AS", "T1", "JOIN", "City", "AS", "T2", "ON", "T1.city1_code", "=", "T2.city_code", "WHERE", "T2.city_name", "=", "``", "Boston", "''"], "query_toks_no_value": ["select", "avg", "(", "distance", ")", "from", "direct_distance", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "city1_code", "=", "t2", ".", "city_code", "where", "t2", ".", "city_name", "=", "value"], "question": "Give the average distance between Boston and other cities.", "question_toks": ["Give", "the", "average", "distance", "between", "Boston", "and", "other", "cities", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 12, false], null]]}, "select": [false, [[5, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Boston\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Chicago\" ORDER BY distance LIMIT 1", "query_toks": ["SELECT", "T3.city_name", "FROM", "Direct_distance", "AS", "T1", "JOIN", "City", "AS", "T2", "ON", "T1.city1_code", "=", "T2.city_code", "JOIN", "City", "AS", "T3", "ON", "T1.city2_code", "=", "T3.city_code", "WHERE", "T2.city_name", "=", "``", "Chicago", "''", "ORDER", "BY", "distance", "LIMIT", "1"], "query_toks_no_value": ["select", "t3", ".", "city_name", "from", "direct_distance", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "city1_code", "=", "t2", ".", "city_code", "join", "city", "as", "t3", "on", "t1", ".", "city2_code", "=", "t3", ".", "city_code", "where", "t2", ".", "city_name", "=", "value", "order", "by", "distance", "limit", "value"], "question": "What is the name of the city closest to Chicago?", "question_toks": ["What", "is", "the", "name", "of", "the", "city", "closest", "to", "Chicago", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Chicago\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Chicago\" ORDER BY distance LIMIT 1", "query_toks": ["SELECT", "T3.city_name", "FROM", "Direct_distance", "AS", "T1", "JOIN", "City", "AS", "T2", "ON", "T1.city1_code", "=", "T2.city_code", "JOIN", "City", "AS", "T3", "ON", "T1.city2_code", "=", "T3.city_code", "WHERE", "T2.city_name", "=", "``", "Chicago", "''", "ORDER", "BY", "distance", "LIMIT", "1"], "query_toks_no_value": ["select", "t3", ".", "city_name", "from", "direct_distance", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "city1_code", "=", "t2", ".", "city_code", "join", "city", "as", "t3", "on", "t1", ".", "city2_code", "=", "t3", ".", "city_code", "where", "t2", ".", "city_name", "=", "value", "order", "by", "distance", "limit", "value"], "question": "Give the name of the nearest city to Chicago.", "question_toks": ["Give", "the", "name", "of", "the", "nearest", "city", "to", "Chicago", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Chicago\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" ORDER BY distance DESC LIMIT 1", "query_toks": ["SELECT", "T3.city_name", "FROM", "Direct_distance", "AS", "T1", "JOIN", "City", "AS", "T2", "ON", "T1.city1_code", "=", "T2.city_code", "JOIN", "City", "AS", "T3", "ON", "T1.city2_code", "=", "T3.city_code", "WHERE", "T2.city_name", "=", "``", "Boston", "''", "ORDER", "BY", "distance", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t3", ".", "city_name", "from", "direct_distance", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "city1_code", "=", "t2", ".", "city_code", "join", "city", "as", "t3", "on", "t1", ".", "city2_code", "=", "t3", ".", "city_code", "where", "t2", ".", "city_name", "=", "value", "order", "by", "distance", "desc", "limit", "value"], "question": "What is the name of the city furthest to Boston?", "question_toks": ["What", "is", "the", "name", "of", "the", "city", "furthest", "to", "Boston", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Boston\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" ORDER BY distance DESC LIMIT 1", "query_toks": ["SELECT", "T3.city_name", "FROM", "Direct_distance", "AS", "T1", "JOIN", "City", "AS", "T2", "ON", "T1.city1_code", "=", "T2.city_code", "JOIN", "City", "AS", "T3", "ON", "T1.city2_code", "=", "T3.city_code", "WHERE", "T2.city_name", "=", "``", "Boston", "''", "ORDER", "BY", "distance", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t3", ".", "city_name", "from", "direct_distance", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "city1_code", "=", "t2", ".", "city_code", "join", "city", "as", "t3", "on", "t1", ".", "city2_code", "=", "t3", ".", "city_code", "where", "t2", ".", "city_name", "=", "value", "order", "by", "distance", "desc", "limit", "value"], "question": "Give the city name of the city with greatest distance from Boston.", "question_toks": ["Give", "the", "city", "name", "of", "the", "city", "with", "greatest", "distance", "from", "Boston", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Boston\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT city1_code ,  sum(distance) FROM Direct_distance GROUP BY city1_code", "query_toks": ["SELECT", "city1_code", ",", "sum", "(", "distance", ")", "FROM", "Direct_distance", "GROUP", "BY", "city1_code"], "query_toks_no_value": ["select", "city1_code", ",", "sum", "(", "distance", ")", "from", "direct_distance", "group", "by", "city1_code"], "question": "Show all city codes and the total distance to all other cities.", "question_toks": ["Show", "all", "city", "codes", "and", "the", "total", "distance", "to", "all", "other", "cities", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [4, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT city1_code ,  sum(distance) FROM Direct_distance GROUP BY city1_code", "query_toks": ["SELECT", "city1_code", ",", "sum", "(", "distance", ")", "FROM", "Direct_distance", "GROUP", "BY", "city1_code"], "query_toks_no_value": ["select", "city1_code", ",", "sum", "(", "distance", ")", "from", "direct_distance", "group", "by", "city1_code"], "question": "For each city, what is the the city code and sum of distances from each?", "question_toks": ["For", "each", "city", ",", "what", "is", "the", "the", "city", "code", "and", "sum", "of", "distances", "from", "each", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [4, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T2.city_name ,  avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code GROUP BY T1.city1_code", "query_toks": ["SELECT", "T2.city_name", ",", "avg", "(", "distance", ")", "FROM", "Direct_distance", "AS", "T1", "JOIN", "City", "AS", "T2", "ON", "T1.city1_code", "=", "T2.city_code", "GROUP", "BY", "T1.city1_code"], "query_toks_no_value": ["select", "t2", ".", "city_name", ",", "avg", "(", "distance", ")", "from", "direct_distance", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "city1_code", "=", "t2", ".", "city_code", "group", "by", "t1", ".", "city1_code"], "question": "Show all city names and the average distance to all other cities.", "question_toks": ["Show", "all", "city", "names", "and", "the", "average", "distance", "to", "all", "other", "cities", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [5, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T2.city_name ,  avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code GROUP BY T1.city1_code", "query_toks": ["SELECT", "T2.city_name", ",", "avg", "(", "distance", ")", "FROM", "Direct_distance", "AS", "T1", "JOIN", "City", "AS", "T2", "ON", "T1.city1_code", "=", "T2.city_code", "GROUP", "BY", "T1.city1_code"], "query_toks_no_value": ["select", "t2", ".", "city_name", ",", "avg", "(", "distance", ")", "from", "direct_distance", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "city1_code", "=", "t2", ".", "city_code", "group", "by", "t1", ".", "city1_code"], "question": "What are the city name and average distances from each city?", "question_toks": ["What", "are", "the", "city", "name", "and", "average", "distances", "from", "each", "city", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [5, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT distance FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" AND T3.Fname  =  \"Tracy\" AND T3.Lname  =  \"Kim\"", "query_toks": ["SELECT", "distance", "FROM", "Direct_distance", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city1_code", "=", "T2.city_code", "JOIN", "Student", "AS", "T3", "ON", "T1.city2_code", "=", "T3.city_code", "WHERE", "T2.Fname", "=", "``", "Linda", "''", "AND", "T2.Lname", "=", "``", "Smith", "''", "AND", "T3.Fname", "=", "``", "Tracy", "''", "AND", "T3.Lname", "=", "``", "Kim", "''"], "query_toks_no_value": ["select", "distance", "from", "direct_distance", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city1_code", "=", "t2", ".", "city_code", "join", "student", "as", "t3", "on", "t1", ".", "city2_code", "=", "t3", ".", "city_code", "where", "t2", ".", "fname", "=", "value", "and", "t2", ".", "lname", "=", "value", "and", "t3", ".", "fname", "=", "value", "and", "t3", ".", "lname", "=", "value"], "question": "How far do Linda (first name) Smith (last name) and Tracy (first name) Kim (last name) live?", "question_toks": ["How", "far", "do", "Linda", "(", "first", "name", ")", "Smith", "(", "last", "name", ")", "and", "Tracy", "(", "first", "name", ")", "Kim", "(", "last", "name", ")", "live", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Linda\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Smith\"", null], "and", [false, 2, [0, [0, 3, false], null], "\"Tracy\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Kim\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT distance FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" AND T3.Fname  =  \"Tracy\" AND T3.Lname  =  \"Kim\"", "query_toks": ["SELECT", "distance", "FROM", "Direct_distance", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city1_code", "=", "T2.city_code", "JOIN", "Student", "AS", "T3", "ON", "T1.city2_code", "=", "T3.city_code", "WHERE", "T2.Fname", "=", "``", "Linda", "''", "AND", "T2.Lname", "=", "``", "Smith", "''", "AND", "T3.Fname", "=", "``", "Tracy", "''", "AND", "T3.Lname", "=", "``", "Kim", "''"], "query_toks_no_value": ["select", "distance", "from", "direct_distance", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city1_code", "=", "t2", ".", "city_code", "join", "student", "as", "t3", "on", "t1", ".", "city2_code", "=", "t3", ".", "city_code", "where", "t2", ".", "fname", "=", "value", "and", "t2", ".", "lname", "=", "value", "and", "t3", ".", "fname", "=", "value", "and", "t3", ".", "lname", "=", "value"], "question": "What is the distance between the cities where Linda Smith and Tracy Kim live?", "question_toks": ["What", "is", "the", "distance", "between", "the", "cities", "where", "Linda", "Smith", "and", "Tracy", "Kim", "live", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Linda\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Smith\"", null], "and", [false, 2, [0, [0, 3, false], null], "\"Tracy\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Kim\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T3.Fname ,  T3.Lname FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" ORDER BY distance DESC LIMIT 1", "query_toks": ["SELECT", "T3.Fname", ",", "T3.Lname", "FROM", "Direct_distance", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city1_code", "=", "T2.city_code", "JOIN", "Student", "AS", "T3", "ON", "T1.city2_code", "=", "T3.city_code", "WHERE", "T2.Fname", "=", "``", "Linda", "''", "AND", "T2.Lname", "=", "``", "Smith", "''", "ORDER", "BY", "distance", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "direct_distance", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city1_code", "=", "t2", ".", "city_code", "join", "student", "as", "t3", "on", "t1", ".", "city2_code", "=", "t3", ".", "city_code", "where", "t2", ".", "fname", "=", "value", "and", "t2", ".", "lname", "=", "value", "order", "by", "distance", "desc", "limit", "value"], "question": "What is the first name and last name of the student living furthest to Linda Smith?", "question_toks": ["What", "is", "the", "first", "name", "and", "last", "name", "of", "the", "student", "living", "furthest", "to", "Linda", "Smith", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Linda\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Smith\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT T3.Fname ,  T3.Lname FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" ORDER BY distance DESC LIMIT 1", "query_toks": ["SELECT", "T3.Fname", ",", "T3.Lname", "FROM", "Direct_distance", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.city1_code", "=", "T2.city_code", "JOIN", "Student", "AS", "T3", "ON", "T1.city2_code", "=", "T3.city_code", "WHERE", "T2.Fname", "=", "``", "Linda", "''", "AND", "T2.Lname", "=", "``", "Smith", "''", "ORDER", "BY", "distance", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "direct_distance", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "city1_code", "=", "t2", ".", "city_code", "join", "student", "as", "t3", "on", "t1", ".", "city2_code", "=", "t3", ".", "city_code", "where", "t2", ".", "fname", "=", "value", "and", "t2", ".", "lname", "=", "value", "order", "by", "distance", "desc", "limit", "value"], "question": "What is the full name of the student who lives furthest from Linda Smith?", "question_toks": ["What", "is", "the", "full", "name", "of", "the", "student", "who", "lives", "furthest", "from", "Linda", "Smith", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Linda\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Smith\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT state FROM Student AS T1 JOIN City AS T2 ON T1.city_code  =  T2.city_code WHERE T1.Fname  =  \"Linda\"", "query_toks": ["SELECT", "state", "FROM", "Student", "AS", "T1", "JOIN", "City", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "WHERE", "T1.Fname", "=", "``", "Linda", "''"], "query_toks_no_value": ["select", "state", "from", "student", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "where", "t1", ".", "fname", "=", "value"], "question": "Which state does the student whose first name is Linda live in?", "question_toks": ["Which", "state", "does", "the", "student", "whose", "first", "name", "is", "Linda", "live", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Linda\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "address_1", "query": "SELECT state FROM Student AS T1 JOIN City AS T2 ON T1.city_code  =  T2.city_code WHERE T1.Fname  =  \"Linda\"", "query_toks": ["SELECT", "state", "FROM", "Student", "AS", "T1", "JOIN", "City", "AS", "T2", "ON", "T1.city_code", "=", "T2.city_code", "WHERE", "T1.Fname", "=", "``", "Linda", "''"], "query_toks_no_value": ["select", "state", "from", "student", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "city_code", "=", "t2", ".", "city_code", "where", "t1", ".", "fname", "=", "value"], "question": "Give the state that the student with first name Linda lives in.", "question_toks": ["Give", "the", "state", "that", "the", "student", "with", "first", "name", "Linda", "lives", "in", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Linda\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Student", "schema": ["StuID:number", "LName:text", "Fname:text", "Age:number", "Sex:text", "Major:number", "Advisor:number", "city_code:text"]}, {"name": "Direct_distance", "schema": ["city1_code:text", "city2_code:text", "distance:number"]}, {"name": "City", "schema": ["city_code:text", "city_name:text", "state:text", "country:text", "latitude:number", "longitude:number"]}]}
{"db_id": "boat_1", "query": "SELECT * FROM Sailors WHERE age  >  30", "query_toks": ["SELECT", "*", "FROM", "Sailors", "WHERE", "age", ">", "30"], "query_toks_no_value": ["select", "*", "from", "sailors", "where", "age", ">", "value"], "question": "Return all details of sailors who are older than 30.", "question_toks": ["Return", "all", "details", "of", "sailors", "who", "are", "older", "than", "30", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT * FROM Sailors WHERE age  >  30", "query_toks": ["SELECT", "*", "FROM", "Sailors", "WHERE", "age", ">", "30"], "query_toks_no_value": ["select", "*", "from", "sailors", "where", "age", ">", "value"], "question": "What can you tell me about sailors who are older than age 30?", "question_toks": ["What", "can", "you", "tell", "me", "about", "sailors", "who", "are", "older", "than", "age", "30", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name ,  age FROM Sailors WHERE age  <  30", "query_toks": ["SELECT", "name", ",", "age", "FROM", "Sailors", "WHERE", "age", "<", "30"], "query_toks_no_value": ["select", "name", ",", "age", "from", "sailors", "where", "age", "<", "value"], "question": "Return name and age for sailors who are younger than 30.", "question_toks": ["Return", "name", "and", "age", "for", "sailors", "who", "are", "younger", "than", "30", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name ,  age FROM Sailors WHERE age  <  30", "query_toks": ["SELECT", "name", ",", "age", "FROM", "Sailors", "WHERE", "age", "<", "30"], "query_toks_no_value": ["select", "name", ",", "age", "from", "sailors", "where", "age", "<", "value"], "question": "What is the name and age of every sailor who is younger than age 30?", "question_toks": ["What", "is", "the", "name", "and", "age", "of", "every", "sailor", "who", "is", "younger", "than", "age", "30", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT bid FROM Reserves WHERE sid = 1", "query_toks": ["SELECT", "DISTINCT", "bid", "FROM", "Reserves", "WHERE", "sid", "=", "1"], "query_toks_no_value": ["select", "distinct", "bid", "from", "reserves", "where", "sid", "=", "value"], "question": "Find boats reserved by Sailor with id 1.", "question_toks": ["Find", "boats", "reserved", "by", "Sailor", "with", "id", "1", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT bid FROM Reserves WHERE sid = 1", "query_toks": ["SELECT", "DISTINCT", "bid", "FROM", "Reserves", "WHERE", "sid", "=", "1"], "query_toks_no_value": ["select", "distinct", "bid", "from", "reserves", "where", "sid", "=", "value"], "question": "What are the different boat ids reserved by the sailor whose id is 1?", "question_toks": ["What", "are", "the", "different", "boat", "ids", "reserved", "by", "the", "sailor", "whose", "id", "is", "1", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102", "query_toks": ["SELECT", "T1.name", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid", "WHERE", "T2.bid", "=", "102"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "where", "t2", ".", "bid", "=", "value"], "question": "Who reserved boat 102?", "question_toks": ["Who", "reserved", "boat", "102", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], 102.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102", "query_toks": ["SELECT", "T1.name", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid", "WHERE", "T2.bid", "=", "102"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "where", "t2", ".", "bid", "=", "value"], "question": "What is the name of the sailor who reserved boat 102?", "question_toks": ["What", "is", "the", "name", "of", "the", "sailor", "who", "reserved", "boat", "102", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], 102.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT bid FROM Reserves", "query_toks": ["SELECT", "DISTINCT", "bid", "FROM", "Reserves"], "query_toks_no_value": ["select", "distinct", "bid", "from", "reserves"], "question": "Return the unique boat ids (bid) of all reserved boats.", "question_toks": ["Return", "the", "unique", "boat", "ids", "(", "bid", ")", "of", "all", "reserved", "boats", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT bid FROM Reserves", "query_toks": ["SELECT", "DISTINCT", "bid", "FROM", "Reserves"], "query_toks_no_value": ["select", "distinct", "bid", "from", "reserves"], "question": "What are the ids of all boats that are reserved by someone?", "question_toks": ["What", "are", "the", "ids", "of", "all", "boats", "that", "are", "reserved", "by", "someone", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name FROM Sailors WHERE name LIKE '%e%'", "query_toks": ["SELECT", "name", "FROM", "Sailors", "WHERE", "name", "LIKE", "'", "%", "e", "%", "'"], "query_toks_no_value": ["select", "name", "from", "sailors", "where", "name", "like", "value"], "question": "What is the name of sailors whose names contain letter e?", "question_toks": ["What", "is", "the", "name", "of", "sailors", "whose", "names", "contain", "letter", "e", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%e%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name FROM Sailors WHERE name LIKE '%e%'", "query_toks": ["SELECT", "name", "FROM", "Sailors", "WHERE", "name", "LIKE", "'", "%", "e", "%", "'"], "query_toks_no_value": ["select", "name", "from", "sailors", "where", "name", "like", "value"], "question": "What is the name of every sailor whose name contains the letter e?", "question_toks": ["What", "is", "the", "name", "of", "every", "sailor", "whose", "name", "contains", "the", "letter", "e", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%e%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT sid FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors);", "query_toks": ["SELECT", "DISTINCT", "sid", "FROM", "Sailors", "WHERE", "age", ">", "(", "SELECT", "min", "(", "age", ")", "FROM", "Sailors", ")", ";"], "query_toks_no_value": ["select", "distinct", "sid", "from", "sailors", "where", "age", ">", "(", "select", "min", "(", "age", ")", "from", "sailors", ")"], "question": "return the unique ids of sailors who are older than any sailors.", "question_toks": ["return", "the", "unique", "ids", "of", "sailors", "who", "are", "older", "than", "any", "sailors", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT sid FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors);", "query_toks": ["SELECT", "DISTINCT", "sid", "FROM", "Sailors", "WHERE", "age", ">", "(", "SELECT", "min", "(", "age", ")", "FROM", "Sailors", ")", ";"], "query_toks_no_value": ["select", "distinct", "sid", "from", "sailors", "where", "age", ">", "(", "select", "min", "(", "age", ")", "from", "sailors", ")"], "question": "What is the different id of every sailor who is not the youngest?", "question_toks": ["What", "is", "the", "different", "id", "of", "every", "sailor", "who", "is", "not", "the", "youngest", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT name FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors WHERE rating  >  7);", "query_toks": ["SELECT", "DISTINCT", "name", "FROM", "Sailors", "WHERE", "age", ">", "(", "SELECT", "min", "(", "age", ")", "FROM", "Sailors", "WHERE", "rating", ">", "7", ")", ";"], "query_toks_no_value": ["select", "distinct", "name", "from", "sailors", "where", "age", ">", "(", "select", "min", "(", "age", ")", "from", "sailors", "where", "rating", ">", "value", ")"], "question": "Return the unique names of sailors who are older than any sailors whose rating is larger than 7.", "question_toks": ["Return", "the", "unique", "names", "of", "sailors", "who", "are", "older", "than", "any", "sailors", "whose", "rating", "is", "larger", "than", "7", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 7.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT name FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors WHERE rating  >  7);", "query_toks": ["SELECT", "DISTINCT", "name", "FROM", "Sailors", "WHERE", "age", ">", "(", "SELECT", "min", "(", "age", ")", "FROM", "Sailors", "WHERE", "rating", ">", "7", ")", ";"], "query_toks_no_value": ["select", "distinct", "name", "from", "sailors", "where", "age", ">", "(", "select", "min", "(", "age", ")", "from", "sailors", "where", "rating", ">", "value", ")"], "question": "What are the different names of sailors who are older than some other sailor with a rating larger than 7?", "question_toks": ["What", "are", "the", "different", "names", "of", "sailors", "who", "are", "older", "than", "some", "other", "sailor", "with", "a", "rating", "larger", "than", "7", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 7.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.sid", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "sid", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid"], "question": "Find the name and id of the sailors who reserved at least one boat?", "question_toks": ["Find", "the", "name", "and", "id", "of", "the", "sailors", "who", "reserved", "at", "least", "one", "boat", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.sid", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "sid", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid"], "question": "What is the name and id of every sailor who reserved one or more boats?", "question_toks": ["What", "is", "the", "name", "and", "id", "of", "every", "sailor", "who", "reserved", "one", "or", "more", "boats", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid GROUP BY T2.sid HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.sid", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid", "GROUP", "BY", "T2.sid", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "sid", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "group", "by", "t2", ".", "sid", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the id and name of the sailors who reserved more than one boat.", "question_toks": ["Find", "the", "id", "and", "name", "of", "the", "sailors", "who", "reserved", "more", "than", "one", "boat", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "select distinct t1.name ,  t1.sid from sailors as t1 join reserves as t2 on t1.sid  =  t2.sid group by t2.sid having count(*)  >=  2", "query_toks": ["select", "distinct", "t1.name", ",", "t1.sid", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1.sid", "=", "t2.sid", "group", "by", "t2.sid", "having", "count", "(", "*", ")", ">=", "2"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "sid", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "group", "by", "t2", ".", "sid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the different names of sailors who reserved two or more boats ?", "question_toks": ["What", "are", "the", "different", "names", "of", "sailors", "who", "reserved", "two", "or", "more", "boats", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"", "query_toks": ["SELECT", "DISTINCT", "T2.sid", "FROM", "Boats", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.bid", "=", "T2.bid", "WHERE", "T1.color", "=", "'red", "'", "OR", "T1.color", "=", "``", "blue", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "sid", "from", "boats", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "bid", "=", "t2", ".", "bid", "where", "t1", ".", "color", "=", "value", "or", "t1", ".", "color", "=", "value"], "question": "Find the id of Sailors (sid) that reserved red or blue boat.", "question_toks": ["Find", "the", "id", "of", "Sailors", "(", "sid", ")", "that", "reserved", "red", "or", "blue", "boat", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"red\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"blue\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"", "query_toks": ["SELECT", "DISTINCT", "T2.sid", "FROM", "Boats", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.bid", "=", "T2.bid", "WHERE", "T1.color", "=", "'red", "'", "OR", "T1.color", "=", "``", "blue", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "sid", "from", "boats", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "bid", "=", "t2", ".", "bid", "where", "t1", ".", "color", "=", "value", "or", "t1", ".", "color", "=", "value"], "question": "What are the sids for sailors who reserved red or blue boats?", "question_toks": ["What", "are", "the", "sids", "for", "sailors", "who", "reserved", "red", "or", "blue", "boats", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"red\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"blue\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"", "query_toks": ["SELECT", "DISTINCT", "T2.sid", ",", "T3.name", "FROM", "Boats", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.bid", "=", "T2.bid", "JOIN", "Sailors", "AS", "T3", "ON", "T2.sid", "=", "T3.sid", "WHERE", "T1.color", "=", "'red", "'", "OR", "T1.color", "=", "``", "blue", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "sid", ",", "t3", ".", "name", "from", "boats", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "bid", "=", "t2", ".", "bid", "join", "sailors", "as", "t3", "on", "t2", ".", "sid", "=", "t3", ".", "sid", "where", "t1", ".", "color", "=", "value", "or", "t1", ".", "color", "=", "value"], "question": "Find the name and id of Sailors (sid) that reserved red or blue boat.", "question_toks": ["Find", "the", "name", "and", "id", "of", "Sailors", "(", "sid", ")", "that", "reserved", "red", "or", "blue", "boat", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"red\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"blue\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"", "query_toks": ["SELECT", "DISTINCT", "T2.sid", ",", "T3.name", "FROM", "Boats", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.bid", "=", "T2.bid", "JOIN", "Sailors", "AS", "T3", "ON", "T2.sid", "=", "T3.sid", "WHERE", "T1.color", "=", "'red", "'", "OR", "T1.color", "=", "``", "blue", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "sid", ",", "t3", ".", "name", "from", "boats", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "bid", "=", "t2", ".", "bid", "join", "sailors", "as", "t3", "on", "t2", ".", "sid", "=", "t3", ".", "sid", "where", "t1", ".", "color", "=", "value", "or", "t1", ".", "color", "=", "value"], "question": "What are the names and ids of sailors who reserved red or blue boats?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "sailors", "who", "reserved", "red", "or", "blue", "boats", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"red\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"blue\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  \"blue\"", "query_toks": ["SELECT", "DISTINCT", "T2.sid", "FROM", "Boats", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.bid", "=", "T2.bid", "WHERE", "T1.color", "=", "'red", "'", "INTERSECT", "SELECT", "DISTINCT", "T2.sid", "FROM", "Boats", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.bid", "=", "T2.bid", "WHERE", "T1.color", "=", "``", "blue", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "sid", "from", "boats", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "bid", "=", "t2", ".", "bid", "where", "t1", ".", "color", "=", "value", "intersect", "select", "distinct", "t2", ".", "sid", "from", "boats", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "bid", "=", "t2", ".", "bid", "where", "t1", ".", "color", "=", "value"], "question": "Find the id of Sailors (sid) that reserved red and blue boat.", "question_toks": ["Find", "the", "id", "of", "Sailors", "(", "sid", ")", "that", "reserved", "red", "and", "blue", "boat", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"red\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"blue\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  \"blue\"", "query_toks": ["SELECT", "DISTINCT", "T2.sid", "FROM", "Boats", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.bid", "=", "T2.bid", "WHERE", "T1.color", "=", "'red", "'", "INTERSECT", "SELECT", "DISTINCT", "T2.sid", "FROM", "Boats", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.bid", "=", "T2.bid", "WHERE", "T1.color", "=", "``", "blue", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "sid", "from", "boats", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "bid", "=", "t2", ".", "bid", "where", "t1", ".", "color", "=", "value", "intersect", "select", "distinct", "t2", ".", "sid", "from", "boats", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "bid", "=", "t2", ".", "bid", "where", "t1", ".", "color", "=", "value"], "question": "What are the ids of sailors who reserved red and blue boats?", "question_toks": ["What", "are", "the", "ids", "of", "sailors", "who", "reserved", "red", "and", "blue", "boats", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"red\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"blue\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"blue\"", "query_toks": ["SELECT", "DISTINCT", "T2.sid", ",", "T3.name", "FROM", "Boats", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.bid", "=", "T2.bid", "JOIN", "Sailors", "AS", "T3", "ON", "T2.sid", "=", "T3.sid", "WHERE", "T1.color", "=", "'red", "'", "INTERSECT", "SELECT", "DISTINCT", "T2.sid", ",", "T3.name", "FROM", "Boats", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.bid", "=", "T2.bid", "JOIN", "Sailors", "AS", "T3", "ON", "T2.sid", "=", "T3.sid", "WHERE", "T1.color", "=", "``", "blue", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "sid", ",", "t3", ".", "name", "from", "boats", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "bid", "=", "t2", ".", "bid", "join", "sailors", "as", "t3", "on", "t2", ".", "sid", "=", "t3", ".", "sid", "where", "t1", ".", "color", "=", "value", "intersect", "select", "distinct", "t2", ".", "sid", ",", "t3", ".", "name", "from", "boats", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "bid", "=", "t2", ".", "bid", "join", "sailors", "as", "t3", "on", "t2", ".", "sid", "=", "t3", ".", "sid", "where", "t1", ".", "color", "=", "value"], "question": "Find the name and id of Sailors (sid) that reserved red and blue boat.", "question_toks": ["Find", "the", "name", "and", "id", "of", "Sailors", "(", "sid", ")", "that", "reserved", "red", "and", "blue", "boat", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"red\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"blue\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"blue\"", "query_toks": ["SELECT", "DISTINCT", "T2.sid", ",", "T3.name", "FROM", "Boats", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.bid", "=", "T2.bid", "JOIN", "Sailors", "AS", "T3", "ON", "T2.sid", "=", "T3.sid", "WHERE", "T1.color", "=", "'red", "'", "INTERSECT", "SELECT", "DISTINCT", "T2.sid", ",", "T3.name", "FROM", "Boats", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.bid", "=", "T2.bid", "JOIN", "Sailors", "AS", "T3", "ON", "T2.sid", "=", "T3.sid", "WHERE", "T1.color", "=", "``", "blue", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "sid", ",", "t3", ".", "name", "from", "boats", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "bid", "=", "t2", ".", "bid", "join", "sailors", "as", "t3", "on", "t2", ".", "sid", "=", "t3", ".", "sid", "where", "t1", ".", "color", "=", "value", "intersect", "select", "distinct", "t2", ".", "sid", ",", "t3", ".", "name", "from", "boats", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "bid", "=", "t2", ".", "bid", "join", "sailors", "as", "t3", "on", "t2", ".", "sid", "=", "t3", ".", "sid", "where", "t1", ".", "color", "=", "value"], "question": "What are the names and ids of sailors who reserved red and blue boats?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "sailors", "who", "reserved", "red", "and", "blue", "boats", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"red\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"blue\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves", "query_toks": ["SELECT", "sid", "FROM", "Sailors", "EXCEPT", "SELECT", "sid", "FROM", "Reserves"], "query_toks_no_value": ["select", "sid", "from", "sailors", "except", "select", "sid", "from", "reserves"], "question": "What is the ids of sailors that haven\u2019t reserved a boat?", "question_toks": ["What", "is", "the", "ids", "of", "sailors", "that", "haven\u2019t", "reserved", "a", "boat", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves", "query_toks": ["SELECT", "sid", "FROM", "Sailors", "EXCEPT", "SELECT", "sid", "FROM", "Reserves"], "query_toks_no_value": ["select", "sid", "from", "sailors", "except", "select", "sid", "from", "reserves"], "question": "What are the ids of sailors who have not reserved a boat?", "question_toks": ["What", "are", "the", "ids", "of", "sailors", "who", "have", "not", "reserved", "a", "boat", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT sid ,  name FROM Sailors EXCEPT SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid", "query_toks": ["SELECT", "sid", ",", "name", "FROM", "Sailors", "EXCEPT", "SELECT", "T1.sid", ",", "T1.name", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid"], "query_toks_no_value": ["select", "sid", ",", "name", "from", "sailors", "except", "select", "t1", ".", "sid", ",", "t1", ".", "name", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid"], "question": "what is the name and id of sailors who do not have a reservation of a boat?", "question_toks": ["what", "is", "the", "name", "and", "id", "of", "sailors", "who", "do", "not", "have", "a", "reservation", "of", "a", "boat", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT sid ,  name FROM Sailors EXCEPT SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid", "query_toks": ["SELECT", "sid", ",", "name", "FROM", "Sailors", "EXCEPT", "SELECT", "T1.sid", ",", "T1.name", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid"], "query_toks_no_value": ["select", "sid", ",", "name", "from", "sailors", "except", "select", "t1", ".", "sid", ",", "t1", ".", "name", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid"], "question": "What are the names and ids of all sailors who do not have boat reservations?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "all", "sailors", "who", "do", "not", "have", "boat", "reservations", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT sid FROM Sailors EXCEPT SELECT T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid", "query_toks": ["SELECT", "sid", "FROM", "Sailors", "EXCEPT", "SELECT", "T1.sid", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid"], "query_toks_no_value": ["select", "sid", "from", "sailors", "except", "select", "t1", ".", "sid", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid"], "question": "Find id for the sailors who do not have a reservation of a boat?", "question_toks": ["Find", "id", "for", "the", "sailors", "who", "do", "not", "have", "a", "reservation", "of", "a", "boat", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT sid FROM Sailors EXCEPT SELECT T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid", "query_toks": ["SELECT", "sid", "FROM", "Sailors", "EXCEPT", "SELECT", "T1.sid", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid"], "query_toks_no_value": ["select", "sid", "from", "sailors", "except", "select", "t1", ".", "sid", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid"], "question": "What is id about sailors who do not have boat reservations?", "question_toks": ["What", "is", "id", "about", "sailors", "who", "do", "not", "have", "boat", "reservations", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T2.bid  =  103", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid", "WHERE", "T2.bid", "=", "103"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "where", "t2", ".", "bid", "=", "value"], "question": "What is the name of the sailors who reserved boat with id 103?", "question_toks": ["What", "is", "the", "name", "of", "the", "sailors", "who", "reserved", "boat", "with", "id", "103", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], 103.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T2.bid  =  103", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid", "WHERE", "T2.bid", "=", "103"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "where", "t2", ".", "bid", "=", "value"], "question": "Find the name of the sailors who reserved boat with id 103.", "question_toks": ["Find", "the", "name", "of", "the", "sailors", "who", "reserved", "boat", "with", "id", "103", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], 103.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name FROM Sailors WHERE rating  >  (SELECT min(rating) FROM Sailors WHERE name  =  'Luis')", "query_toks": ["SELECT", "name", "FROM", "Sailors", "WHERE", "rating", ">", "(", "SELECT", "min", "(", "rating", ")", "FROM", "Sailors", "WHERE", "name", "=", "'Luis", "'", ")"], "query_toks_no_value": ["select", "name", "from", "sailors", "where", "rating", ">", "(", "select", "min", "(", "rating", ")", "from", "sailors", "where", "name", "=", "value", ")"], "question": "What is the name of all sailors whose rating is higher than any sailor named Luis?", "question_toks": ["What", "is", "the", "name", "of", "all", "sailors", "whose", "rating", "is", "higher", "than", "any", "sailor", "named", "Luis", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Luis\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name FROM Sailors WHERE rating  >  (SELECT min(rating) FROM Sailors WHERE name  =  'Luis')", "query_toks": ["SELECT", "name", "FROM", "Sailors", "WHERE", "rating", ">", "(", "SELECT", "min", "(", "rating", ")", "FROM", "Sailors", "WHERE", "name", "=", "'Luis", "'", ")"], "query_toks_no_value": ["select", "name", "from", "sailors", "where", "rating", ">", "(", "select", "min", "(", "rating", ")", "from", "sailors", "where", "name", "=", "value", ")"], "question": "What are the sailors' names, the ones whose rating is higher than any sailor named Luis?", "question_toks": ["What", "are", "the", "sailors", "'", "names", ",", "the", "ones", "whose", "rating", "is", "higher", "than", "any", "sailor", "named", "Luis", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Luis\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(rating) FROM Sailors WHERE name  =  'Luis')", "query_toks": ["SELECT", "name", "FROM", "Sailors", "WHERE", "rating", ">", "(", "SELECT", "max", "(", "rating", ")", "FROM", "Sailors", "WHERE", "name", "=", "'Luis", "'", ")"], "query_toks_no_value": ["select", "name", "from", "sailors", "where", "rating", ">", "(", "select", "max", "(", "rating", ")", "from", "sailors", "where", "name", "=", "value", ")"], "question": "What is the name of all sailors whose rating is higher than all sailors named Luis?", "question_toks": ["What", "is", "the", "name", "of", "all", "sailors", "whose", "rating", "is", "higher", "than", "all", "sailors", "named", "Luis", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Luis\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(rating) FROM Sailors WHERE name  =  'Luis')", "query_toks": ["SELECT", "name", "FROM", "Sailors", "WHERE", "rating", ">", "(", "SELECT", "max", "(", "rating", ")", "FROM", "Sailors", "WHERE", "name", "=", "'Luis", "'", ")"], "query_toks_no_value": ["select", "name", "from", "sailors", "where", "rating", ">", "(", "select", "max", "(", "rating", ")", "from", "sailors", "where", "name", "=", "value", ")"], "question": "What are the names of all sailors with a higher rating than every sailor named Luis?", "question_toks": ["What", "are", "the", "names", "of", "all", "sailors", "with", "a", "higher", "rating", "than", "every", "sailor", "named", "Luis", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Luis\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T1.rating  >  2", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.sid", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid", "WHERE", "T1.rating", ">", "2"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "sid", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "where", "t1", ".", "rating", ">", "value"], "question": "what is the name and id of every sailor who has a rating greater than 2 and reserved a boat.", "question_toks": ["what", "is", "the", "name", "and", "id", "of", "every", "sailor", "who", "has", "a", "rating", "greater", "than", "2", "and", "reserved", "a", "boat", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T1.rating  >  2", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.sid", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid", "WHERE", "T1.rating", ">", "2"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "sid", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "where", "t1", ".", "rating", ">", "value"], "question": "What are the names and ids of all sailors who have a rating of at least 3 and reserved a boat?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "all", "sailors", "who", "have", "a", "rating", "of", "at", "least", "3", "and", "reserved", "a", "boat", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name ,  age FROM Sailors WHERE age  =  ( SELECT max(age) FROM Sailors )", "query_toks": ["SELECT", "name", ",", "age", "FROM", "Sailors", "WHERE", "age", "=", "(", "SELECT", "max", "(", "age", ")", "FROM", "Sailors", ")"], "query_toks_no_value": ["select", "name", ",", "age", "from", "sailors", "where", "age", "=", "(", "select", "max", "(", "age", ")", "from", "sailors", ")"], "question": "Find the name and age of the oldest sailor.", "question_toks": ["Find", "the", "name", "and", "age", "of", "the", "oldest", "sailor", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name ,  age FROM Sailors WHERE age  =  ( SELECT max(age) FROM Sailors )", "query_toks": ["SELECT", "name", ",", "age", "FROM", "Sailors", "WHERE", "age", "=", "(", "SELECT", "max", "(", "age", ")", "FROM", "Sailors", ")"], "query_toks_no_value": ["select", "name", ",", "age", "from", "sailors", "where", "age", "=", "(", "select", "max", "(", "age", ")", "from", "sailors", ")"], "question": "What is the name and age of the sailor with maximum age?", "question_toks": ["What", "is", "the", "name", "and", "age", "of", "the", "sailor", "with", "maximum", "age", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT COUNT(*) FROM Sailors", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "Sailors"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "sailors"], "question": "how many sailors in total?", "question_toks": ["how", "many", "sailors", "in", "total", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT COUNT(*) FROM Sailors", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "Sailors"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "sailors"], "question": "How many sailors exist?", "question_toks": ["How", "many", "sailors", "exist", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT AVG(age) FROM Sailors WHERE rating  =  7", "query_toks": ["SELECT", "AVG", "(", "age", ")", "FROM", "Sailors", "WHERE", "rating", "=", "7"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "sailors", "where", "rating", "=", "value"], "question": "What is the average age of sailors whose rating is 7?", "question_toks": ["What", "is", "the", "average", "age", "of", "sailors", "whose", "rating", "is", "7", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 7.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT AVG(age) FROM Sailors WHERE rating  =  7", "query_toks": ["SELECT", "AVG", "(", "age", ")", "FROM", "Sailors", "WHERE", "rating", "=", "7"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "sailors", "where", "rating", "=", "value"], "question": "What is average age of all sailors who have a rating of 7?", "question_toks": ["What", "is", "average", "age", "of", "all", "sailors", "who", "have", "a", "rating", "of", "7", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 7.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "select count(*) from sailors where name like 'd%'", "query_toks": ["select", "count", "(", "*", ")", "from", "sailors", "where", "name", "like", "\"d%\""], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "sailors", "where", "name", "like", "value"], "question": "How many sailors whose name starts with letter D exist ?", "question_toks": ["How", "many", "sailors", "whose", "name", "starts", "with", "letter", "D", "exist", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"d%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "select count(*) from sailors where name like 'd%'", "query_toks": ["select", "count", "(", "*", ")", "from", "sailors", "where", "name", "like", "\"d%\""], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "sailors", "where", "name", "like", "value"], "question": "What is the count of the sailors whose name starts with letter D ?", "question_toks": ["What", "is", "the", "count", "of", "the", "sailors", "whose", "name", "starts", "with", "letter", "D", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"d%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT AVG(rating) ,  MAX(age) FROM Sailors", "query_toks": ["SELECT", "AVG", "(", "rating", ")", ",", "MAX", "(", "age", ")", "FROM", "Sailors"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", ",", "max", "(", "age", ")", "from", "sailors"], "question": "What are the average rating and max age of all sailors?", "question_toks": ["What", "are", "the", "average", "rating", "and", "max", "age", "of", "all", "sailors", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]], [1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT AVG(rating) ,  MAX(age) FROM Sailors", "query_toks": ["SELECT", "AVG", "(", "rating", ")", ",", "MAX", "(", "age", ")", "FROM", "Sailors"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", ",", "max", "(", "age", ")", "from", "sailors"], "question": "Find the average rating and largest age for the sailors", "question_toks": ["Find", "the", "average", "rating", "and", "largest", "age", "for", "the", "sailors"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]], [1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid", "query_toks": ["SELECT", "bid", ",", "count", "(", "*", ")", "FROM", "Reserves", "GROUP", "BY", "bid"], "query_toks_no_value": ["select", "bid", ",", "count", "(", "*", ")", "from", "reserves", "group", "by", "bid"], "question": "Find the number of reservations for each boat.", "question_toks": ["Find", "the", "number", "of", "reservations", "for", "each", "boat", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid", "query_toks": ["SELECT", "bid", ",", "count", "(", "*", ")", "FROM", "Reserves", "GROUP", "BY", "bid"], "query_toks_no_value": ["select", "bid", ",", "count", "(", "*", ")", "from", "reserves", "group", "by", "bid"], "question": "How many reservations exist for each boat?", "question_toks": ["How", "many", "reservations", "exist", "for", "each", "boat", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING bid  >  50", "query_toks": ["SELECT", "bid", ",", "count", "(", "*", ")", "FROM", "Reserves", "GROUP", "BY", "bid", "HAVING", "bid", ">", "50"], "query_toks_no_value": ["select", "bid", ",", "count", "(", "*", ")", "from", "reserves", "group", "by", "bid", "having", "bid", ">", "value"], "question": "Find the number of reservations for each boat with id greater than 50.", "question_toks": ["Find", "the", "number", "of", "reservations", "for", "each", "boat", "with", "id", "greater", "than", "50", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [0, 9, false], null], 50.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING bid  >  50", "query_toks": ["SELECT", "bid", ",", "count", "(", "*", ")", "FROM", "Reserves", "GROUP", "BY", "bid", "HAVING", "bid", ">", "50"], "query_toks_no_value": ["select", "bid", ",", "count", "(", "*", ")", "from", "reserves", "group", "by", "bid", "having", "bid", ">", "value"], "question": "How many reservations exist for each boat with an id greater than 50?", "question_toks": ["How", "many", "reservations", "exist", "for", "each", "boat", "with", "an", "id", "greater", "than", "50", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [0, 9, false], null], 50.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING count(*)  >  1", "query_toks": ["SELECT", "bid", ",", "count", "(", "*", ")", "FROM", "Reserves", "GROUP", "BY", "bid", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "bid", ",", "count", "(", "*", ")", "from", "reserves", "group", "by", "bid", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the number of reservations for each boat with more than 1 reservation.", "question_toks": ["Find", "the", "number", "of", "reservations", "for", "each", "boat", "with", "more", "than", "1", "reservation", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING count(*)  >  1", "query_toks": ["SELECT", "bid", ",", "count", "(", "*", ")", "FROM", "Reserves", "GROUP", "BY", "bid", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "bid", ",", "count", "(", "*", ")", "from", "reserves", "group", "by", "bid", "having", "count", "(", "*", ")", ">", "value"], "question": "How many reservations exist for each boat that has more than 1 reservation already?", "question_toks": ["How", "many", "reservations", "exist", "for", "each", "boat", "that", "has", "more", "than", "1", "reservation", "already", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT bid ,  count(*) FROM Reserves WHERE sid  >  1 GROUP BY bid", "query_toks": ["SELECT", "bid", ",", "count", "(", "*", ")", "FROM", "Reserves", "WHERE", "sid", ">", "1", "GROUP", "BY", "bid"], "query_toks_no_value": ["select", "bid", ",", "count", "(", "*", ")", "from", "reserves", "where", "sid", ">", "value", "group", "by", "bid"], "question": "Find the number of reservations by sailors with id greater than 1 for each boat.", "question_toks": ["Find", "the", "number", "of", "reservations", "by", "sailors", "with", "id", "greater", "than", "1", "for", "each", "boat", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 1.0, null]], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT bid ,  count(*) FROM Reserves WHERE sid  >  1 GROUP BY bid", "query_toks": ["SELECT", "bid", ",", "count", "(", "*", ")", "FROM", "Reserves", "WHERE", "sid", ">", "1", "GROUP", "BY", "bid"], "query_toks_no_value": ["select", "bid", ",", "count", "(", "*", ")", "from", "reserves", "where", "sid", ">", "value", "group", "by", "bid"], "question": "How many reservations for each boat did the sailors with an id greater than 1 make?", "question_toks": ["How", "many", "reservations", "for", "each", "boat", "did", "the", "sailors", "with", "an", "id", "greater", "than", "1", "make", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 1.0, null]], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT T1.rating ,  avg(T1.age) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red' GROUP BY T1.rating", "query_toks": ["SELECT", "T1.rating", ",", "avg", "(", "T1.age", ")", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid", "JOIN", "Boats", "AS", "T3", "ON", "T3.bid", "=", "T2.bid", "WHERE", "T3.color", "=", "'red", "'", "GROUP", "BY", "T1.rating"], "query_toks_no_value": ["select", "t1", ".", "rating", ",", "avg", "(", "t1", ".", "age", ")", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "join", "boats", "as", "t3", "on", "t3", ".", "bid", "=", "t2", ".", "bid", "where", "t3", ".", "color", "=", "value", "group", "by", "t1", ".", "rating"], "question": "What is the rating and average age for sailors who have reserved red boat grouped by rating?", "question_toks": ["What", "is", "the", "rating", "and", "average", "age", "for", "sailors", "who", "have", "reserved", "red", "boat", "grouped", "by", "rating", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [5, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"red\"", null]], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT T1.rating ,  avg(T1.age) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red' GROUP BY T1.rating", "query_toks": ["SELECT", "T1.rating", ",", "avg", "(", "T1.age", ")", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid", "JOIN", "Boats", "AS", "T3", "ON", "T3.bid", "=", "T2.bid", "WHERE", "T3.color", "=", "'red", "'", "GROUP", "BY", "T1.rating"], "query_toks_no_value": ["select", "t1", ".", "rating", ",", "avg", "(", "t1", ".", "age", ")", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "join", "boats", "as", "t3", "on", "t3", ".", "bid", "=", "t2", ".", "bid", "where", "t3", ".", "color", "=", "value", "group", "by", "t1", ".", "rating"], "question": "What are the rating and average age for sailors who reserved red boats for each rating?", "question_toks": ["What", "are", "the", "rating", "and", "average", "age", "for", "sailors", "who", "reserved", "red", "boats", "for", "each", "rating", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [5, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"red\"", null]], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name ,  rating ,  age FROM Sailors ORDER BY rating ,  age", "query_toks": ["SELECT", "name", ",", "rating", ",", "age", "FROM", "Sailors", "ORDER", "BY", "rating", ",", "age"], "query_toks_no_value": ["select", "name", ",", "rating", ",", "age", "from", "sailors", "order", "by", "rating", ",", "age"], "question": "Find the name, rating and age of all sailors ordered by rating and age.", "question_toks": ["Find", "the", "name", ",", "rating", "and", "age", "of", "all", "sailors", "ordered", "by", "rating", "and", "age", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null], [0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name ,  rating ,  age FROM Sailors ORDER BY rating ,  age", "query_toks": ["SELECT", "name", ",", "rating", ",", "age", "FROM", "Sailors", "ORDER", "BY", "rating", ",", "age"], "query_toks_no_value": ["select", "name", ",", "rating", ",", "age", "from", "sailors", "order", "by", "rating", ",", "age"], "question": "What is the name, rating, and age for every sailor? And order them by rating and age.", "question_toks": ["What", "is", "the", "name", ",", "rating", ",", "and", "age", "for", "every", "sailor", "?", "And", "order", "them", "by", "rating", "and", "age", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null], [0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT count(*) FROM Boats", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Boats"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "boats"], "question": "Find the total number of boats.", "question_toks": ["Find", "the", "total", "number", "of", "boats", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT count(*) FROM Boats", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Boats"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "boats"], "question": "How many boats are there?", "question_toks": ["How", "many", "boats", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT count(*) FROM Boats WHERE color  =  'red'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Boats", "WHERE", "color", "=", "'red", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "boats", "where", "color", "=", "value"], "question": "How many boats are red?", "question_toks": ["How", "many", "boats", "are", "red", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"red\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT count(*) FROM Boats WHERE color  =  'red'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Boats", "WHERE", "color", "=", "'red", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "boats", "where", "color", "=", "value"], "question": "How many red boats exist?", "question_toks": ["How", "many", "red", "boats", "exist", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"red\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT T3.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T1.age BETWEEN 20 AND 30", "query_toks": ["SELECT", "T3.name", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid", "JOIN", "Boats", "AS", "T3", "ON", "T3.bid", "=", "T2.bid", "WHERE", "T1.age", "BETWEEN", "20", "AND", "30"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "join", "boats", "as", "t3", "on", "t3", ".", "bid", "=", "t2", ".", "bid", "where", "t1", ".", "age", "between", "value", "and", "value"], "question": "Find the names of boats booked by sailors whose age is between 20 and 30.", "question_toks": ["Find", "the", "names", "of", "boats", "booked", "by", "sailors", "whose", "age", "is", "between", "20", "and", "30", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 1, [0, [0, 4, false], null], 20.0, 30.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT T3.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T1.age BETWEEN 20 AND 30", "query_toks": ["SELECT", "T3.name", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid", "JOIN", "Boats", "AS", "T3", "ON", "T3.bid", "=", "T2.bid", "WHERE", "T1.age", "BETWEEN", "20", "AND", "30"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "join", "boats", "as", "t3", "on", "t3", ".", "bid", "=", "t2", ".", "bid", "where", "t1", ".", "age", "between", "value", "and", "value"], "question": "What are the names of the boats booked by people between age 20 and 30?", "question_toks": ["What", "are", "the", "names", "of", "the", "boats", "booked", "by", "people", "between", "age", "20", "and", "30", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 1, [0, [0, 4, false], null], 20.0, 30.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red')", "query_toks": ["SELECT", "name", "FROM", "Sailors", "WHERE", "rating", ">", "(", "SELECT", "max", "(", "T1.rating", ")", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid", "JOIN", "Boats", "AS", "T3", "ON", "T3.bid", "=", "T2.bid", "WHERE", "T3.color", "=", "'red", "'", ")"], "query_toks_no_value": ["select", "name", "from", "sailors", "where", "rating", ">", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "join", "boats", "as", "t3", "on", "t3", ".", "bid", "=", "t2", ".", "bid", "where", "t3", ".", "color", "=", "value", ")"], "question": "Find the names of sailors whose rating is larger than the rating of all sailors who booked a red boat.", "question_toks": ["Find", "the", "names", "of", "sailors", "whose", "rating", "is", "larger", "than", "the", "rating", "of", "all", "sailors", "who", "booked", "a", "red", "boat", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"red\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red')", "query_toks": ["SELECT", "name", "FROM", "Sailors", "WHERE", "rating", ">", "(", "SELECT", "max", "(", "T1.rating", ")", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid", "JOIN", "Boats", "AS", "T3", "ON", "T3.bid", "=", "T2.bid", "WHERE", "T3.color", "=", "'red", "'", ")"], "query_toks_no_value": ["select", "name", "from", "sailors", "where", "rating", ">", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "join", "boats", "as", "t3", "on", "t3", ".", "bid", "=", "t2", ".", "bid", "where", "t3", ".", "color", "=", "value", ")"], "question": "What are the names of the sailors whose rating is larger than the rating of all sailors who booked a red boat?", "question_toks": ["What", "are", "the", "names", "of", "the", "sailors", "whose", "rating", "is", "larger", "than", "the", "rating", "of", "all", "sailors", "who", "booked", "a", "red", "boat", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"red\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT max(rating) FROM Sailors", "query_toks": ["SELECT", "max", "(", "rating", ")", "FROM", "Sailors"], "query_toks_no_value": ["select", "max", "(", "rating", ")", "from", "sailors"], "question": "What is highest rating between sailors?", "question_toks": ["What", "is", "highest", "rating", "between", "sailors", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT max(rating) FROM Sailors", "query_toks": ["SELECT", "max", "(", "rating", ")", "FROM", "Sailors"], "query_toks_no_value": ["select", "max", "(", "rating", ")", "from", "sailors"], "question": "What is the maximum rating for sailors?", "question_toks": ["What", "is", "the", "maximum", "rating", "for", "sailors", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.name  =  'Melon'", "query_toks": ["SELECT", "T1.name", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid", "JOIN", "Boats", "AS", "T3", "ON", "T3.bid", "=", "T2.bid", "WHERE", "T3.name", "=", "'Melon", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "join", "boats", "as", "t3", "on", "t3", ".", "bid", "=", "t2", ".", "bid", "where", "t3", ".", "name", "=", "value"], "question": "Find the names of sailors who reserved boat with the name Melon.", "question_toks": ["Find", "the", "names", "of", "sailors", "who", "reserved", "boat", "with", "the", "name", "Melon", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Melon\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.name  =  'Melon'", "query_toks": ["SELECT", "T1.name", "FROM", "Sailors", "AS", "T1", "JOIN", "Reserves", "AS", "T2", "ON", "T1.sid", "=", "T2.sid", "JOIN", "Boats", "AS", "T3", "ON", "T3.bid", "=", "T2.bid", "WHERE", "T3.name", "=", "'Melon", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "sailors", "as", "t1", "join", "reserves", "as", "t2", "on", "t1", ".", "sid", "=", "t2", ".", "sid", "join", "boats", "as", "t3", "on", "t3", ".", "bid", "=", "t2", ".", "bid", "where", "t3", ".", "name", "=", "value"], "question": "What are the names of sailors who reserved a boat with the name Melon?", "question_toks": ["What", "are", "the", "names", "of", "sailors", "who", "reserved", "a", "boat", "with", "the", "name", "Melon", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Melon\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name ,  age FROM Sailors ORDER BY rating DESC", "query_toks": ["SELECT", "name", ",", "age", "FROM", "Sailors", "ORDER", "BY", "rating", "DESC"], "query_toks_no_value": ["select", "name", ",", "age", "from", "sailors", "order", "by", "rating", "desc"], "question": "List the names and ages of all sailors sorted by rating in descending order.", "question_toks": ["List", "the", "names", "and", "ages", "of", "all", "sailors", "sorted", "by", "rating", "in", "descending", "order", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "boat_1", "query": "SELECT name ,  age FROM Sailors ORDER BY rating DESC", "query_toks": ["SELECT", "name", ",", "age", "FROM", "Sailors", "ORDER", "BY", "rating", "DESC"], "query_toks_no_value": ["select", "name", ",", "age", "from", "sailors", "order", "by", "rating", "desc"], "question": "What are the names and ages of all sailors sorted by decreasing rating?", "question_toks": ["What", "are", "the", "names", "and", "ages", "of", "all", "sailors", "sorted", "by", "decreasing", "rating", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Sailors", "schema": ["sid:number", "name:text", "rating:number", "age:number"]}, {"name": "Boats", "schema": ["bid:number", "name:text", "color:text"]}, {"name": "Reserves", "schema": ["sid:number", "bid:number", "day:text"]}]}
{"db_id": "headphone_store", "query": "SELECT model FROM headphone ORDER BY price DESC LIMIT 1", "query_toks": ["SELECT", "model", "FROM", "headphone", "ORDER", "BY", "price", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "model", "from", "headphone", "order", "by", "price", "desc", "limit", "value"], "question": "Find the model of the most expensive headphone.", "question_toks": ["Find", "the", "model", "of", "the", "most", "expensive", "headphone", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 7, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT model FROM headphone ORDER BY price DESC LIMIT 1", "query_toks": ["SELECT", "model", "FROM", "headphone", "ORDER", "BY", "price", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "model", "from", "headphone", "order", "by", "price", "desc", "limit", "value"], "question": "Which headphone model has the highest price?", "question_toks": ["Which", "headphone", "model", "has", "the", "highest", "price", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 7, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT DISTINCT model FROM headphone ORDER BY model", "query_toks": ["SELECT", "DISTINCT", "model", "FROM", "headphone", "ORDER", "BY", "model"], "query_toks_no_value": ["select", "distinct", "model", "from", "headphone", "order", "by", "model"], "question": "List all different headphone models in the alphabetical order.", "question_toks": ["List", "all", "different", "headphone", "models", "in", "the", "alphabetical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 2, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT DISTINCT model FROM headphone ORDER BY model", "query_toks": ["SELECT", "DISTINCT", "model", "FROM", "headphone", "ORDER", "BY", "model"], "query_toks_no_value": ["select", "distinct", "model", "from", "headphone", "order", "by", "model"], "question": "Return the list of distinct headphone models ordered alphabetically.", "question_toks": ["Return", "the", "list", "of", "distinct", "headphone", "models", "ordered", "alphabetically", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 2, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT CLASS FROM headphone GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "CLASS", "FROM", "headphone", "GROUP", "BY", "CLASS", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "class", "from", "headphone", "group", "by", "class", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which headphone class is the most common one?", "question_toks": ["Which", "headphone", "class", "is", "the", "most", "common", "one", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT CLASS FROM headphone GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "CLASS", "FROM", "headphone", "GROUP", "BY", "CLASS", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "class", "from", "headphone", "group", "by", "class", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which headphone class contains the most headphones?", "question_toks": ["Which", "headphone", "class", "contains", "the", "most", "headphones", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT CLASS FROM headphone GROUP BY CLASS HAVING count(*)  >  2", "query_toks": ["SELECT", "CLASS", "FROM", "headphone", "GROUP", "BY", "CLASS", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "class", "from", "headphone", "group", "by", "class", "having", "count", "(", "*", ")", ">", "value"], "question": "Which headphone class does have more than two headphones?", "question_toks": ["Which", "headphone", "class", "does", "have", "more", "than", "two", "headphones", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT CLASS FROM headphone GROUP BY CLASS HAVING count(*)  >  2", "query_toks": ["SELECT", "CLASS", "FROM", "headphone", "GROUP", "BY", "CLASS", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "class", "from", "headphone", "group", "by", "class", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the headphone class that does not contain more than two headphones.", "question_toks": ["Find", "the", "headphone", "class", "that", "does", "not", "contain", "more", "than", "two", "headphones", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT count(*) ,  CLASS FROM headphone WHERE price  >  200 GROUP BY CLASS", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "CLASS", "FROM", "headphone", "WHERE", "price", ">", "200", "GROUP", "BY", "CLASS"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "class", "from", "headphone", "where", "price", ">", "value", "group", "by", "class"], "question": "Find the number of headphones with a price higher than 200 for each class.", "question_toks": ["Find", "the", "number", "of", "headphones", "with", "a", "price", "higher", "than", "200", "for", "each", "class", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 200.0, null]], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT count(*) ,  CLASS FROM headphone WHERE price  >  200 GROUP BY CLASS", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "CLASS", "FROM", "headphone", "WHERE", "price", ">", "200", "GROUP", "BY", "CLASS"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "class", "from", "headphone", "where", "price", ">", "value", "group", "by", "class"], "question": "How many headphones cost more than 200 for each headphone class?", "question_toks": ["How", "many", "headphones", "cost", "more", "than", "200", "for", "each", "headphone", "class", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 200.0, null]], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT count(DISTINCT earpads) FROM headphone", "query_toks": ["SELECT", "count", "(", "DISTINCT", "earpads", ")", "FROM", "headphone"], "query_toks_no_value": ["select", "count", "(", "distinct", "earpads", ")", "from", "headphone"], "question": "how many different earpads are there?", "question_toks": ["how", "many", "different", "earpads", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 6, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT count(DISTINCT earpads) FROM headphone", "query_toks": ["SELECT", "count", "(", "DISTINCT", "earpads", ")", "FROM", "headphone"], "query_toks_no_value": ["select", "count", "(", "distinct", "earpads", ")", "from", "headphone"], "question": "Count the number of different earpads.", "question_toks": ["Count", "the", "number", "of", "different", "earpads", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 6, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT earpads FROM headphone GROUP BY earpads ORDER BY count(*) DESC LIMIT 2", "query_toks": ["SELECT", "earpads", "FROM", "headphone", "GROUP", "BY", "earpads", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "2"], "query_toks_no_value": ["select", "earpads", "from", "headphone", "group", "by", "earpads", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the top 2 earpads that are mostly used.", "question_toks": ["Find", "the", "top", "2", "earpads", "that", "are", "mostly", "used", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 2, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT earpads FROM headphone GROUP BY earpads ORDER BY count(*) DESC LIMIT 2", "query_toks": ["SELECT", "earpads", "FROM", "headphone", "GROUP", "BY", "earpads", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "2"], "query_toks_no_value": ["select", "earpads", "from", "headphone", "group", "by", "earpads", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the top 2 earpads in terms of the number of headphones using them?", "question_toks": ["What", "are", "the", "top", "2", "earpads", "in", "terms", "of", "the", "number", "of", "headphones", "using", "them", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 2, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT model ,  CLASS ,  construction FROM headphone ORDER BY price LIMIT 1", "query_toks": ["SELECT", "model", ",", "CLASS", ",", "construction", "FROM", "headphone", "ORDER", "BY", "price", "LIMIT", "1"], "query_toks_no_value": ["select", "model", ",", "class", ",", "construction", "from", "headphone", "order", "by", "price", "limit", "value"], "question": "What are the model, class, and construction of the cheapest headphone?", "question_toks": ["What", "are", "the", "model", ",", "class", ",", "and", "construction", "of", "the", "cheapest", "headphone", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 7, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT model ,  CLASS ,  construction FROM headphone ORDER BY price LIMIT 1", "query_toks": ["SELECT", "model", ",", "CLASS", ",", "construction", "FROM", "headphone", "ORDER", "BY", "price", "LIMIT", "1"], "query_toks_no_value": ["select", "model", ",", "class", ",", "construction", "from", "headphone", "order", "by", "price", "limit", "value"], "question": "Find the model, class, and construction of the headphone with the lowest price.", "question_toks": ["Find", "the", "model", ",", "class", ",", "and", "construction", "of", "the", "headphone", "with", "the", "lowest", "price", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 7, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT construction ,  avg(price) FROM headphone GROUP BY construction", "query_toks": ["SELECT", "construction", ",", "avg", "(", "price", ")", "FROM", "headphone", "GROUP", "BY", "construction"], "query_toks_no_value": ["select", "construction", ",", "avg", "(", "price", ")", "from", "headphone", "group", "by", "construction"], "question": "Find the average price for each headphone construction.", "question_toks": ["Find", "the", "average", "price", "for", "each", "headphone", "construction", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [5, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT construction ,  avg(price) FROM headphone GROUP BY construction", "query_toks": ["SELECT", "construction", ",", "avg", "(", "price", ")", "FROM", "headphone", "GROUP", "BY", "construction"], "query_toks_no_value": ["select", "construction", ",", "avg", "(", "price", ")", "from", "headphone", "group", "by", "construction"], "question": "How much does headphones cost on average for each headphone construction?", "question_toks": ["How", "much", "does", "headphones", "cost", "on", "average", "for", "each", "headphone", "construction", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [5, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT CLASS FROM headphone WHERE earpads  =  'Bowls' INTERSECT SELECT CLASS FROM headphone WHERE earpads  =  'Comfort Pads'", "query_toks": ["SELECT", "CLASS", "FROM", "headphone", "WHERE", "earpads", "=", "'Bowls", "'", "INTERSECT", "SELECT", "CLASS", "FROM", "headphone", "WHERE", "earpads", "=", "'Comfort", "Pads", "'"], "query_toks_no_value": ["select", "class", "from", "headphone", "where", "earpads", "=", "value", "intersect", "select", "class", "from", "headphone", "where", "earpads", "=", "value"], "question": "Which headphone classes have both headphones with \"Bowls\" and headphones with \"Comfort Pads\" earpads?", "question_toks": ["Which", "headphone", "classes", "have", "both", "headphones", "with", "``", "Bowls", "''", "and", "headphones", "with", "``", "Comfort", "Pads", "''", "earpads", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Bowls\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Comfort Pads\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT CLASS FROM headphone WHERE earpads  =  'Bowls' INTERSECT SELECT CLASS FROM headphone WHERE earpads  =  'Comfort Pads'", "query_toks": ["SELECT", "CLASS", "FROM", "headphone", "WHERE", "earpads", "=", "'Bowls", "'", "INTERSECT", "SELECT", "CLASS", "FROM", "headphone", "WHERE", "earpads", "=", "'Comfort", "Pads", "'"], "query_toks_no_value": ["select", "class", "from", "headphone", "where", "earpads", "=", "value", "intersect", "select", "class", "from", "headphone", "where", "earpads", "=", "value"], "question": "Find the headphone classes that contain both headphones using \"Bowls\" earpads and headphones using \"Comfort Pads\" earpads.", "question_toks": ["Find", "the", "headphone", "classes", "that", "contain", "both", "headphones", "using", "``", "Bowls", "''", "earpads", "and", "headphones", "using", "``", "Comfort", "Pads", "''", "earpads", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Bowls\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Comfort Pads\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT earpads FROM headphone EXCEPT SELECT earpads FROM headphone WHERE construction  =  'Plastic'", "query_toks": ["SELECT", "earpads", "FROM", "headphone", "EXCEPT", "SELECT", "earpads", "FROM", "headphone", "WHERE", "construction", "=", "'Plastic", "'"], "query_toks_no_value": ["select", "earpads", "from", "headphone", "except", "select", "earpads", "from", "headphone", "where", "construction", "=", "value"], "question": "Which earpads never use plastic construction?", "question_toks": ["Which", "earpads", "never", "use", "plastic", "construction", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Plastic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT earpads FROM headphone EXCEPT SELECT earpads FROM headphone WHERE construction  =  'Plastic'", "query_toks": ["SELECT", "earpads", "FROM", "headphone", "EXCEPT", "SELECT", "earpads", "FROM", "headphone", "WHERE", "construction", "=", "'Plastic", "'"], "query_toks_no_value": ["select", "earpads", "from", "headphone", "except", "select", "earpads", "from", "headphone", "where", "construction", "=", "value"], "question": "Find all earpads that do not use plastic construction.", "question_toks": ["Find", "all", "earpads", "that", "do", "not", "use", "plastic", "construction", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Plastic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT model FROM headphone WHERE price  <  (SELECT avg(price) FROM headphone)", "query_toks": ["SELECT", "model", "FROM", "headphone", "WHERE", "price", "<", "(", "SELECT", "avg", "(", "price", ")", "FROM", "headphone", ")"], "query_toks_no_value": ["select", "model", "from", "headphone", "where", "price", "<", "(", "select", "avg", "(", "price", ")", "from", "headphone", ")"], "question": "Find the headphone models whose price is below the average price.", "question_toks": ["Find", "the", "headphone", "models", "whose", "price", "is", "below", "the", "average", "price", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT model FROM headphone WHERE price  <  (SELECT avg(price) FROM headphone)", "query_toks": ["SELECT", "model", "FROM", "headphone", "WHERE", "price", "<", "(", "SELECT", "avg", "(", "price", ")", "FROM", "headphone", ")"], "query_toks_no_value": ["select", "model", "from", "headphone", "where", "price", "<", "(", "select", "avg", "(", "price", ")", "from", "headphone", ")"], "question": "What are the headphone models that cost less than the average price?", "question_toks": ["What", "are", "the", "headphone", "models", "that", "cost", "less", "than", "the", "average", "price", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT name FROM store ORDER BY date_opened", "query_toks": ["SELECT", "name", "FROM", "store", "ORDER", "BY", "date_opened"], "query_toks_no_value": ["select", "name", "from", "store", "order", "by", "date_opened"], "question": "Sort all store names by store open date.", "question_toks": ["Sort", "all", "store", "names", "by", "store", "open", "date", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 12, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT name FROM store ORDER BY date_opened", "query_toks": ["SELECT", "name", "FROM", "store", "ORDER", "BY", "date_opened"], "query_toks_no_value": ["select", "name", "from", "store", "order", "by", "date_opened"], "question": "Give me a list of store names, sorted by store open date.", "question_toks": ["Give", "me", "a", "list", "of", "store", "names", ",", "sorted", "by", "store", "open", "date", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 12, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT name ,  parking FROM store WHERE neighborhood  =  'Tarzana'", "query_toks": ["SELECT", "name", ",", "parking", "FROM", "store", "WHERE", "neighborhood", "=", "'Tarzana", "'"], "query_toks_no_value": ["select", "name", ",", "parking", "from", "store", "where", "neighborhood", "=", "value"], "question": "List name and parking info for the stores in the Tarzana neighborhood.", "question_toks": ["List", "name", "and", "parking", "info", "for", "the", "stores", "in", "the", "Tarzana", "neighborhood", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Tarzana\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT name ,  parking FROM store WHERE neighborhood  =  'Tarzana'", "query_toks": ["SELECT", "name", ",", "parking", "FROM", "store", "WHERE", "neighborhood", "=", "'Tarzana", "'"], "query_toks_no_value": ["select", "name", ",", "parking", "from", "store", "where", "neighborhood", "=", "value"], "question": "Which stores are located in the \"Tarzana\" neighborhood? Return their names and parking information.", "question_toks": ["Which", "stores", "are", "located", "in", "the", "``", "Tarzana", "''", "neighborhood", "?", "Return", "their", "names", "and", "parking", "information", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Tarzana\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT count(DISTINCT neighborhood) FROM store", "query_toks": ["SELECT", "count", "(", "DISTINCT", "neighborhood", ")", "FROM", "store"], "query_toks_no_value": ["select", "count", "(", "distinct", "neighborhood", ")", "from", "store"], "question": "How many different neighborhoods are there for all stores?", "question_toks": ["How", "many", "different", "neighborhoods", "are", "there", "for", "all", "stores", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT count(DISTINCT neighborhood) FROM store", "query_toks": ["SELECT", "count", "(", "DISTINCT", "neighborhood", ")", "FROM", "store"], "query_toks_no_value": ["select", "count", "(", "distinct", "neighborhood", ")", "from", "store"], "question": "Count the number of distinct neighborhoods stores are located.", "question_toks": ["Count", "the", "number", "of", "distinct", "neighborhoods", "stores", "are", "located", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT count(*) ,  neighborhood FROM store GROUP BY neighborhood", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "neighborhood", "FROM", "store", "GROUP", "BY", "neighborhood"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "neighborhood", "from", "store", "group", "by", "neighborhood"], "question": "find the number of stores in each neighborhood.", "question_toks": ["find", "the", "number", "of", "stores", "in", "each", "neighborhood", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT count(*) ,  neighborhood FROM store GROUP BY neighborhood", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "neighborhood", "FROM", "store", "GROUP", "BY", "neighborhood"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "neighborhood", "from", "store", "group", "by", "neighborhood"], "question": "How many stores are there in each neighborhood?", "question_toks": ["How", "many", "stores", "are", "there", "in", "each", "neighborhood", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT t1.name ,  sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id GROUP BY t2.store_id ORDER BY sum(t2.quantity) DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "sum", "(", "t2.quantity", ")", "FROM", "store", "AS", "t1", "JOIN", "stock", "AS", "t2", "ON", "t1.store_id", "=", "t2.store_id", "GROUP", "BY", "t2.store_id", "ORDER", "BY", "sum", "(", "t2.quantity", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "sum", "(", "t2", ".", "quantity", ")", "from", "store", "as", "t1", "join", "stock", "as", "t2", "on", "t1", ".", "store_id", "=", "t2", ".", "store_id", "group", "by", "t2", ".", "store_id", "order", "by", "sum", "(", "t2", ".", "quantity", ")", "desc", "limit", "value"], "question": "Find the name of the store which has the most headphones in stock. List the number of headphones as well.", "question_toks": ["Find", "the", "name", "of", "the", "store", "which", "has", "the", "most", "headphones", "in", "stock", ".", "List", "the", "number", "of", "headphones", "as", "well", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [4, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [], "orderBy": ["desc", [[0, [4, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT t1.name ,  sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id GROUP BY t2.store_id ORDER BY sum(t2.quantity) DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "sum", "(", "t2.quantity", ")", "FROM", "store", "AS", "t1", "JOIN", "stock", "AS", "t2", "ON", "t1.store_id", "=", "t2.store_id", "GROUP", "BY", "t2.store_id", "ORDER", "BY", "sum", "(", "t2.quantity", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "sum", "(", "t2", ".", "quantity", ")", "from", "store", "as", "t1", "join", "stock", "as", "t2", "on", "t1", ".", "store_id", "=", "t2", ".", "store_id", "group", "by", "t2", ".", "store_id", "order", "by", "sum", "(", "t2", ".", "quantity", ")", "desc", "limit", "value"], "question": "Which store has the headphones in stock? Give me the store name and the total quantity.", "question_toks": ["Which", "store", "has", "the", "headphones", "in", "stock", "?", "Give", "me", "the", "store", "name", "and", "the", "total", "quantity", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [4, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [], "orderBy": ["desc", [[0, [4, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT name FROM store WHERE store_id NOT IN (SELECT store_id FROM stock)", "query_toks": ["SELECT", "name", "FROM", "store", "WHERE", "store_id", "NOT", "IN", "(", "SELECT", "store_id", "FROM", "stock", ")"], "query_toks_no_value": ["select", "name", "from", "store", "where", "store_id", "not", "in", "(", "select", "store_id", "from", "stock", ")"], "question": "Find the name of stores which have no headphone in stock.", "question_toks": ["Find", "the", "name", "of", "stores", "which", "have", "no", "headphone", "in", "stock", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT name FROM store WHERE store_id NOT IN (SELECT store_id FROM stock)", "query_toks": ["SELECT", "name", "FROM", "store", "WHERE", "store_id", "NOT", "IN", "(", "SELECT", "store_id", "FROM", "stock", ")"], "query_toks_no_value": ["select", "name", "from", "store", "where", "store_id", "not", "in", "(", "select", "store_id", "from", "stock", ")"], "question": "Which stores do not have any headphones in stock? Give me the store names.", "question_toks": ["Which", "stores", "do", "not", "have", "any", "headphones", "in", "stock", "?", "Give", "me", "the", "store", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT model FROM headphone WHERE headphone_id NOT IN (SELECT headphone_id FROM stock)", "query_toks": ["SELECT", "model", "FROM", "headphone", "WHERE", "headphone_id", "NOT", "IN", "(", "SELECT", "headphone_id", "FROM", "stock", ")"], "query_toks_no_value": ["select", "model", "from", "headphone", "where", "headphone_id", "not", "in", "(", "select", "headphone_id", "from", "stock", ")"], "question": "Which headphone models do not have any stock in any store?", "question_toks": ["Which", "headphone", "models", "do", "not", "have", "any", "stock", "in", "any", "store", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT model FROM headphone WHERE headphone_id NOT IN (SELECT headphone_id FROM stock)", "query_toks": ["SELECT", "model", "FROM", "headphone", "WHERE", "headphone_id", "NOT", "IN", "(", "SELECT", "headphone_id", "FROM", "stock", ")"], "query_toks_no_value": ["select", "model", "from", "headphone", "where", "headphone_id", "not", "in", "(", "select", "headphone_id", "from", "stock", ")"], "question": "Find the headphone models that are not in stock in any store.", "question_toks": ["Find", "the", "headphone", "models", "that", "are", "not", "in", "stock", "in", "any", "store", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT t1.model FROM headphone AS t1 JOIN stock AS t2 ON t1.headphone_id  =  t2.headphone_id GROUP BY t1.model ORDER BY sum(t2.quantity) DESC LIMIT 1", "query_toks": ["SELECT", "t1.model", "FROM", "headphone", "AS", "t1", "JOIN", "stock", "AS", "t2", "ON", "t1.headphone_id", "=", "t2.headphone_id", "GROUP", "BY", "t1.model", "ORDER", "BY", "sum", "(", "t2.quantity", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "headphone", "as", "t1", "join", "stock", "as", "t2", "on", "t1", ".", "headphone_id", "=", "t2", ".", "headphone_id", "group", "by", "t1", ".", "model", "order", "by", "sum", "(", "t2", ".", "quantity", ")", "desc", "limit", "value"], "question": "Which headphone model has the largest quantity of stock across all the stores?", "question_toks": ["Which", "headphone", "model", "has", "the", "largest", "quantity", "of", "stock", "across", "all", "the", "stores", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [4, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT t1.model FROM headphone AS t1 JOIN stock AS t2 ON t1.headphone_id  =  t2.headphone_id GROUP BY t1.model ORDER BY sum(t2.quantity) DESC LIMIT 1", "query_toks": ["SELECT", "t1.model", "FROM", "headphone", "AS", "t1", "JOIN", "stock", "AS", "t2", "ON", "t1.headphone_id", "=", "t2.headphone_id", "GROUP", "BY", "t1.model", "ORDER", "BY", "sum", "(", "t2.quantity", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "headphone", "as", "t1", "join", "stock", "as", "t2", "on", "t1", ".", "headphone_id", "=", "t2", ".", "headphone_id", "group", "by", "t1", ".", "model", "order", "by", "sum", "(", "t2", ".", "quantity", ")", "desc", "limit", "value"], "question": "Find the headphone model whose total quantity in stock is the largest.", "question_toks": ["Find", "the", "headphone", "model", "whose", "total", "quantity", "in", "stock", "is", "the", "largest", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [4, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id WHERE t1.name  =  'Woodman'", "query_toks": ["SELECT", "sum", "(", "t2.quantity", ")", "FROM", "store", "AS", "t1", "JOIN", "stock", "AS", "t2", "ON", "t1.store_id", "=", "t2.store_id", "WHERE", "t1.name", "=", "'Woodman", "'"], "query_toks_no_value": ["select", "sum", "(", "t2", ".", "quantity", ")", "from", "store", "as", "t1", "join", "stock", "as", "t2", "on", "t1", ".", "store_id", "=", "t2", ".", "store_id", "where", "t1", ".", "name", "=", "value"], "question": "How many headphones are stored in the Woodman store?", "question_toks": ["How", "many", "headphones", "are", "stored", "in", "the", "Woodman", "store", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 13, false], null]]}, "select": [false, [[4, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Woodman\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id WHERE t1.name  =  'Woodman'", "query_toks": ["SELECT", "sum", "(", "t2.quantity", ")", "FROM", "store", "AS", "t1", "JOIN", "stock", "AS", "t2", "ON", "t1.store_id", "=", "t2.store_id", "WHERE", "t1.name", "=", "'Woodman", "'"], "query_toks_no_value": ["select", "sum", "(", "t2", ".", "quantity", ")", "from", "store", "as", "t1", "join", "stock", "as", "t2", "on", "t1", ".", "store_id", "=", "t2", ".", "store_id", "where", "t1", ".", "name", "=", "value"], "question": "Find the total quantity of headphones stored in the Woodman store.", "question_toks": ["Find", "the", "total", "quantity", "of", "headphones", "stored", "in", "the", "Woodman", "store", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 13, false], null]]}, "select": [false, [[4, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Woodman\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT Neighborhood FROM store EXCEPT SELECT t1.Neighborhood FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id", "query_toks": ["SELECT", "Neighborhood", "FROM", "store", "EXCEPT", "SELECT", "t1.Neighborhood", "FROM", "store", "AS", "t1", "JOIN", "stock", "AS", "t2", "ON", "t1.store_id", "=", "t2.store_id"], "query_toks_no_value": ["select", "neighborhood", "from", "store", "except", "select", "t1", ".", "neighborhood", "from", "store", "as", "t1", "join", "stock", "as", "t2", "on", "t1", ".", "store_id", "=", "t2", ".", "store_id"], "question": "Which neighborhood does not have any headphone in stock?", "question_toks": ["Which", "neighborhood", "does", "not", "have", "any", "headphone", "in", "stock", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "headphone_store", "query": "SELECT Neighborhood FROM store EXCEPT SELECT t1.Neighborhood FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id", "query_toks": ["SELECT", "Neighborhood", "FROM", "store", "EXCEPT", "SELECT", "t1.Neighborhood", "FROM", "store", "AS", "t1", "JOIN", "stock", "AS", "t2", "ON", "t1.store_id", "=", "t2.store_id"], "query_toks_no_value": ["select", "neighborhood", "from", "store", "except", "select", "t1", ".", "neighborhood", "from", "store", "as", "t1", "join", "stock", "as", "t2", "on", "t1", ".", "store_id", "=", "t2", ".", "store_id"], "question": "Find the neighborhood where no headphones are in stock.", "question_toks": ["Find", "the", "neighborhood", "where", "no", "headphones", "are", "in", "stock", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "headphone", "schema": ["Headphone_ID:number", "Model:text", "Class:text", "Driver-matched_dB:number", "Construction:text", "Earpads:text", "Price:number"]}, {"name": "store", "schema": ["Store_ID:number", "Name:text", "Neighborhood:text", "Parking:text", "Date_Opened:text"]}, {"name": "stock", "schema": ["Store_ID:number", "Headphone_ID:number", "Quantity:number"]}]}
{"db_id": "aan_1", "query": "SELECT count(*) FROM Author", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Author"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "author"], "question": "How many authors do we have?", "question_toks": ["How", "many", "authors", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT count(*) FROM Author", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Author"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "author"], "question": "Count the number of authors.", "question_toks": ["Count", "the", "number", "of", "authors", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT count(*) FROM Paper", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Paper"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "paper"], "question": "How many papers do we have?", "question_toks": ["How", "many", "papers", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT count(*) FROM Paper", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Paper"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "paper"], "question": "Count the number of papers.", "question_toks": ["Count", "the", "number", "of", "papers", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT count(*) FROM Affiliation", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Affiliation"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "affiliation"], "question": "How many affiliations do we have?", "question_toks": ["How", "many", "affiliations", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT count(*) FROM Affiliation", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Affiliation"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "affiliation"], "question": "Count the number of affiliations.", "question_toks": ["Count", "the", "number", "of", "affiliations", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT count(*) FROM Paper WHERE venue  =  \"NAACL\" AND YEAR  =  2000", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Paper", "WHERE", "venue", "=", "``", "NAACL", "''", "AND", "YEAR", "=", "2000"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "paper", "where", "venue", "=", "value", "and", "year", "=", "value"], "question": "How many papers do we have in NAACL 2000?", "question_toks": ["How", "many", "papers", "do", "we", "have", "in", "NAACL", "2000", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"NAACL\"", null], "and", [false, 2, [0, [0, 15, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT count(*) FROM Paper WHERE venue  =  \"NAACL\" AND YEAR  =  2000", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Paper", "WHERE", "venue", "=", "``", "NAACL", "''", "AND", "YEAR", "=", "2000"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "paper", "where", "venue", "=", "value", "and", "year", "=", "value"], "question": "Count the number of papers in NAACL 2000.", "question_toks": ["Count", "the", "number", "of", "papers", "in", "NAACL", "2000", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"NAACL\"", null], "and", [false, 2, [0, [0, 15, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\" AND T1.year  =  2009", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T1.paper_id", ")", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Affiliation", "AS", "T3", "ON", "T2.affiliation_id", "=", "T3.affiliation_id", "WHERE", "T3.name", "LIKE", "``", "Columbia", "University", "''", "AND", "T1.year", "=", "2009"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "paper_id", ")", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "affiliation", "as", "t3", "on", "t2", ".", "affiliation_id", "=", "t3", ".", "affiliation_id", "where", "t3", ".", "name", "like", "value", "and", "t1", ".", "year", "=", "value"], "question": "How many papers are published in year 2009 by Columbia University?", "question_toks": ["How", "many", "papers", "are", "published", "in", "year", "2009", "by", "Columbia", "University", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 12, true], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"Columbia University\"", null], "and", [false, 2, [0, [0, 15, false], null], 2009.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\" AND T1.year  =  2009", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T1.paper_id", ")", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Affiliation", "AS", "T3", "ON", "T2.affiliation_id", "=", "T3.affiliation_id", "WHERE", "T3.name", "LIKE", "``", "Columbia", "University", "''", "AND", "T1.year", "=", "2009"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "paper_id", ")", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "affiliation", "as", "t3", "on", "t2", ".", "affiliation_id", "=", "t3", ".", "affiliation_id", "where", "t3", ".", "name", "like", "value", "and", "t1", ".", "year", "=", "value"], "question": "Count the number of papers published by Columbia University in 2009.", "question_toks": ["Count", "the", "number", "of", "papers", "published", "by", "Columbia", "University", "in", "2009", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 12, true], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"Columbia University\"", null], "and", [false, 2, [0, [0, 15, false], null], 2009.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT DISTINCT name ,  address FROM Affiliation", "query_toks": ["SELECT", "DISTINCT", "name", ",", "address", "FROM", "Affiliation"], "query_toks_no_value": ["select", "distinct", "name", ",", "address", "from", "affiliation"], "question": "List names and addresses for all affiliations.", "question_toks": ["List", "names", "and", "addresses", "for", "all", "affiliations", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT DISTINCT name ,  address FROM Affiliation", "query_toks": ["SELECT", "DISTINCT", "name", ",", "address", "FROM", "Affiliation"], "query_toks_no_value": ["select", "distinct", "name", ",", "address", "from", "affiliation"], "question": "What are the names and addresses for all affiliations?", "question_toks": ["What", "are", "the", "names", "and", "addresses", "for", "all", "affiliations", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT DISTINCT venue ,  YEAR FROM paper ORDER BY YEAR", "query_toks": ["SELECT", "DISTINCT", "venue", ",", "YEAR", "FROM", "paper", "ORDER", "BY", "YEAR"], "query_toks_no_value": ["select", "distinct", "venue", ",", "year", "from", "paper", "order", "by", "year"], "question": "List all venues and years for papers ordered by year.", "question_toks": ["List", "all", "venues", "and", "years", "for", "papers", "ordered", "by", "year", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [true, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT DISTINCT venue ,  YEAR FROM paper ORDER BY YEAR", "query_toks": ["SELECT", "DISTINCT", "venue", ",", "YEAR", "FROM", "paper", "ORDER", "BY", "YEAR"], "query_toks_no_value": ["select", "distinct", "venue", ",", "year", "from", "paper", "order", "by", "year"], "question": "What are the distinct venues for papers, ordered by year?", "question_toks": ["What", "are", "the", "distinct", "venues", "for", "papers", ",", "ordered", "by", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [true, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name  =  \"Harvard University\"", "query_toks": ["SELECT", "DISTINCT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Affiliation", "AS", "T3", "ON", "T2.affiliation_id", "=", "T3.affiliation_id", "WHERE", "T3.name", "=", "``", "Harvard", "University", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "affiliation", "as", "t3", "on", "t2", ".", "affiliation_id", "=", "t3", ".", "affiliation_id", "where", "t3", ".", "name", "=", "value"], "question": "Find the titles and paper IDs for papers written by Harvard University.", "question_toks": ["Find", "the", "titles", "and", "paper", "IDs", "for", "papers", "written", "by", "Harvard", "University", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Harvard University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name  =  \"Harvard University\"", "query_toks": ["SELECT", "DISTINCT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Affiliation", "AS", "T3", "ON", "T2.affiliation_id", "=", "T3.affiliation_id", "WHERE", "T3.name", "=", "``", "Harvard", "University", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "affiliation", "as", "t3", "on", "t2", ".", "affiliation_id", "=", "t3", ".", "affiliation_id", "where", "t3", ".", "name", "=", "value"], "question": "What are the titles and paper ids for papers written in affiliation with Harvard University?", "question_toks": ["What", "are", "the", "titles", "and", "paper", "ids", "for", "papers", "written", "in", "affiliation", "with", "Harvard", "University", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Harvard University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T3.name LIKE \"%Mckeown%\"", "query_toks": ["SELECT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Author", "AS", "T3", "ON", "T3.author_id", "=", "T2.author_id", "WHERE", "T3.name", "LIKE", "``", "%", "Mckeown", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "author", "as", "t3", "on", "t3", ".", "author_id", "=", "t2", ".", "author_id", "where", "t3", ".", "name", "like", "value"], "question": "Find all papers with titles and paper IDs written by Mckeown.", "question_toks": ["Find", "all", "papers", "with", "titles", "and", "paper", "IDs", "written", "by", "Mckeown", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%Mckeown%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T3.name LIKE \"%Mckeown%\"", "query_toks": ["SELECT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Author", "AS", "T3", "ON", "T3.author_id", "=", "T2.author_id", "WHERE", "T3.name", "LIKE", "``", "%", "Mckeown", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "author", "as", "t3", "on", "t3", ".", "author_id", "=", "t2", ".", "author_id", "where", "t3", ".", "name", "like", "value"], "question": "What are the titles and paper ids for papers written by Mckeown?", "question_toks": ["What", "are", "the", "titles", "and", "paper", "ids", "for", "papers", "written", "by", "Mckeown", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%Mckeown%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Stanford University\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\"", "query_toks": ["SELECT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Affiliation", "AS", "T3", "ON", "T2.affiliation_id", "=", "T3.affiliation_id", "WHERE", "T3.name", "LIKE", "``", "Stanford", "University", "''", "INTERSECT", "SELECT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Affiliation", "AS", "T3", "ON", "T2.affiliation_id", "=", "T3.affiliation_id", "WHERE", "T3.name", "LIKE", "``", "Columbia", "University", "''"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "affiliation", "as", "t3", "on", "t2", ".", "affiliation_id", "=", "t3", ".", "affiliation_id", "where", "t3", ".", "name", "like", "value", "intersect", "select", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "affiliation", "as", "t3", "on", "t2", ".", "affiliation_id", "=", "t3", ".", "affiliation_id", "where", "t3", ".", "name", "like", "value"], "question": "Find all papers with titles and paper IDs collaborated by Stanford University and Columbia University.", "question_toks": ["Find", "all", "papers", "with", "titles", "and", "paper", "IDs", "collaborated", "by", "Stanford", "University", "and", "Columbia", "University", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"Stanford University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"Columbia University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Stanford University\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\"", "query_toks": ["SELECT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Affiliation", "AS", "T3", "ON", "T2.affiliation_id", "=", "T3.affiliation_id", "WHERE", "T3.name", "LIKE", "``", "Stanford", "University", "''", "INTERSECT", "SELECT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Affiliation", "AS", "T3", "ON", "T2.affiliation_id", "=", "T3.affiliation_id", "WHERE", "T3.name", "LIKE", "``", "Columbia", "University", "''"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "affiliation", "as", "t3", "on", "t2", ".", "affiliation_id", "=", "t3", ".", "affiliation_id", "where", "t3", ".", "name", "like", "value", "intersect", "select", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "affiliation", "as", "t3", "on", "t2", ".", "affiliation_id", "=", "t3", ".", "affiliation_id", "where", "t3", ".", "name", "like", "value"], "question": "What are the titles and paper ids for papers which were affiliated with both Stanford and Columbia University?", "question_toks": ["What", "are", "the", "titles", "and", "paper", "ids", "for", "papers", "which", "were", "affiliated", "with", "both", "Stanford", "and", "Columbia", "University", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"Stanford University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"Columbia University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown ,  Kathleen%\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow ,  Owen%\"", "query_toks": ["SELECT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Author", "AS", "T3", "ON", "T2.author_id", "=", "T3.author_id", "WHERE", "T3.name", "LIKE", "``", "%", "Mckeown", ",", "Kathleen", "%", "''", "INTERSECT", "SELECT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Author", "AS", "T3", "ON", "T2.author_id", "=", "T3.author_id", "WHERE", "T3.name", "LIKE", "``", "%", "Rambow", ",", "Owen", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "author", "as", "t3", "on", "t2", ".", "author_id", "=", "t3", ".", "author_id", "where", "t3", ".", "name", "like", "value", "intersect", "select", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "author", "as", "t3", "on", "t2", ".", "author_id", "=", "t3", ".", "author_id", "where", "t3", ".", "name", "like", "value"], "question": "Find all papers with titles and paper IDs co-authored by Mckeown, Kathleen and Rambow, Owen.", "question_toks": ["Find", "all", "papers", "with", "titles", "and", "paper", "IDs", "co-authored", "by", "Mckeown", ",", "Kathleen", "and", "Rambow", ",", "Owen", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%Mckeown ,  Kathleen%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%Rambow ,  Owen%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown ,  Kathleen%\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow ,  Owen%\"", "query_toks": ["SELECT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Author", "AS", "T3", "ON", "T2.author_id", "=", "T3.author_id", "WHERE", "T3.name", "LIKE", "``", "%", "Mckeown", ",", "Kathleen", "%", "''", "INTERSECT", "SELECT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Author", "AS", "T3", "ON", "T2.author_id", "=", "T3.author_id", "WHERE", "T3.name", "LIKE", "``", "%", "Rambow", ",", "Owen", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "author", "as", "t3", "on", "t2", ".", "author_id", "=", "t3", ".", "author_id", "where", "t3", ".", "name", "like", "value", "intersect", "select", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "author", "as", "t3", "on", "t2", ".", "author_id", "=", "t3", ".", "author_id", "where", "t3", ".", "name", "like", "value"], "question": "What are the titles and paper ids co-authored by Mckeown, Kathleen and Rambow, Owen?", "question_toks": ["What", "are", "the", "titles", "and", "paper", "ids", "co-authored", "by", "Mckeown", ",", "Kathleen", "and", "Rambow", ",", "Owen", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%Mckeown ,  Kathleen%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%Rambow ,  Owen%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown%\" EXCEPT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow%\"", "query_toks": ["SELECT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Author", "AS", "T3", "ON", "T2.author_id", "=", "T3.author_id", "WHERE", "T3.name", "LIKE", "``", "%", "Mckeown", "%", "''", "EXCEPT", "SELECT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Author", "AS", "T3", "ON", "T2.author_id", "=", "T3.author_id", "WHERE", "T3.name", "LIKE", "``", "%", "Rambow", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "author", "as", "t3", "on", "t2", ".", "author_id", "=", "t3", ".", "author_id", "where", "t3", ".", "name", "like", "value", "except", "select", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "author", "as", "t3", "on", "t2", ".", "author_id", "=", "t3", ".", "author_id", "where", "t3", ".", "name", "like", "value"], "question": "Find the titles and paper IDs for papers which have Mckeown but not Rambow in author list.", "question_toks": ["Find", "the", "titles", "and", "paper", "IDs", "for", "papers", "which", "have", "Mckeown", "but", "not", "Rambow", "in", "author", "list", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%Mckeown%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%Rambow%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown%\" EXCEPT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow%\"", "query_toks": ["SELECT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Author", "AS", "T3", "ON", "T2.author_id", "=", "T3.author_id", "WHERE", "T3.name", "LIKE", "``", "%", "Mckeown", "%", "''", "EXCEPT", "SELECT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Author", "AS", "T3", "ON", "T2.author_id", "=", "T3.author_id", "WHERE", "T3.name", "LIKE", "``", "%", "Rambow", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "author", "as", "t3", "on", "t2", ".", "author_id", "=", "t3", ".", "author_id", "where", "t3", ".", "name", "like", "value", "except", "select", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "author", "as", "t3", "on", "t2", ".", "author_id", "=", "t3", ".", "author_id", "where", "t3", ".", "name", "like", "value"], "question": "What are the titles and paper ids which have Mckeown as an author, but not Rambow?", "question_toks": ["What", "are", "the", "titles", "and", "paper", "ids", "which", "have", "Mckeown", "as", "an", "author", ",", "but", "not", "Rambow", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%Mckeown%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%Rambow%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE  T3.name LIKE \"%Mckeown ,  Kathleen%\" OR T3.name LIKE \"%Rambow ,  Owen%\"", "query_toks": ["SELECT", "DISTINCT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Author", "AS", "T3", "ON", "T2.author_id", "=", "T3.author_id", "WHERE", "T3.name", "LIKE", "``", "%", "Mckeown", ",", "Kathleen", "%", "''", "OR", "T3.name", "LIKE", "``", "%", "Rambow", ",", "Owen", "%", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "author", "as", "t3", "on", "t2", ".", "author_id", "=", "t3", ".", "author_id", "where", "t3", ".", "name", "like", "value", "or", "t3", ".", "name", "like", "value"], "question": "Find the titles and paper IDs for papers which have Mckeown, Kathleen or Rambow, Owen in author list.", "question_toks": ["Find", "the", "titles", "and", "paper", "IDs", "for", "papers", "which", "have", "Mckeown", ",", "Kathleen", "or", "Rambow", ",", "Owen", "in", "author", "list", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [true, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%Mckeown ,  Kathleen%\"", null], "or", [false, 9, [0, [0, 5, false], null], "\"%Rambow ,  Owen%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE  T3.name LIKE \"%Mckeown ,  Kathleen%\" OR T3.name LIKE \"%Rambow ,  Owen%\"", "query_toks": ["SELECT", "DISTINCT", "T1.title", ",", "T1.paper_id", "FROM", "Paper", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.paper_id", "=", "T2.paper_id", "JOIN", "Author", "AS", "T3", "ON", "T2.author_id", "=", "T3.author_id", "WHERE", "T3.name", "LIKE", "``", "%", "Mckeown", ",", "Kathleen", "%", "''", "OR", "T3.name", "LIKE", "``", "%", "Rambow", ",", "Owen", "%", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "title", ",", "t1", ".", "paper_id", "from", "paper", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "paper_id", "=", "t2", ".", "paper_id", "join", "author", "as", "t3", "on", "t2", ".", "author_id", "=", "t3", ".", "author_id", "where", "t3", ".", "name", "like", "value", "or", "t3", ".", "name", "like", "value"], "question": "What are the titles and paper ids for papers that have Mckeown, Kathleen or Rambow, Owen in their author list?", "question_toks": ["What", "are", "the", "titles", "and", "paper", "ids", "for", "papers", "that", "have", "Mckeown", ",", "Kathleen", "or", "Rambow", ",", "Owen", "in", "their", "author", "list", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [true, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%Mckeown ,  Kathleen%\"", null], "or", [false, 9, [0, [0, 5, false], null], "\"%Rambow ,  Owen%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id ORDER BY count(*) DESC", "query_toks": ["SELECT", "T1.name", ",", "count", "(", "*", ")", "FROM", "Author", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "GROUP", "BY", "T1.author_id", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "author", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "group", "by", "t1", ".", "author_id", "order", "by", "count", "(", "*", ")", "desc"], "question": "List the names of all authors and their number of papers in descending order by number of papers.", "question_toks": ["List", "the", "names", "of", "all", "authors", "and", "their", "number", "of", "papers", "in", "descending", "order", "by", "number", "of", "papers", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id ORDER BY count(*) DESC", "query_toks": ["SELECT", "T1.name", ",", "count", "(", "*", ")", "FROM", "Author", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "GROUP", "BY", "T1.author_id", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "author", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "group", "by", "t1", ".", "author_id", "order", "by", "count", "(", "*", ")", "desc"], "question": "How many papers did each author publish, ordered by number of papers?", "question_toks": ["How", "many", "papers", "did", "each", "author", "publish", ",", "ordered", "by", "number", "of", "papers", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id ORDER BY count(*) DESC", "query_toks": ["SELECT", "T1.name", "FROM", "Affiliation", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.affiliation_id", "=", "T2.affiliation_id", "GROUP", "BY", "T1.affiliation_id", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "affiliation", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "affiliation_id", "=", "t2", ".", "affiliation_id", "group", "by", "t1", ".", "affiliation_id", "order", "by", "count", "(", "*", ")", "desc"], "question": "List all affiliations with ascending ordered number of papers.", "question_toks": ["List", "all", "affiliations", "with", "ascending", "ordered", "number", "of", "papers", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id ORDER BY count(*) DESC", "query_toks": ["SELECT", "T1.name", "FROM", "Affiliation", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.affiliation_id", "=", "T2.affiliation_id", "GROUP", "BY", "T1.affiliation_id", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "affiliation", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "affiliation_id", "=", "t2", ".", "affiliation_id", "group", "by", "t1", ".", "affiliation_id", "order", "by", "count", "(", "*", ")", "desc"], "question": "What are the names of all affiliations, ordered by number of papers?", "question_toks": ["What", "are", "the", "names", "of", "all", "affiliations", ",", "ordered", "by", "number", "of", "papers", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  >  50", "query_toks": ["SELECT", "T1.name", "FROM", "Author", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "GROUP", "BY", "T1.author_id", "HAVING", "count", "(", "*", ")", ">", "50"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "author", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "group", "by", "t1", ".", "author_id", "having", "count", "(", "*", ")", ">", "value"], "question": "List names of all authors who have more than 50 papers.", "question_toks": ["List", "names", "of", "all", "authors", "who", "have", "more", "than", "50", "papers", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [[false, 3, [0, [3, 0, false], null], 50.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  >  50", "query_toks": ["SELECT", "T1.name", "FROM", "Author", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "GROUP", "BY", "T1.author_id", "HAVING", "count", "(", "*", ")", ">", "50"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "author", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "group", "by", "t1", ".", "author_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of all authors who have more than 50 papers?", "question_toks": ["What", "are", "the", "names", "of", "all", "authors", "who", "have", "more", "than", "50", "papers", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [[false, 3, [0, [3, 0, false], null], 50.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  =  1", "query_toks": ["SELECT", "T1.name", "FROM", "Author", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "GROUP", "BY", "T1.author_id", "HAVING", "count", "(", "*", ")", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "author", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "group", "by", "t1", ".", "author_id", "having", "count", "(", "*", ")", "=", "value"], "question": "List names of all authors who have only 1 paper.", "question_toks": ["List", "names", "of", "all", "authors", "who", "have", "only", "1", "paper", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [[false, 2, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  =  1", "query_toks": ["SELECT", "T1.name", "FROM", "Author", "AS", "T1", "JOIN", "Author_list", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "GROUP", "BY", "T1.author_id", "HAVING", "count", "(", "*", ")", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "author", "as", "t1", "join", "author_list", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "group", "by", "t1", ".", "author_id", "having", "count", "(", "*", ")", "=", "value"], "question": "What are the names of authors who have exactly 1 paper?", "question_toks": ["What", "are", "the", "names", "of", "authors", "who", "have", "exactly", "1", "paper", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [[false, 2, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT venue ,  YEAR FROM paper GROUP BY venue ,  YEAR ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "venue", ",", "YEAR", "FROM", "paper", "GROUP", "BY", "venue", ",", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "venue", ",", "year", "from", "paper", "group", "by", "venue", ",", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the venue and year with the most number of publications?", "question_toks": ["What", "is", "the", "venue", "and", "year", "with", "the", "most", "number", "of", "publications", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 14, false], [0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT venue ,  YEAR FROM paper GROUP BY venue ,  YEAR ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "venue", ",", "YEAR", "FROM", "paper", "GROUP", "BY", "venue", ",", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "venue", ",", "year", "from", "paper", "group", "by", "venue", ",", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What was the venue and year with the most publications?", "question_toks": ["What", "was", "the", "venue", "and", "year", "with", "the", "most", "publications", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 14, false], [0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
{"db_id": "aan_1", "query": "SELECT venue FROM paper GROUP BY venue ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "venue", "FROM", "paper", "GROUP", "BY", "venue", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "venue", "from", "paper", "group", "by", "venue", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "What is the venue with the least number of publications?", "question_toks": ["What", "is", "the", "venue", "with", "the", "least", "number", "of", "publications", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "tables": [{"name": "Affiliation", "schema": ["affiliation_id:number", "name:text", "address:text"]}, {"name": "Author", "schema": ["author_id:number", "name:text", "email:text"]}, {"name": "Author_list", "schema": ["paper_id:text", "author_id:number", "affiliation_id:number"]}, {"name": "Citation", "schema": ["paper_id:text", "cited_paper_id:text"]}, {"name": "Paper", "schema": ["paper_id:text", "title:text", "venue:text", "year:number"]}]}
